Transcription: there is a hierarchy of ways to access and store data in a computer system the cheapest slowest way to store and retrieve data is disk on the faster and we have memory as we architect systems with increasing complexity we have additional considerations for these different layers of ways to access and store data there's Network latency there's transient compute nodes there's numerous cashing layers Apache geode is a distributed in memory system for the jvm it provides fast data storage and retrieval swapneel Bhaskar is an engineer who works on geode and he joins the show today to explain the architecture of geode and how geode is different from other and memory systems that get used for cashing such as memcached or redis I hope you enjoy this episode it's a great distributed systems dive into a application that's been around for a while but has been open-sourced more
recently and swapnil is a great explainer so without let's get this episode geode with swapping OverWatch car
 the Insight data engineering program helps software Engineers level up their careers at The Cutting Edge of how we build software involves some of the most interesting open source and distributed Technologies such as Apache spark Kafka and no sequel databases Insight data engineering is free because they partner with top companies like Facebook Uber Capital One and slack you can learn about data engineering at Insight data engineering if you go to Insight data engineering.com s e g daily you can apply listeners of this show will be Advanced straight to the coding challenge of the application process if you get accepted you get to learn how to build useful products in a self-directed program there are workspaces in New York and Palo Alto that you can utilize during the short 7-week data engineering training process and you have access to free
 free cloud computing resources and a network of over 600 data engineers and data scientist from over 100 companies in site provides the support until you find a great date engineering position at a top company apply now at Insight data engineering.com SE daily skip straight to the coding challenge does a special offer for software engineering daily listeners thanks to Insight data engineering and if you want to level up your career if you want to learn some new skills and change what you are working on in your work environment and perhaps get a job upgrade if you're looking for a different type of job or if you're between Academia and your career path and you want to build a little more skill before you jump on that career path learn about data engineering at Insight data engineering go to Insight data engineering.com SE daily to apply and Skip straight to that coding Challenge and thanks
 and two inside detention for being a new sponsor software engineering daily he's also check out the interview I did with Insight data engineering several months ago on software engineering daily let's get this episode is a distributed systems engineer with pivotal shrapnel welcome to software engineering daily so talking about today and I think the best way to get started with this is to give some historical context on where geode Set Sew in computer science there is this hierarchy of ways to access and store data and the cheapest and slowest way to store data is typically on disk and or unless you want to talk about like tape or something but on the faster end
 and for listeners who are newer to this area can you give us a brief Refresh on the idea of the memory hierarchy when I studied the memory hierarchy you know I'm back in school it was represented as a pyramid so I assume that the CPU actually sits at the top of the pyramid and the fastest memory that the sleep you can access is the CPU registers and then disappear also has this cash on on the chip it setup so there's cash in there to cash and so on which tends to be a few kilobytes the main memory access times around a hundred microseconds the disc
 activities around 10 milliseconds Switzer order of magnitude a difference and then the right exactly so you know I remember learning about the memory hierarchy in computer science classes and it's funny because you know we were learning about it in a single machine context but the idea of geode and some other projects around distributed memory are pushing this idea of the memory hierarchy to a distributed system and so the earliest big open source project around distributed systems management was who do I think is that is alright YouTube weather around and as I understand
 which mostly is mostly about storing your data on disk you start in hdfs which is a dupe file system so it's stores data and files on disk can you give us a bit of a chronology on how we have moved from that era where we were storing everything on disk and then we wanted to run up get some batch job load load what we need into memory in the performance of operation on it how it we moved from that to where we are now and moves towards that the idea of geode so it's no surprise that the prices of anybody that device memory are going down you know that I think everybody's aware of that so back in 2004 to 2005 about this 512mb RAM for my laptop that about 70 to $80 right and I was just trying to look up the memory prices now and you can buy 16GB RAM for like $50 so
 it has been a very significant change that has been Barkley enable by the memory density so so this year the memory density of ram has first time exceeded the memory density of a tradition the hard disk drive and that has helped cram as being the the main storage story to ask this but everybody is this Cloud providers providing humongous instances with huge amount of RAM and you can spend one instance up Amazon for example has this one instance type which has two terabytes of ram yeah so as we move towards the discussion of the app
 caitian beyond the fundamentals that are pushing Us in this direction fundamentals like price and cloud computing Apache geode is this distributed memory-based data management platform explain what that means so it's hard is a distributed hashmat so you know what the the hashmap then has simple operations writing system get a port and we also have these Atomic operations like what if absent remove I'm going to stuff like the Java concurrent hashmap provide so it's it implements that interface essentially and then stores the data in system and goodly abstracting of a house that is not done from from the from the client and your student data so you know then
 need to add to be able to create so we have a engine oil which is which stands for object query language have the ability to run in a your application code within geode cluster so move execution close to where the data is the data that is typically right yeah I will talk more about the abstraction that geode utilizes as you mentioned it's this big distribute hashmap will talk about what's new about that but let's let's talk a little bit that application Level the high-level Apache geode was originally designed for the financial sector for low latency trading platforms and I think it's fair to say that as RC
 have you evolved our other systems you just Justice systems like social media websites and maybe monitoring systems for any type of web application you have our systems are looking more and more like the low latency trading platforms of the past so perhaps this type of Architecture is is pushing out words what purpose was geode originally serving when it was a closed source application in the trading sector yes so as you mentioned is not open so I tried but the project is new to open source for the project itself has existed for a long. So essentially since 2002 I believe and so are first and foremost users were the finance industry and the memory has gotten cheaper now and F and more accessible to everybody but even when it was expensive people on Wall Street at deep in the Pockets too
 for doing American competition and that's where we had invited option so that the Wall Street people who are trying to salvage yard is risk management essentially so that was the biggest yusuke's that they had of the ability to run another risk models or large amounts of data very quickly in order to then judge if you know they should go ahead and make a trade or not essential AC and the whole algorithmic trading also I think wasn't wasn't the pictures were I'm not really I don't really know how much your prayer partner but I as you made it because you know they also have these telling us exactly
 send the other important is that they all said it was on the trading floor itself so when are you have this Market data right to coming in this Saturday. And then you have these trailers sitting on their desks so one of the features that provides is this notion of a continuous query to just have this crazy registered with the sellers and vinegar and the results are satisfied the plans get notified to give is Star from trades where the ticker symbol is a Google fi use greater than $700 right to you register. Query with the servers and whenever you're thicker meats that credit card area
 send Vincent push notification of to the client that that was a pattern even back in I mean this was so geode was first developed what was like 8 years ago or 10 years ago or something like that the observables in rxjs in rxjava they're really catching a lot of steam these days but it is funny that this you know everything new is actually old you know geode was implementing this observable pattern where you can push based on you know changes in the data model you can you can push changes to subscribers was implementing that back in the day you know the funny thing I like to mention is
 child development team is based out of Portland Oregon and you know just being from Portland right now we like to do things before they are cool
 Portland is an edgy place I've been there so let's OK more generally what is geode useful for cuz we've got this idea that it's a distributed hashmap it's in the jvm right it only runs the JB and that's right right okay yeah it's just a map it's got observability so if something changes in the data modeling push stuff to you more gently so what is this useful for more generally when we talk about applications you know like what they were talking to Social Network or a web app or to be used anytime you're having trouble scheduling your relational database to meet your application needs
 so typical use case we have seen is applications talking to Jude to just to do all your rocker turn off vibrations as well as creating
 and what jeweled ends up doing is it possible you could operations and then does a bulk update on your relational database so that's the typical use case that.
 recently we've also started the saying GG been used to implement the cqrs pattern to take URS stands for command query responsibility segregation and the idea here is to essentially have the ability to scale your reads as well as rights independently
 to what we're saying is you know you would typically use a system like a caca that deals with all the events that are coming into your system and and then on the wedding side you know even the word has these crazy semantics as well as the continuous query functionality on the inside of the zika virus patent
 what we have also seen as for applications that need to be deployed across various geographies in an active-active manage your can do that too so I'm New York and which ones to use the local cluster to do the training locally but also replicate that data over to the other side so that they can reconcile and do their business processing
 show you've got a bacon delivery service and you need to notify your customers when they're bacon has arrived at their doorstep twilio helps you make sure your customers get the bacon while it's hot twilio's programmable API let you build SMS or voice alert easily in the programming language of your choice all in under 5 minutes with only a few lines of code now your customers get a text or a call the instant their bacon is ready if your customers want to see the bacon frying on a hot pan twilio has video api's and SD case for the platforms that you know and love learn more It Go. Twilio.com podcast and get an additional $10 when you sign up an upgrade your account that's go. Twilio.com podcast you will only pay for what you use and it cost less than a penny to send a text get started at
 no. Twilio.com podcast get your bacon delivery service cooking with twilio's API for Voice SMS and video
 will it start to talk about the internals geode runs in the jvm like we mentioned it's a abstract and it has it implements the interface for a map the Java map so the abstractions that we should talk about are the cash and the region so describe describe what a cash is angio that's that is a data structure in Geodon and there's a region describe what these terms mean should I really give a preview of the kinds of server-side company that you want to set up before you throw a client sure that sounds good too in in June we have this member type in on call locator so essentially you which is a discovery service right so
 sole purpose of the locator is for words to find one another and Appliance servers and then it's been so you can how was your deployment across a man site so you can have a remote site essentially what a disaster recovery side but an act totally different discussion but the locator is the Discovery peace so you bring up one or more locators and then you bring up any number of servers that you want and then you just find a subwoofer with the locator and then decide was discovered one another as you know are in the cash and the reason for that is when we started on June
 10-4 cashing Jay cash and the GSR use the term cash and use the dumb region for the map implementation essentially and that's the reason why we use those terms even even today in a repeat itself has no longer uses the term region and but then you know what that DSR was meant to do but we still stuck with those towns when you see a cash in June it's roughly means a geode server running and that's it and and region in Jude is a is a hashmap and that's all there is to it actually right okay so you got
 a cat the objection of a quote cash is equivalent to the idea of anode and the idea of a region is a hashmap and you've got what's the replication model there so my understanding is like you would make you would instantiate a region which is basically just a hashmap and that region would get replicated across some number of cash this is that right so there are two kinds of regions that you can create actually so you can choose that your region is replicated region which means each member in the cluster get the same sort of information get the same data right it is completely true copy on all the notes and and then you can also choose to partition the data which you know which then ends up Distributing the data across a number of nodes and that is the most
 solution so that the two kinds of regions primarily two kinds of regions that you can configure certainly so if you make a small act like you just make a small hashmap in a small region I should say region is equal into hashmap you make a small region you would just replicate it but if that region got really big you would want to partition and then you replicate the partitions that right yes okay so geode as we said implements the map interface for job and I think the three operations are put get and remove maybe operations so you can do the Spotify app sent and send an old value and then a new value so it only works if
 are you currently in the region matches what you what you bought and essentially to that to that got removed and then it does that operation atomically what happens for these basic operations like put getting removed anybody who's work with the stereo systems knows that there's all kinds of race conditions and things you need to worry about if you can walk us through these different operations and a value from a client. The client is connected to one of the servers or it could be connected to more than one depending upon your page when it is connected to a few numbers of service request ends up on the server the server then pushes the key and determines which
 Nord of this which bucket essentially that the key belongs to and then it also knows which node in the distributed system is posting that bucket it just sends the the book across to that to that member right and and and the good thing about it is we strongly prefer to be a consistent system so if you have configured say to redundant copies for your for your data you make sure that the primary copy and the to return copies have the data before returning an acknowledgement back to the user saying that the food is completed and so if you're not and that's the reason why if you from the same time if you would then turn around and do it no matter if you go to the bank
 copy of the secondary copy your bound to get the correct answer so what about a remove operation so what kind of clothes go to the primary copy and then and then to the secondaries or is it just absolutely consistent for a replicated region you can choose to do a synchronous send to the other member competition region don't allow that and
 and the reason is you don't want people to shoot themselves in the foot right so we understand that difficult and availability scenario so we will try to Carilion sure that the data and Enzo in a synchronous replication to remote copies of what could happen if even if there is no network partition detection and if the same time and this time around it visible in Outlets from the secondary bucket of the tell me not see what it just put which theme song
 so put a petition religion that's not allowed to talk about the whole chapter mean in detail I guess that's something that you can't emphasize enough like you can't do enough shows where you mentioned cap theorem and you discuss what it is and yeah why don't you just described as cuz I feel like I probably are a lot of listeners to to don't know what tap theorem is shut up okay so consistency is availability and pee is partition tolerance and Jeremy essentially says that you can only get two of those three things
 which means to put it in simpler terms so if there is a network partition in in your system then you can choose to get an available system Auto Parts organ system system but not and you can never give up partition tolerance basically because you're generally on some kind of cloud provider and their Network partitions all the time right so one of the week without the partition tolerance want Red Wing married and seeing inconsistent data is kind of interesting because there are systems that need to be consistent and there are other systems that need to be available and
 who actually came up with that are not really consistent all the time so you would imagine that ATM always has to be because it's dealing with money and then also could stop time to withdraw money that you would expect that to be consistent at all times but she says that's not really the case it's so you know it tends to be available or consistent and so allow users to pick what they want to since you saw in a phone from a network partition perspective you can Junior George system to either be consistent or to be available yeah it's interesting how different applications make that decision the interviews have done about Uber
 generally values availability over consistency because they don't want somebody to not be able to request a ride because the database is locking to make sure that you know transactions are corrector to make sure they're they're getting the optimal route you know they just want they want the system to always be available and show they build systems like Ring Pop which is kind of did you know it has a I think I can buy you type of Gossip protocol which is I guess less consistent but it's highly available and but you know not to get too deep in the Weeds on on that one but I do think of between the that ring pop system that I did some shows on to Uber Ring Pop system and geode is the idea of connecting
 peer-to-peer Network show the different nodes in the geode distributed system these different Cash's what bunny cash is the term for node these nodes connect to each other over a peer-to-peer Network so what's going on with this peer-to-peer Network like you know when I do a put to like let's say I have a Big Lots they have a you know 3030 node geode cluster and I've got a bunch of partition replicated hashmaps across that 30 node cluster and I do a put operation to one of my hash maps and it gets written two tickets were into two notes before I can access that data so it's so it's got cloned across two nodes but how does it get propagated to other notes because as I understand it gets replicated Beyond just those two know
 how does that peer-to-peer Network performed at the more of the more of the bigger replication you know it's actually in the same plaster so so the idea behind having the peer-to-peer Network and in the first place is you can have clients in the parking to the servers and if you want to have a large number of clients right now and you can do that so you can you can say rather than having your client connect to each server to another to get get its data right so if you would implementing this consistent hashing algorithm to what typically ends up happening is then the client ends up doing the hashing and then the client
 besides which server it needs to go to to fetch data and well establishing so you know you could choose to leave the connection from all the clients if you can choose to be connected to all the servers at all times if you have a large number of clients that becomes unscalable quick right into the peer-to-peer system allows others is to have a large number of clients even in A and B have clients in the tens of thousands actually connecting to a geode cluster and if a client is then connecting to maybe only one server then that's ever be able to get the within 1/2 if the client
 the server doesn't really have the right so the fluid be Define does a get request comes to the server that the gland is connected to and then the server is then at from that point on only one half away from being able to get the date of the client requested so that's one reason for having the beauty of your system the other reason is you can actually in bed the Jude servers with in your application itself and so at that point you know you are forming this system of your application itself and that one your application then also is like only one how far away from getting deleted it needs you can do to us two kinds of typologies I guess okay let's talk
 about what geode might be replacing in certain contacts so I haven't done any shows about memcache or reddish but as I understand it could potentially replace these in certain applications is Geo Derek has been catching red as I think can be used as this type of distributed Object Store maybe that maybe it's accurate or maybe you could tell me what technologies geode might be replacing in certain applications the common use case that we have seen for for Giada's actually the applications you know choosing to use you as the story of record so we basically hired the database from the application right with application is only talking to Jill and and and then Jill has this notion of
 acute everybody's up of all the operation that happened in June and then as a public update you push those to the relational database
 oh and we also have this Den loader mechanisms for example then if you forget comes in from the application and Jude doesn't boost the data then we have this pluggable implementation where you know you could go back to the database catch your your your object from the database and then put it in that becomes available for junior from that point on words
 continuous integration gives you faster safer software delivery with A continuous integration tool like Snap CI from thoughtworks the members of your team can push changes independently of each other and they can all see their new build running against different phases of tests before those changes make their way into production the fastest moving companies that I've talked to on software engineering daily are all using continuous integration snap CI from thoughtworks is available to anyone and if you go to snap. Co / software engineering daily you can check it out for yourself and support software engineering daily with just a few clicks I had my own continuous-integration is set up for some projects that were just sitting in my GitHub account without continuous integration I got continuous integration up quite easily using snap CI if you want to be that Hero at your company that starts moving your organization towards deploying often
 confidently towards that devops dream start working with SNAP CI at snap. Co / software engineering daily your co-workers will see you working with SNAP CI and they will fall in love with it themselves often times it takes somebody at a bigger company to go out on their own and say okay I'm going to roll out see I even though nobody else of the companies using it and maybe that Hero at the company is going to be you so check out snap. CI / software engineering daily and thanks to thought works for being a continuous sponsor software engineering daily it really means a lot
 do you just use you basically use geode as your database of record and it's really big is so you rarely have a cache Miss but in the event that you do you can go to the database that's backing go2 that's on disk and you can you can just access it access whatever you do you cash missed from the database and then lru it into geode absolutely right to some cash this is a very popular cash and and so is that is and that is actually more than just you know just a cat just used to write offers this Rich data structures like a list and an assorted set and
 and it's very very fast so no but we ended up doing in injured is essentially we built this protocol adapters to when you start your server can say you know I listen to your clients on this port and I listen to memcache clients on this and I'll listen for his clients on this another board and so from that point on words you can have all those three clients talk to a single geode server right and the goal is to make the operational life easier rather than having three different Technologies deployed in the back and you can just do make do with one I'm just glad you're sober and you know you get all three absolutely
 so how does a geode deployment change as the load scales cuz you know if we're talking about a big financial application overtime probably this or The Social Network I just got any more users just give me more load on the servers the servers are going to have to change their topology they're going to grow a number to support that how does a Geo deployment changes that load scales in June the distributed system itself is very flexible so it is elastic get it up and down no problems so as soon as you bring in a new so you know if if if if see you are running really low on resources right now
 you're running out of memory essentially on your door cuz you just add a new instances and again hiding instances is simply pointing the instance to the locator and that's it so when's the instance connects to the locator locator says sure all the other adjutor verse I know about and then the new member then connects to all those members the additional thing that they look at it also does it it tells the new member saying enough shoot is the definition of all the regions that I know that are in the cluster so go ahead and create the new members and creates two regions and afternoon I skated Regency asks the existing members for part of the data right
 some buckets if you if you are have a partition region it says send me a few buckets and if you have a replicated region then I'll just gets to go and so you know why you just getting data that member itself is still available for doing all the operation so consider that I am building the server within your application itself so that member is instantly able to then from that point on Words do boots and cats and everything even though it is still trying to gather this data from an initial eyes itself from from the other members of the school Olive Garden Coral State flash fiction of make sure that no in Flight operations are missed and the state of the club cluster is consistent
 I'm so given that in as soon as you spend a few seconds. Member is then able to do operations and is a an active member in in the cluster useful geode
 it only runs on the jvm why is that why is Java so useful for for this kind of application or or you know anything about having api's for other languages I don't know just talk a little bit about the choice of java yeah so the project started way back in the day and honestly I don't really know why they ended up choosing Java best financial companies they they do tend to use like either job or C plus plus for like they're the bulk of their codebase cplusplus clients actually even though you know exactly
 same number of things that the Java client does are there some benefits you get out of the robust garbage collection of the jvm haha time we did of the jvm is really good at so we definitely benefit from the jvm garbage collection keep increasing so earlier if you had maybe a few gigabytes of RAM but as soon as you have anything north of say 1550 gigs on on 150 gigs of heat are you start to run into
 what did Jimmy I'm Community College teas stop the world garbage collection boss did actually seen you know a few users using more than a hundred gigs for for instance
 so the problem gets you in the woods that it's from that point on Words and jvm tuning is I think water Art and Science so it's it's pretends to be difficult at times to be time-consuming as well so for the one 100 release what we actually ended up doing is this memory manager on your large glass machine and let us manage the rest of the rhyme for severe bruising this off Heap memory and we ended up building this memory manager and told me know if that will number is hidden from the garbage collector then there is no sew
 the waterfalls at Rupert actually is significantly better by using that offer memory and yeah the cash but you know vs Beats only storing object I took me not storing complicated of the jobs that the gvms and and that's the division of the problem I determine which objects are live and which can be garbage collected and that's the whole reason why I J D M ends up with the stop the world bosses but in Africa is fairly simple to determine what is garbage and what isn't suicide why not why not why not do it and how many manager for positive memory very interesting yeah I worked at Finance Place briefly out of college and they spent a lot of time tuning the jvm
 because of the exact reasons that you're describing so let's talk more about the the interaction between a cash and the database that is backing geode geode will write to if it's if I guess it fits or I guess you have this right ahead log that's connects geode and the underlying database it's writing to disk how often should you expect to have a cache Miss I mean
 you know that what I think of the financial institution example maybe you've got like a bunch of stocks do you trade a lot and so in geode you keep you know you want to keep information in geode in the Geocache about Netflix in Google and Amazon and these high volatility stocks that that you're trading a lot but maybe the company decides okay occasionally we're going to trade Procter & Gamble and then when you when you need to trade that maybe you need to go to you need to go beyond the Cash & Go into disk I don't know how to how do you tune that how do you decide how aggressively you're going to evict stuff and how aggressively you're going to need to go or how often you going to need to go to disc yeah a couple of things that I can talk about this in person in this case you can definitely go out to you can definitely go out to the database and and get that
 you back but what should also does allows you to overflow values on to the local disc itself without having to go out the database is also so you can have some time to live when you put something into into geode you can say you're not clean it up after after this many seconds you can also say for each of the Region's only have a x amount of memory so you know for example if this region exceeds say a gigabytes then evict the least recently used entry right so make sure that the screen all these days you can do that
 mrs. Cena on and so it might be some reasons that you might want to give more memory for and some less important regions that you want to give less memory I'm depends upon your application the other thing you know if you can do it this way if you don't know a friend how much memory to give each of the Region's you can configure resource manager 2 and under t-shirts manager you say Monday in the heat the JV and he preaches say 80% start affecting the least recently used entry
 and you know and and that's the way to get eviction out and so with all these evictions you can have to sort certificates in action so you can say why you doing eviction get rid of this entry all together so the key Valleyfair get get rid of it or you can say overflow the value on the desk and when that so you know the good thing is we still have the key in memory and the VA in addition to be only memories Centric it also has this persistent sleigh ride so we have this right ahead login we've been 10 files on on the local disk sand and whatnot and the one good thing that we do is we have these offsets of where that value is on the desk
 and our lives together with the key in memory so you will never want more than one disk seek away from the value that you want
 which is you know which is pretty cool so you don't have you don't have to scannerdanner do anything of that sort you see look for the values the keys is always in memory you know the offset and get the turkey for you within 10 mil second time and to be on average okay I have a question about Hadoop do people use geode as a datastore for speeding up there Hadoop queries or for usage with spark or other distributed Frameworks have definitely seen is you know so the data from gym instead of sending that to a back-end database the same people send that to hdfs instead
 and then you're not under analytical jobs on on its on 100% when used as accelerator okay but you know I don't see a reason why it wouldn't be out in the open so if if somebody wants to say it is a big file or break it up into chunks and then store those tanks as ski valley players injured then then you can definitely be used as a accelerator as well marks of geode against Cassandra in a slide share and I know we talked about geode versus something like reddish or memcache but how does geode compared to Cassandra
 dish and do they serve similar purposes in another deployments and in order to use case of having a massive scale is concerned yeah I think you would and Cassandra could be compared and also seen them I guess and customer engagement so and when I say customer engagement which is based on Jordan and not accept button up my take on that is Cassandra tends to be this Korean so if you know if uses a disco whole lot more and it really relies on the desk where is Jude is mainly memory oriented and it does you
 but it is mainly made memory oriented suitable for a quick rapid look up send in an online transaction processing applications as we begin to wrap up what is the story behind geode making its way from the close Source the financial world to the open source of patchy Foundation soaking a v knew that we had this very cool project right and actually seen the rise of many no sequel data stores and all the while thinking to ourselves you know that I'm talking on behalf of my developer friends but I guess what the the higher-ups and the management ended up seeing is more and more
 Smurfs are saying that it is a good product open source and if it's not then they don't even allow you to run Busey's essentially that's what I think being patisson really getting this thing fired up and I've been trying to push and get this thing open source also for for a long time so it's it's only for the group that this thing ended up happening finally yeah absolutely it's good to see it to you work at pivotal why is pivotal interested in geode I'm so just give me a picture of what the company that's right so it has three arms so when is carpentry that I think most of the
 people are familiar with I'm the second is the the Big Data sweet and The Detour and so sweet we have gemfire which is for online transaction processing and in memory and an n and G or essentially you know which is the code of Empire and then we have this massive massively parallel analytical greenplum and you know which enables applications the the first side isn't he and what that enables to give our customers is this is this analytical this feedback you right
 architecture so I guess that that's what we are trying to provide to our customers that's the reason why people is interested it sounds like a very specialized version of the Lambda architecture okay well swapneel I want to thank you for coming on the show it's been a pleasure talking to you and I was really happy to learn about geodes so if you know if anybody out there listening has ideas for shows as always send them to me and you know if you are the best person to speak on the topic then you know in this case that was absolutely the case you know swap know you are a great evangelist for geode and I feel I feel like I understand the project to a pretty good extent I think the listeners will feel that way as well
 thanks to sinfonico for sponsoring software engineering daily symphonica is a custom engineering shop where senior Engineers tackled big Tech challenges while learning from each other check it out its symphony.com SE daily that's s y m p h o n o. Com SE daily thanks again siphano

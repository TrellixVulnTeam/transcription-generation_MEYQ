Transcription: distributed databases are difficult to operate and crate. I wants to change that Creek is a fast scalable easy-to-use sequel database that is built to run containerized environments an average software company runs several databases MySQL for relational store mongodb for a document database hdfs for blob storage in data warehouse elastic search for search do we really need all of those databases on Today Show Yoda combat log from crate discusses the architecture of any breaks down the use cases for microservices to data warehousing
mini fans of software engineering daily are listening right now through the internet browser the Practical developer is the best place to get that experience through the browser and the Practical Dave has teamed up with software engineering daily to give us a better browser experience practical Debbie's the place to read and listen to content about software engineering daily check out our new site at death. SE daily that's Dev. SE daily word from today's sponsor will get to this episode distributed sequel with crate Ohio
podcasting full-time is a great career but if I ever return to the normal World of Warcraft hired.com is where I will start my job hunt hired.com removes the frustration of searching for a job you just fill out your profile and the jobs come to you Facebook Uber and stripe are a few of the companies that are hunting for engineers on hired go to hired.com se daily to try it out and get an extra $1,000 signing bonus just for using the URL for software engineering daily listeners which is hired.com SE eat daily if you want to try to go to hired.com se daily the demand for engineers is higher than the supply and on hired.com that translates to higher salaries and happier careers for the engineers who find a job on hired I used tire to find a job before I became a full-time podcaster and the experience was so good because hired connected
what's a talent Advocate who work with me to find a job that was a good fit and the town Advocate answered my questions about negotiating salary and finding remote work which is which was something that was really important to me at the time so check out hired.com SE daily and get a $1,000 signing bonus upon finding a job which will be a great job that will give you the respect and salary that you deserve as a great engineer so check out hired.com SE daily it would support the show and now let's get on with today's episode of software engineering daily
you're not that long is the CTO of crate that I owe a containerized it distributed sequel database you're not welcome to software engineering daily so when you started building crate there were some problems that you saw with modern databases what were those problems so the biggest pearl in Lost cave systems you have to set up Master Slave configuration replicas things like that worried about Charlie and that was really a pain in the ass so running large sites we always have the problem that data layer was really hard to manage but the cool thing was we found about the technology named elasticsearch in already 2010 it was just one guy sitting in Israel software based on blocking event all that stuff that's really great architecture
like to build a database like that that's how we started to talk more about elasticsearch and why this is relevant cuz elasticsearch absolutely it's also got like 2 years ago and they get some tests ran out of bed tell reports about losing data about not being persistent but hey it's an open source project lot of a box have been fixed that has a very good track record of not losing data and also the status page and resiliency and phalor is really I think one of the best open source document the things that has been a lot of garage going on so I think it's totally fine to use it as a database also so here from from customers all of them are not necessarily only elasticsearch this is usually a very rare HKS where you can still have the situation
like in any software
 could you talk more about the storage model in the data model of elasticsearch I haven't done a show about it I don't know if it's average listener knows how elasticsearch models relative to I don't know if some other database type that we've done shows on the cob relational databases are nosql databases that's a good point to look at the show photos are self-balancing use there so we focus at created the Cherry engine and if it's equal parts are executing this. This is what we care about the one layer below is the Whole Foods stock if each other how they discover each other how to transport data this is many elasticsearch IP and of course all the utilizing the metaphor that storage East and leucine which is the mini database probably think of other people make you sick too light and then class 3 the choice of elasticsearch endorses to use
 sing for that and that's all so people don't think why are you seeing this is really really database yes it is it also already has transactions it has a lot of functionality built-in that it makes it that I really really great database with crate as you do we did a Show recently about cockroachdb and explored some of the typical trade-offs between relational sequel databases and nosql databases from your point of view what are the trade-offs between these two database types and also the trade-offs between how they are position versus leucine yes so that's a big bed dimension consistency or is it about strong acid transactional stop and the Cockroach guys they using rocks to be and build a strong transactional
 can you store a space and on top of that they add layers like you like secret it says some advantages when it comes to be at the transactions to strong acid compliance cases if your goal for performance if you go for changes of plaster if you go for four other patterns for other things that are important we think they eventually consistent model is the better approach so maintaining elasticsearch cluster Parts also we have the same characteristics there so many Cherry Creek faster it's much easier and also if you're running a fireman's I think of the Christ environment that you probably have noticed some loud you might have some Network latency there are you might have notes coming and going and maintaining the guarantees you need for having synchronized clocks and writing that stuff this is definitely causing some overhead so my suspicion is always what I've seen from Foundation to be your problem
 remember these are the guys that were snatched by Ed like saying something like that they built like a cockroach that was hard to scale Beyond 20 notes I bet so using Rock protocol and things like that might probably makes things easier however we going for the eventual consistency we are not trying to be as compliant we give you praise guarantees like three dogs right consistency you do optimistic compared to control resulting errors on the server side so they going for complex. It's a different way we are going and I'm looking forward to see how the Mike if he wants their company I've got my back in database that's probably siloed into all these different use cases like I've got my SQL for a relational store mongodb for a document database hdfs for
 black blob storage and data warehouse elasticsearch to power my search I've got all these different databases doing different things in the past if we needed different databases for different application types and has that changed we no longer has this all been rolled into one with crate is that the offering yes that's definitely be calling list of Technologies and not not to do your marketing for you we have exactly a paint this picture and the call Little Sue of Technology sister elephants + special places we take small approach Elsa being cancer that is just out there on the present and I always always on so I think the state is exploding
 Stevens bedroom for new database for different databases I mean 290 probably too much if you look at TBI engines or something like that there are a lot of databases out there we did it because we had a specific need was running a service business we did some projects with real customers with real problems that result and that's how we came up with our solution so the cornerstones that are important for us the first of all the Simplicity really having someone that is not an experience database developer or Toronto database I mean to send that is super saver thing but you need to be a pro to run a Cassandra classroom production same goes with mongodb it's very easy to get started but then maintaining it if you have to know types and that's harder also had a nightmare we stand this forecast must have paid a lot of money money for that
 so the thing me and we will talk shit was also using secret because I mean still nowadays in University people still on secret they do all that other stuff like that they have object relational mapping and I stay sequel is very strong and still but it's probably too much the whole transaction and start having strict ski mask so we going for object games where you can start chasing the Big D Nixon beagle 40s patient support legal for I even custom data types that can be starting there in the in the columns and so taking Simplicity taking secret taking your skill ability and focus on this app second responses so not better in bed whatever but stay in this up second response thanks that's very Sierra Suites Port and that's why we see another doctor competitions open source pace
 so maybe maybe we're going to need to go deeper. So I can understand this but like what are the trade-off so like I get that you have all these pieces of functionality that are all in the database that are all have been crazy but I'm still having trouble understanding where the trade-offs are coming in is it just the fact that you had to do so much work up front doing the underlined Plumbing to expose a simple API to people or what exactly like how did you roll all this functionality into one database without making trade-offs or what were the trade-off that you're making so I think the trade-offs we are we making use for example of a lot results sets if you have curious that really use than whatever gigabytes of data sets that you have to to consume like Hadoop is very good at that's not something we can do we don't have any truck control or something like that is Justified archery sting Android you fire 10000 reasons
 baby consumed and the other thing that's also a trade-off and I'm not sure if you ever really gets to that point are transactions so we can work clothes that means so start every transaction consistent even if it's running for Kenzie opening isolation contacts for writing a couple of records and then roll it back or committed that's not something we can do and also going for standard Sequel and knots in Manteca music with Alec is also hard because we still don't have to. All the time that something that is hard for people to use joints for example was a very good example of something that took a very long time I think close to 8 months to get joint stand
 playing in the scaling way this is where our Curie engine is coming in
 crate is open source could you give me an idea of what the initial version of the code base look like when you guys open sourced it at first I was with my family at the pool I have my mobile phone somewhere in the pockets and then I was just full of messages and missed calls and we got featured on the news and he had like I don't know it was just just just crazy because so many people look at us and what we have there was a simple quotes on the stand Circle and then he was firing series basically against the elasticsearch elasticsearch curious and we were using Darby to be a secret pastor at that time and had a very minimalistic Trevor
 elasticsearch was using an hour and still maintains to be in sync with live stream so just this week for example we announced also there are we had and he's already using the latest * 2 points X series of elasticsearch in the car the fact that you were translating into elasticsearch elasticsearch right that's of thoughts find me tops and telling people what they said why should I do this I'm using a search engine light on it was more the people and get it was also a little bit misleading because we thought like this with everybody
 who's your small but it turned out that the real potential was in this whole thing it is between analytical processing obituaries at 8 and operational things so they're combining their operational database that needs to care one in one database certificate something people use HP vertical for or some teradata stock for REM Staffing that's what we learned over the last couple of months is the sweet spot for what we doing and not just the channel purple State the basic thing okay and is it right exactly yeah okay and so there's some other things that are kind of like Druid and I guess Philo TV or Cassandra
 give me an idea of how people are exploring the different areas of this gradient and what are the trade-offs do you make as you explore the different areas between olap and oltp why is it hard to get both of those pieces of functionality right at the same time I think the magic are the reason why this works so well for us is again also using the same as a stye on the Lights tour of Cassius and his calendar store it allows us to do things that other times too so I think we're for sure you need some cuddy approach to have to performance on large data sets and also we don't know exactly what people like feeling so every database that is optimizing before I can't afford afterwards that they having a hard time in this analytics stuff because you don't know other people will double down what they want and the way it is are convicted in the hours
 the most the piece values can be loaded into memory example of next Mandarich whatever can be loaded into memory and then all the creation Sarah running memory so you only need the amount of memory unique spaniels yolandita memory for 1 million values and we can do this for every column So based on the columns are you running the operations on these are being loaded into memory or evicted from memory and this architecture allows us to have close to in memory performance and most of the creations and also using a mother is using this event turn on blocking I owe that is super fast in transferring data Ryan Network music stations can run into distributed wait so the combination of having this list
 I'll checked and Cassius and having super fast processing framework on top of it allows us to do things much better than most of our competitors there to the architecture which is containerized so what do you do to make crate run particularly well on a dock rice architecture so so we store so puppy on right size vary depends if you're right that makes it easy to replicate staff for the network so ask the beginning of the file is not modified anymore it can't be started to be stream to another machine if you're craving a replica you still arrive to the end of the file and that allows to have an incremental way of moving data of adding additional grab the database
 so on the staff t-shirts between machine scraping new shirts things like that that can be done by the database is running very very powerful because you have to take it offline for maintenance for adding columns and things like that so that's change of the size of the plaster of the number of shots at the location of the charts that is quite easy it makes it very good citizen in that container ecosystem and the second point is the Simplicity of the configuration of the management so there's only one thing public files there's nothing nothing special there however I mean there's one that has to mention this one last is elected for changes in their class state but this is not the configurations thing you can change there so probably not worth mentioning so
 but let's talk more about that explained this idea of a masterless architecture
 so yeah Mama Celeste architecture sure nothing architecture that allows you to go really in high concurrency so think about you have multiple process interesting data and you have Mike 2 discs to start and you have multiple network interfaces and processors that can process the data so you need to find a way they can do this independent from each other that they don't have to wait for acknowledgement somewhere other than to not rely on the component that is always available because all of this is causing contention is causing delay and it's making things slower so everything you do and interesting data on reading day to Computing data is built around this principle where are all the things can run in parallel without without congestion
 okay and crate has just one container on each physical note is that right location store because the distance from have no classes teas to Target a cheaper to use network attached storage that is expensive and slower and they still want to isolate the database from their application so the most of the time they just run one container perm machine they expose one normal volumes and then they points that application chest to the open house and it doesn't matter to me straight no you talk if they can answer all the requests and they can delegate the work together notes that are holding the beta so great is lying there like a cheeser it's like always providing persistence and the can grow and Shrink with member of service you have for your also using for your application
 what happens if a crate know dies so we are sending the check about every every section where all the notes are synchronizing face sticking out of the plaster so he had some primary shots but he was the master for the shots and had some replicas where he was holding copies of the data to another note that was holding because of his primary shards just know this going to be promoted as a master and is taking over the master for the primary shots that are lost now and then we have half of course I'm missing replicas because we're on the replicated system that has a disc Taylor what trade is doing is it starting to create other sharks on other machines racing against replication factor that tomorrow so I wished for the data so for short moments the classes in the state of under replicate the charts it's taking some
 xtronic CVT to to recreate them that's what's up what usually happens for the angels are not playing
 software Engineers are always looking to automate their work software automation let us get more done with the same number of resources investment automation work the same way well front is an automated investment service that relies solely on software to acquire and manage client accounts traditional Investment Services have many humans in the loop advising clients and taking fees the problem with these older advisory Services is that the advice that the services are applying is off so systemic that a computer could give the same answer or an even better answer wealthfront takes a new approach with software-driven automated investment that provides better returns through software engineering Go to wellsfargo.com SE daily to get a special offer for our listeners $15,000 managed for free when you open your account don't pay commissions and a cow
 maximize your games with wealthfront set-it-and-forget-it investment automation.com SE daily it would support software engineering daily and introduce you to the world of automated Investments you can see if you like it or not, SE daily thanks to wealthfront for sponsoring the show you've been a loyal sponsor we really appreciate it. Let's get on with the show
 so okay let's I want is you back to a bit of a simple question but I think it's still going to have a complicated answer if it's no it's good I talked to mr. good but explain just talked about him how does a reed work and how does a right work for a crate database the simplest just getting a video of key so you'll have to pry it tempting OneNote the notes can be using a consistent hashing algorithm to find out that a shark makes Doritos to the Chart pull out the record return it to decline easy super fast 0 point something music and the second one is if you want to have multiple record-setting to charge so there's a broadcast sent to all of the shots that are part of the tree not all tables but just the table you were asking for or the petitioner
 looking for Dandy's shorts are collecting the data the potential candidates for then they're feeling like something like that sending it to the notes to take to reach West this notice doing is marching the same price as the partial results to a whole results probably also doing some more sorting on this pre-sorted somersaults and then return you to decline that's also everything so far is also true for the realistic searches doing it if you do the stink count if you do group buys if you do a giant Sphinx like that Dairy heifer assert face that is happening after the collect face where they testing resulted in the claster to be also aggregated the stink off Map Reviews Parton in real time and we have to serve three faces. Collecting reshuffling emerging and returning it to the client.
 short answer to how to read works because of the right is just we have to ride a bike ride or a single ride and scare you just takes the head coach of the primary keys or if the routing Keys then you send it to the shark that is responsible for debts you're right there including on to the Rec cast and then you return to the client so that's rather rather easy if I deploy a database on a distributed system with different types of nodes this can make things more complex how hard is it to deploy crate across a heterogeneous architecture with all kinds of different nodes so the way we do with this is you cannot touch her out think policies to to tape it so come and scenario is that you have a couple of
 slower cheaper notes with Santa Drives that have big storage and you have a couple of notes that have more memory never see this truck and you still have a date to set that doesn't listen to yeah baby you have to distributed between just now so the old that is not frequently accessed on the slope and the hospital on the first note so when you can do it yes you can pack the notes with arbitrary text SST or something like that and then you can specify a policy to secret commands that are is shock should be located antenna system is taking care of that they are located on on these notes you can also use this if you want to have availability sounds or are things like that
 okay great so speaking of large distributed architectures a bunch of shows recently on kubernetes could you explain why crate Works particularly well with kubernetes or Macy's or any of these other containerized distributed systems so so this is as peaceful alliance between different schedulers yeah I'm happy that I don't need to have an opinion which is faster which works best for you we working with Alston Alston support traits that have scored some some advantages disadvantages what's the most common thing we have to take care of a of a note Discovery how do they sell snow Discovery for classes so a lot of the tools initially
 from the orchestration of stateless things like multiple applications when it comes to scheduling a database to pass State it's a little bit more difficult so in that regard so what you do is of me use DNS for Discovery and peace Frameworks are able to populate Guinness Records which we can utilize and then they can schedule Trey containers other things that are also challenging is the office came up and down because you wants to graceful terminate note so you have to replicate the radiator first and then you kill the note these are things that are more advanced integration with his friend Roxanne makes makes sense which of these schedulers is the best but I would love like scheduler it is with somebody from a scheduler company so either Google
 hey so sorry Amazon ECS can you give me some unbiased presentation of how you see the future of schedulers playing out absolutely and I know I know the guys I know the project managers of kubernetes I know Executives in the mesosphere and also Solomon hykes recently invested in our company alright there's Docker swarm also I think metal sphere has a really good track record in the in the Enterprise and we also see that people who really schedule so it's not necessarily only containers that you send SMS is a lot so this is an open-source framework that is super stable Rock Solid and then there's a sphere is also adding stuff on top of it that is really really really good to use and also the reason that they open source PCOS it's a good movie so I think if your goal for Enterprise in
 a lot of people use mesosphere as established platform kubernetes is I think the thing that has all the bells and whistles and is coming from production environment however this is a process that take some time and some people might be over and with all the possibilities that pay that they have their butts I think the team is doing real great job and getting all of this out and throw the unit around so I think if you were more the guy that you want to tune all the parts Vancouver net is it is very promising approach and of course the big mass of developers that never use the scheduler that did not run Datacenter or head on you to call Sis up but still want to run a disk system start naturally with machine and swarm and just take it easy and I think it will take some time until
 really use it in music production how to do the storage pecans and things like that but I think she's coming from the new start saying having problems playing around this stuff not necessarily production this is definitely going to have a big future as well so it depends what they're using our company all the three of them so depending on that makes a lot of sense it's a really good answer good answer but what about this notion of running kubernetes on mesos for example under what kind of conditions would I I know this is totally off base of like talking about crate but just very curious like what is there a reason why you would want to run kubernetes on mace O's
 probably yes if you use I mean I know people running machines on bare metal and containers in whatever so um are levels of abstraction that's what developers love to do and I think you for company is providing us or the base later than scheduled us and this is like the girl cars behind the scenes and then you try to run things applications that developer Deploy on kubernetes are on Swarm I think this is this is totally fine and you can divide it let me know so I don't know machines and then Russian machines and this virtual machines again kubernetes so that's strange stuff happening
 okay let me see what it said so I mean Edge were talking about these modern layers of virtualization on top of virtualization what are the big challenges is networking so getting back to the discussion of crate what do you do around networking what are the biggest challenges that you've encountered around networking and how have you solve them yes so we are pretty content that's also what we learnt it just recently did the test I've ever had the possibility to to run thousands and notes on Essure and straight and also try different schedule it turned out that the schedule is already used often so many parts and network connections that there was not much left for work trades because like $5,000 all into connecting in sending hundreds of megabits of traffic there
 so it's a challenge that's always what they heard from people running day to send this text the networking cost is growing exponentially and not just just leaving so that we really require a stable unstable network also for the whole split brain in whatever situation that's requirements are all the big cloud providers they have to put the solstice issue but yeah I think you're there still a lot of innovation to happen so leave a container or Beach Docker networking or project Calico are all stuff like that is showing that we still also have quite some way to go there
 okay so we hit on Docker and schedulers and tow the biggest buzz word left is microservices so let's talk about microservices why is Crate a good choice for a database that supports microservices so microservices are about the Chillicothe about speed about to change about tooth development deployments continuous delivery and getting things done and that's also changing ski mask moving day that they're having different Texas python for data that you haven't thought about having having thought about their skating upskilling down I think it's all about change and that that's what we are designed for and also the missing places to eat around that
 right and you've talked about the masterless architecture would also be classified as shared nothing why is shared nothing a good Paradigm for building microservices in
 so dumb Trump player in The Matrix Service is a good Franklin if it's a place if it's and everything that is a stateless by default is like sure nothing is Master list because you can just a PHP application every time sitting but hit your favorite dress is giving the same response are doing the response based on a negative manner in a state that has to be synchronized so what people did initially microservices lost a + Shay Nothin by by default and that is moving slow in this direction because it's much more difficult so a lot of people still use their not stokerized or containerized my sequel server that is standing somewhere else on the bare metal machine and then they plants that applications to it but the next logical step are stapled containers and that's also what Solomon's at his
 I miss quoted about stateless applications are a stateless containers this is no contract you can also have stayed in containers and I think this is the next step and that sounds about seeing more and more stuff is also persistence and state is going to move to containers and again because of the nature of the way they are scheduled because they have a much shorter life span span up much faster that killed much faster you you definitely I can text you that supports that change which is a master lasorsa nothing I can picture
 okay so you mentioned this state-by-state I'm not super familiar with this debate between State and statelessness in containers but I do get the sense that people think of containers as these very transient things that could disappear on a moment's notice cuz it's running on some shaky easy to Cluster somewhere so how do you deal with state in a container Army dude you just always replicate constantly or how do you think about that exposed to the container and let the container right on this site and you create replicas this is the most performance it's also possible to to write inside containers and I have to stay thin tight containers but this is not this performance and there's not really a recommended way to to do it because it's using this system and storing the dish there so I will not run a database in there and you should also be able to
 the container so exposing volumes two containers this is the way to go right now okay great story is built to scale up and down quite easily could you explain the elasticity model yes so what the correct plaster is doing is just trying to balance out the number of shots for machine used to create the table it's automatically Charlotte let's say you create 15 charts and you're right it down 3 notes just five shots and every note class probably a replica you have five additional notes and you have like 10 charts for Note 5 primer S5 secondaries Daniel Craig as one more note that means you have for another way for notes available for nice 20 shots that are primaries and I know I said system before doesn't matter
 30 so you will have Aids on a couple of machines and some other will probably hold a little bit less but this is just being real field in the background so if you add more and more notes shots are being spread out between the between the notes and if you remove a note then they are you can also move Two Shots before you kill the noise of course
 so are there any lessons that you've learned from people who are scaling crate to really really big clusters like problems they have or interesting Solutions they've architected yes the best moments voice always if someone is reaching out using whenever you never heard about this guy's all and you'll see a lot of faces in yours and your screen
 and then when you ask them to take a look at the best part of the problem and then you see holyshit how many breakups they're all my God what are these guys doing doing there actually I've been doing this now since 3 years or something like that this moment Vines people having the hardest time of what is not as easy for them is doing the right the mentioning how many shots do I have to create how do I partition how do I Dimension the things behind the scenes yeah that's something that's not it busy but I think speaking today we have a large class for his running on Martin hundred noticing chesting more than 3 billion records every day he's doing this since 8 months that we never heard something bad of course I have things I'm spooky moments but luckily I think they're so right now we feel pretty confident
 about handling production note Smith on large glasses
 talk some more about the the usage of the query language what are the kinds of queries that the crate sequel language supports and what doesn't support very well I know you've touched on this little bit already but yeah so you decided not to invent the new sequel dialect so we wanted to go with the three Lee S10s possible and you know good thing the standards is there so many standards to choose from so we supposed to 16926 well whatever so
 most of the times we just do it away my secrets doing it because this is what most of the people use but it doesn't have all the functionality available so the whole Chia special stop for exam to be borrowed this from post chest so dealing with geospatial data is exactly the way it is is it like in postgres with tray and I also had to support some things I can tell if you that other databases databases head so I think for the use cases I mentioned earlier like internet of things that can stand a little girl covering for most of the people like 80% of the sequel statement stating they might have to rewrite some of the nearest up for some people there already dropped Replacements to their my seat installation especially if they already did some of the stuff you have to soften your skin
 so if I'm somebody and I want to use crate but Craig does it serviced all of the queries that I need is there a typical model you see where people are using crate alongside something else music right alongside Cassandra alongside sparker some other typical tool that really complements crate well in terms of the different types of queries do you want Performance Auto so far. We don't see a people any software that you should get in touch with us NBA 3three dictionary search functionality what Mesilla works really well is if you connect us to Q's like Kafka for example directing Kafka streams in to create and storing them but also ran spark machine learning stuff like that Sydney Springbrook song on top of a square you have a lot of lot of curious they are so ecosystem our neighbors let's call it
 visualization tool tattoos without shading PC connections assume that make up a screw up and on the data ingestion side Kafka streams that buy clothing from S3 or other buckets having a boob job selling Dayton to create his neighbors BLC along our technology to close off what's the business model for crate the car of crepe is open-source it's Apache license with permissive license Music Company we are we are selling Enterprise license is on top so right now the way to deal with customers is a partnership agreement very deliver special functionality for a furnace guys that are not part of the open-source release
 prostate the center application is for example one thing I'll be working on this service Enterprises Access Control to the class there and this would be part of the Enterprise license which we hope to ship later this year plus we have some plugins that are not released yet we have another driver for the windows work and you you have to license that however we still be on company so just to give you a mansion there is maybe I have about half a million downloads of our server software we have about 4 500 classes are running in running production day and night across the globe and I think we have one two handfuls of paying customers side baby I was asked on service level agreements and Beth are using treat heavily an introduction
 so since you're open source do you have any concern about Amazon or Google just like posting Creighton like all basically offering the same the same thing but doing it Google or Amazon style that would be great if they pick up our technology and and hosted I take 3 after you need to know how on how to develop and how to further develop this tension and I'm doing open source since ever basically and usage is always goes and if you're the guy who did it if you have to if you're the guy who has to know that you're always I have had those bad so I'm not worried about this at all I would really think this would be a good idea because I always tough to convince people to get it on board of the new technology particularly a database because it's so mission-critical how big of a challenge is adoption in and how is that going
 yeah that's exactly the top point but on the other hand it's also the good point because when people leave the decision it's a big decision they made it and not really going to change it and that's also a relation half a million downloads versus like for 500 classes in production and it sounds not like a lot but people who really made the decision to sell your Nathan there this is so far some of our customers if we are not running their business totally stops so this turns out that this is a lengthy progress and then zahar Progresso we have a lot of people that heard about us we are really happy to be out of the mother of 200 databases because we want TechCrunch disrupt we Solomon hykes investor rehab couple of things that other database companies did not manage to to achieve and this is giving us a lot of awareness and then people here but it might take sick
 not until I heard something about it it's not just downloaded one can you sounds great this is this is very very different and but still looks very promising baby receive really great feedback and people just tell us and you guys are so bad at Market thing you should really think about marketing but your technology is great and that's a good a good point to start in 2016 and 17 is to make centralized database is obsolete or do I get to make centralized database easier what are the big challenges that still stand in your way from doing that I think there are two things the one is on the outside it's really hard to build is distributed or Microsoft whatever they spent years
 singing notes security Optimizer planner that's a really challenging and yeah and the other thing is adoption and also getting getting traction or more and more traction especially us development is headquartered in Europe and Austria are now in the process of building up the whole sales and marketing in the in the Bay Area from a strategic standpoint it's not a technology problem it's really about how do you play this how do you enter this Enterprise market and still I have a healthy open source community so I think these are decide the challenge at the most challenging Parts Caldwell Ohio. Thanks for coming on the show this is been great conversations I love crate IO very interesting database so thanks again see you soon

Transcription: probably won't who is the founder of mimir a software platform that helps instructors and students by moving the computer science classroom online welcome to software engineering daily thank you what is mimir there's a huge problem right now I'm pretty fan for engineers and you can especially see that in the Silicon Valley where all the companies are competing with each other for town of this problem is really am colleges there's not enough available seats in CS programs Across the Nation and it's really hard to scale-up CS programs to the hardest part of it is final BCS instructors people with cs degree Psy majority of them want to go take one of those highly competitive jobs rather than take a CS teaching position so are platform kind of autumn
call them tedious and repetitious work in a CS course like rating is the biggest thing we do a minute really lousy instructors to teach more classes and also free some up I'm so they can focus on individual students as well
 why did you start memere
 it was more personal so me and my co-founder and see where it's sending. Purdue University or freshman year and we got this idea in the back where mind since high school words up with UCS forces we'd always turn into programming assignment and it would take about a week or two at the high school level and then like 3 to 4 weeks at the Collegiate level to have a graded and returned to us especially since CSS all about Automation in like you know how fast it is so weird to quickly value in projects and I will send it to you they liked it and then slowly other schools to schools and they really liked it and after seeing that there was actually a demand for a to like this for CS courses we decide to build out a full platform Analytics
 I think statistical 60% of people that start the major don't end up finishing so we have some Predictive Analytics and place that I'm helping structures and Tas identify those struggling students and then we also sent content to the struggling students so they can redo on that force will get into the guts of the engineering behind your automated grading platform but I want to talk more about the just a business use case first as you looked at this domain of computer science curriculum management and automation more what problems did you discover where the pain points in computer science curriculum management
 it really revolves around waiting and plagiarism so there and search history of the right little strips that kind of help him create more quickly but completely or something since it's somewhere all not even instructors have to submit the projects and submit their own projects the cycle would be doing no Dropbox their assignments or email their assignments in and then instructions how to pull them down take care of him Kratom enter grades into a great book and then say you should try the feedback that she's doing that took so long with our system based the instructors spend a day or two at the start of the semester setting up their projects and assignments
 I'm in. They literally don't have to worry about writing for the entire semester students login themselves and automation systems and then at the end of semester instructions to export the great book from our system into Blackboard or whatever it is so we really took a big chunk of was eating up their time teaching a course
 could you explain how many your looks from the standpoint of students and from the standpoint of teachers like how does the you I look on either side of the biggest differences in structure sideboard ministrative features of force so as a starting workflow for an instructor would be you create your account rate of course you start creating projects and assignments in it and then if it's a programming project you build certain tests for it so you spent of the unit testing bottle office Automation and once you do that you got it done and then Stevens they can create their accounts they join their horse and then they should upload their coat if they finish assignments
 so I'd like to get into somebody engineering when you decided to start in the mirror what was the first part that you engineered was the first thing is we need I'll be the most difficult part we build websites and things like that before but never really tackle this challenge so we kind of felt like a command line automatic rain system and once we got that off the ground start looking forward to snuggling actual website around it
 what was the software stack that you used
 initially it was a lamp stack
 I'm so he was our friend Mark right back then that's what we need best then we shifted since that's our current stock is Ruby on Rails you're a lot of people complaining about PHP what are the pain points of using PHP develop within ruby-on-rails since and trying to have like a secure compilation environment like run all these questions project even though you might have that code like that could crash system or something like within like a PHP environments like back then right now we haven't disappeared things that I can talk about in a second but back then it was just a single server
 and still got uploaded and there's like a mini a portion of the server that it ran code in one by one kind of in like a pseudo cue system to get that work with PHP and things like that and something I really enjoying websites like real time not having to refresh the page and there wasn't like a super simple way of doing it I'm sure we could use websockets or something like that but with Ruby on Rails that's just like so many gems out there that makes it easy
 so I can you describe the the process of you know how you move from PHP to rails or what incited that
 Swing built version one we knew it wasn't going to last this forever it was basically a prototype we went up to 500 seats active on it and we ditch this very tasty this semester this is the first semester that's used to running a burden to rebuilt version 2 over the summer and so the Wii version one we're doing like freelance work on the side and a lot of that work with some Ruby on Rails and so that was it was an easy decision to take the next language since we all need it so well and needs
 were you able to reuse an Uber code but I'd love to get more into the guts of the of the grading system can you describe I guess the spec for your grading system like at the beginning like even when I was just written in PHP I guess what was the specs for the minimum viable product for an engineering standpoint and then a year in version 1 we eventually expand into kind of a unit test cases well so just unit test that you do some there with with your developing software and things like that so basically we just needed to
 have instructors write these unit test without having to write any code so that's the hardest challenge like how do we have like a really configurable almost option pay and where they discussed I like what they want to test without them having to actually write any code can you describe an example of like what types of projects people were your is the instructors were using this platform for things like that so we can start as soon as you submit their projects and instructors have a bunch of unit tests that just kind of evaluate the project so for the stock project thanks a bunch things to stack and make sure it works just the two strings at the other things like that
 right so what does the instructor have to Define for a unit test cases it just like this is the command line input and it should work for your program is really messy the complete details on that the way they do it is so we are in for that second for him and like in the text box the face editor that they get they may just be right like they do like stock. You'll have things to stack of me thinks this. And at the end you have to return true or false
 so if you return true that means like everything works exactly the way you wanted to if your friends false that means something went wrong and you can like cats exceptions or anything you want I'm within that space
 so when you improved beyond the minimum viable product he said the original you had this kind of one box solution how did you develop into it I don't know what was it did you turn into spider like a distributed architecture or something personal for security in Farsi just so that you know the main service not slow down every time something something soon as a project so are compilation and trading happens on Elgin suggest you add task you with notes in it so we can spend up notes and decrease know it's based on how many students are actively submitting
 and then our analytics engine separate just continuously like Brian's on data and trusted and refreshes reports for instructors
 what hosting provider do you use to use AWS deliberation there or did you just go there because nobody ever got fired for using AWS for us it was an easy Choice cancer through y combinator we get some credit on AWS platform
 interesting things to plagiarism system so that also just runs I just Ryan's on all the students submissions like continuously in every time it flag something Center for 10 seconds
 so how do you check for plagiarism
 there's a bunch of different data points that we do and that's something you don't talk about too much in detail but at a high level you can of course just look at similarity and code and syntax and like little things
 you don't like the little things program is argue about all the time like having to print the Seas on the same line or next line and things like that so we catch all the tiny things like that and add that up to an overall comparison check for variable renaming things like that at the high-level but there's actually a couple of Tricks after compilation that we can scan for and check and that's something I unfortunately can't get into detail about and then the third thing we do is just an overall fingerprinting out for them for similarity
 have you caught a lot of people
 unfortunately we can't look through that data it's that's pretty strict and within 4 below what we can do and what we can't we have high-level metrics on it and we do have some information on how well does Catching things on that's something you can't really disclose interesting what is FERPA laws that protect students privacy a biscuit Elsa school that you can't smell like students grades and you busy can show the students. Stu anyone live without their express permission it's what I think the biggest part of it and then date also has some rules on how you handle data
 how does a regulation affect product development at mimir so somebody could see like somebody else's information so we have to be extremely careful about that so. That's just more of the programming side as far as this lot of cool things that we want to build in there like competitions it like competition style projects and things like that you know where I don't know use case exactly her grading side but I'm in Stockton could be like you know everybody has to program this the person who has the best run time he don't gets bonus grade but to do that we kind of have to show students how well they're doing in comparison to each other
 so you can't really do that at all I'm going to hide that information but that would just be like turning in any other assignment so that's one thing off the top my head I know we can do how do you bench mark how well you're catching plagiarism if you can't actually know you know how it's performing The Wild the projects and we have information on that on which one of those were plagiarized or not so we run it through that
 okay interesting and have you benchmarked it against other plagiarism detection software the only one that I am and we haven't run into breakfast spots on it but based on what we've heard back from instructors are systems very similar afro an index different websites like a stack Overflow and get her and make sure students are just downloading phone putting that in as well
 can you describe moss in more detail at the history and how it works
 I'm sure I'm from the one of the papers that I read up about it before of it is a fingerprint so just fingerprints all the different file so you know each other and outputs of the parts through written by Stanford professor and I believe that
 what is a fingerprinting algorithm. Every other character you kind of like take different chunks of the the text and then you kind of character is that is like one surf Dana Point and taking like how you take those trunks as one of the hardest parts and then you just compare those different data points that you generate which represented you know bigger truck than one character with all the other data points from fingerprinting other files this helps you catch things like you know if they just move the functions around like just rename variables things like that
 is development for Moss still ongoing or is it pretty Frozen in Time as far as I know there has been too much direct development is also used outside by the academic space so for like court cases where people are arguing. Copying Philadelphia
 do you think about expanding into that space
 we had a thought but it's it's not right for us to focus on right now the main reason we just need distraction for us definitely see your plagiarism algorithm evolves over time how did you build this evolutionary algorithm so he continuously takes like the some of the information that we can collect from I'm running to play chess analysis and just beat it into like a pipeline where it runs this huge success phone else's which one I wanted my cell phone hers broke and basically determines like if things are false positives or not or dislike are algorithm is always the same one pair mean if it's been play dress or not and then it feeds the information on if it was play tristand the code into the machine learning portion we try to determine
 does a false positive or if this is actually case of plagiarism because there's a different case when it's dark there actually flag this that's something similar to this last case of plagiarism or there's a case where instructor saw this play for the report and said no this is
 can you describe the machine learning techniques in any more detail
 chorizo Amazon's machine learning systems are really nice in that it lets you plan like without even much experience it just lets you feed a data set in and start making predictions initially and that's why our production systems are running on but there's different kind of variations on the calculations that are behind how you make that predict that are better for different cases and so that's what we've been playing around with the most recently by like I'm in based on probability of this happening or that happening based on no certain number of inputs for us the input select different zip code
 what are the things that Amazon is black boxing there do you know any of their algorithms or what exactly they're doing under the hood that machine learning programs and what they're doing behind the scenes it's not like something that's never been done before
 that's something I haven't read too much into it why is this interesting I hadn't heard of this process before that you just feed it into this totally Black Box web service and it spits you back the answers that you're looking for like what columns are inputs what's your outfit like parameters and things like that just by call him names and then after that you can just start like asking for predictions based on inputs if it makes it so easy interesting so what language is your automated grading system written in his is the is the backend portion also written and Ruby python python
 it's just what we felt most comfortable with Mike myself I'm so I roll my eyes so I used to I don't version I guess you when we're done like testing idea by myself in overtime I've just been doing less and less coating I'm so one way co-founder sleeps all the back-end development Riley will my other coat underneath the front-end development I kind of like project management over here and there so my co-founder that does the back-end development he don't recall fluent Python and I forget exactly what other languages he checked I know he checked see for sure but you just thought it would be the most flexible for what we wanted to do
 can you describe like end-to-end what happens when a student like I mean all the students submit their projects to the instructor instructor submits all the projects batch the system of the students submit their projects to the grading system and get immediate feedback with their own project okay you know you have know your grade in advance instructor uses scripts to help him create more quickly they only get 3 Smith wants to say like so email or drop box of doctor like up like the black or something like that and then once they're done grading there trans grades so there in media feedback loop instructor could you know lets you and submit 5 10 times I'm so stupid can submit once
 and see that they only got a 40% and there's a lot of help and feedback systems built into the platforms instructors can like have pre-made help depending on what parts of the projects you and so they can see that they got that 40% and before if they just got a 40% on a project if you don't move on to the next project there's nothing they can do about it but now they can go back see what mistakes that they made fix those mistakes learn from those and then some it again for hope they better score
 how are the computer science teachers responding to this product to answer a lot happier too cuz like bendy the multiple submission and feedback loop and they're really happy as well before they come really like beat their student's code sell their folkestone was creating but now they have enough time to just like look through every single submission that seems to say don't have to actually run tests on it and leave comments on the code to the something else very cool so that's like the opportunity to learn from a stylistic standpoint
 cool there's a product called webcat which is I think it's kind of a competitor to you in a way which webcam has an acronym for web-based Center for automated testing how does Mimi are compared to webcat and then another big thing is when cats self-hosted where is where cloud-based so you don't need to go run an eMachines monitor that have somebody on like the school staff maintain it
 when can also lacks in like any big analytics or plagiarism I'll give them so we're we're big stuff up there we're running in over 40 schools right now and I'll say close to 20 of them were using webcat when we approached them and it was a no-brainer for them to switch
 so I have all your sales been like no brainer type of situations or have have there been any you know hard sells well we really try to engage in Pilot programs before we do is sell moving money around an educational institution can take a lot of time and return any more about getting this into the hands instructors instructor says they're interested we give them access to the platform and they can start using it to teach and we limited access to one or two semesters depending on the school and during that time we take care of the rest of the sales process so it's been really easy to engage I'm all these schools cuz there's basically no barrier to get started
 so it sounds like you don't need a sales team
 yeah we initially we did a ton of outbound Outreach tons of cold calls tons of old emails but right now we stop sending out any marketing material making any calls and we get you know 5 demos a day and easily
 what's the cost structure
 survey depends on the school so we we there's a few schools that were completely giving it away for free there an extremely low income school and they can't afford it but typically it comes out to about $25 to how to get business Blackboard in college and I was just like appalled at the product that's like this these guys must be making a killing off of this awful product
 but so I'd like to talk some about y combinator this episode is part of a week of shows about y combinator startup accelerator that invests in the early stages of tech companies with that being said let's talk about your experience in y combinator so when you originally applied what was the situation what did your product do
 I'm so glad we had the AutoTrader down for like just Java and C still on the PHP platform basically just Manassas nothing like it is now and salsa Pace analytics you know but they haven't been fully developed yet but they were in the states like they could be used in production
 and what was the response from the Y combinator Partners in the people at the company win when you presented that product to them they say they're very passionate about getting more people programming as well instead of course love to see more insuring talent in the valley and also for the rest of their portfolio companies do something else I could touch on is we have a second side of the platform for recruiting so we have all these CS Dunes working on the The Manor platform like doing their homework and things like that so something we're doing two semesters connecting those students directly with the full-time jobs and internships so that it's kind of like a full cycle on the platform
 do those employers have any insight into the grades that I assume yeah they never get to see the anything based on their grades and of course there's a future where like students could potentially exposed Gray's that they wanted to definitely that's assuming once they can share their grades with an employer and you should employers ask for official transcripts from the University richest the thing is you have to have students explicit permission to share their grades would like a specific body of people
 that's such a killer
 application of being able to like send this to me a resume or a list of grades that you've achieved is one thing but being able to send like a comprehensive background check every time I submit a project was a hundred percent correct that's a lot more thorough and provided some information like that just nothing but it's right now and something else we can work me on is letting employers find of run competitions so I can go and if they're strong and algorithms I'm so we have this problem but we want them to work so we can put that in when they can work on it
 have you looked at Piazza how does Piazza compared to Tamara like this is there are there synergies do you see people using them in concert or is it like one of the other piece on the system yet yeah for those listen to don't know what you got to say I think the best way to explain as it is it's kind of like I don't know sort of like a slack but like less asynchronous for people in classes to discuss stuff and also employers use it a lot I think so
 what was the most counterintuitive piece of advice that you got at y combinator
 counter
 I don't want one thing that catches a lot of people off guard is growth versus revenue and how important you know each pieces so it really depends on your exact situation I'm some for us at the start of the batch Road was more important than Revenue so basically like we were getting schools on board without even discussing pricing or anything like that that was interesting is completely forgetting the fact about any like your mom dies in the product and just getting users
 what was your metric of growth like you're your Prime metric schools and then as we get closer to demo day it was Revenue in Pilot programs
 okay how valuable has the Y combinator networking aspect been
 that's a very valuable one of the best things you walk away from YC is the network
 see you at pretty comfortable with your batchmates to ask for help there's there's you know email groups and things like that where you stay in touch with your batchmates few other systems there in place and so I cry I feel comfortable sending out an email to everyone that was in my back just asking for help on anything and if somebody in my password to send a thank you note for both you know out if I was going to help them I don't think I would have stayed doing so
 did you ever get like any Silver Bullet emails from people were like you know you're like I'm having trouble this thing and somebody sent you something that just totally inflected your product strategy
 I know me we've gotten some introductions from other people would have been extremely helpful in moving us forward to you what to do a few different Publishers and things like that I don't think we're at a point where we don't publicize all discussions we have open but it's definitely been helpful
 a lot of bit the tribal Knowledge from y combinator has become publicly available through Paul Graham's essays and Sam Altman post and you know just stuff on Hacker News so with that in mind is it worth giving up the equity that you get for being in exchange for being in y combinator
 I definitely so you know if I'm working on a company after this I've definitely fly back to Y combinator oh wow the partners know exactly what they're doing being one of the first day since they've seen every problem at least a thousand times I'm so if you come to him with a problem odds are they already have solution for it
 man you still retain access to the partners after you beat that summer program that's always helpful and then being part of the network yes you direct access to all the other Founders so one it's it's it's a great social proof they're fun people to hang around with and also they're awesome
 so yeah that you mention to have seen these things before they often have the solutions is there so are you implying it like if you go and discuss something with a Y combinator partner you'll often times get information that you would not be able to find it was publicly because it's so much of this has become available
 did the partners just essentially cut through the weeds of stuff that's publicly available or do they sometimes give types of advice that is totally orthogonal to anything you could read online
 I am not familiar with all the material why she has available publicly so I can't say for sure but it's a lot faster so it knows 3 months we so before I came into work I'm there we assign 7 schools over the period of a year-and-a-half in those three months of being and just having their support rapid feedback Cycles on like what we're doing what we're trying we sign was 240 schools
 Interstate yeah
 I just talked to the guys from Full stack Academy and they said that one of the big assets is the immersive properties of being and why, there's like you can either on one hand you know you got the shirts only got the institutional Knowledge from from essays and posts from Paul Graham but the act of actually being immersed in it sort of like you know you learn you learn a language you go and learn Spanish if you want to actually learn it you get immersed in it go to Mexico or somewhere else and that's best for the analogy but I think they gave
 yeah definitely and then they there Stephanie accountability in there too so other events you're always talking to other Founders and seeing what they're doing so they encourage kind of environment of you know if somebody sets of goal of doing this next time you see him like asking about the go how they're doing if they've gotten there is any way you can tell things like that
 are there any downsides to y combinator
 can be stressful at times but I don't think that specifically why found it it was during those three months you trying to go 10x so it is a lot of work so you have to be prepared feeling in
 what about hyper-growth like do you think that hyper growth is a necessity for a business or is that kind of something that has just been codified by Y combinator and another investors I'll be grinding at its early maybe no toddler schools by now but nowhere near as well as we're doing and would definitely not be at a point where you see fundraising company to go for hyper growth whether or not they have investors
 yeah definitely yeah you don't need an investor to grow NYC did investing us but we didn't need really that money to do anything a lot of what we did was a lot of you know manual SAS programming sending out emails please like that
 yeah I know did she cuz you could you mention that the stress was is kind of like a downside and seems like you could trade off stress in exchange for I'm so you could treat you can trade off some of the growth in exchange for less stress you know is it really worth trying to hyper grow in exchange for making yourself stressed out
 never ending up with the homeboy
 I mean I think it's still worth it cuz it's in 3 months apart we're down to just 3 months it gets you the point of a nice goal is for your company a lot faster interesting I'd like to talk to him about the future you know like I said we talked to me just now and
 these Discovery boot camps are growing do you expect to support that market
 if there's a way for a platform support either way dancer with slight modifications I'm definitely an online school for the Arts more conventional degree programs in high schools there's a lot of things behind and Order of all these psychic like full stack Academy all these online courses there like they teach you how to program you know in you know a week or 3 months or whatever it may be and yeah I think those are great but to solve this problem for the long-term my personal beliefs that we have to talk later face so far long-term goal with our platform in Collegiate force is this the kind of modified what material structures are teaching and we're working on Partnerships to make it easier for them to teach you no more modern technology smart
 courses that are relevant to students finding a job right now and then we're also trying to tackle the high school level that's that's the second big thing that we're working on your platform like a speaker helped us build it to God you need to do this I know if you saw this news recently but then your part of New York just announced that you know in 10 years every single high school there has to start teaching computer science and in Subspace I I don't remember the exact like you know District but like that's 1.1 million high school students so colleges are already struggling to scale up there CS programs cuz as a CS graduate I want to go work in the valley I don't know so they want to
 there's not really for sure but you know what you're saying like a high-tech company I don't miss anyone teach high schools will have the same problem trying to attract that talent to come teach and there's definitely a lot of passionate you know computer scientist to you're really passionate about teaching and they're doing a great job but there still a huge gap that that's going to be missing our goal is to make it as easy as possible for not only all those high schools that have to start teaching CS but every single high school to start teaching NCS Force very easy for them
 is there any trade-off between making a platform that allows for automated grading and a trade-off between that and projects that have more creativity and more flexibility
 yeah they're definitely is
 like I know there's a few courses that we definitely can support what she wants you know kind of like build their own thing throughout the semester and dos does lean towards Mike higher level courses and I definitely agree about their what gets you in some gauge more but the lower level it's it's very difficult to kind of allows us to do that if you have a hundred percent for us it's it's extremely difficult and very soon as working on their own project to kind of go around and help every student with their specific problems if they're passing about CS it's not hard for them to you staying at the Greene
 yeah and the other projects I remember really like in college word something like the the Netflix prize type of competitions where it's like you've got it is automatable you know I've got a very straightforward Target you're going for at the same time the Bratz that you can explore in the project is is enormous so I mean in and it sounds like memory could totally allow for those types of projects
 what are the things we struggle with is feature creep vs. flexibility so working on what what are the trade-offs between feature creep and flexibility as many of those as possible couple times a week there's always an instructor that need something super specific to their teaching method an extra button or do you know I don't have to conform to find the standard width platform set up to something you don't really like doing cuz we we like but if we add this one button for this instructor we're going to get another like you know feature Quest later this week asking for another button to be there I'm so over slowly over time like you know
 right side of your face just going to have like 40 different buttons that do like super specific things they checked her once since I like the most popular those and only having them while still finding a way to keep the people who accepted happy
 yeah I certainly remember a lot of extra features that never used in Blackboard
 so I'd like to talk a little bit about your background like how did how did your background lead to you starting the Mary would like when did you start learning computer science and what was your route to this company today are we did like a little Consulting business it started off just family you know websites and like playing around with abs know some decent size projects for different companies like across the Midwest and then once he kind of graduated high school we kind of left that behind and he started my freshman year. So that's what we talked about this phone auto correcting concept with our instructor in high school little bit later on that idea you never acted on it kind of came to college like this problem
 you know just with art CS plasma took its its other places too especially at the Collegiate level when the classes are like a hundred times bigger penis and then there's a big Seed Accelerator call the boiler Purdue accelerator run by students with a lot of support from local entrepreneurs speakers from the valley through it and some competition $10,000 a seat Capital again for no equity after awhile to realize that other schools need this as well and then finally applied twice, did last summer and before she have to get in the tennis program went to school at Purdue and you're still based in the midwest why did you choose to stay close to your roots and not move out to Silicon Valley or New Yorker another tech hub
 so one big thing it isn't the Mane thing for this cost of living so I remember saying out in San Jose scale for the three months and it was $1,000 for just this one bedroom apartment with one bedroom and Loft and it's not super expensive in a 4 bedroom 2 bath apartment in West Lafayette in my personal rent is like $300 so the entire apartment is like half the cost of what are one bedroom was on the rent big thing in fish general cost of living and where else are really close to Urdu
 so they helped us a lot there's a Purdue Research Foundation that started not too long ago that's Mercy Health startups get going but they've also really engaged in student startups and like the non produce ichnology startups break out especially helping us with fundraising anything that we could need
 has it been harder to attract and retain talent in Indiana
 are definitely not being right next to produce campus and eating is growing startup up nowhere near close to the valley yet but there's definitely more and more stops every time I go down to Indianapolis and there's some pretty big movement going down to track for startups like if there's a huge tax credit for so where you still know a lot of the students really well so we got a lot of people that work with us or part-time. I work this part time I'm also attending school that's awesome you know working with people that we know that are really smart they go to the Big Ten school you know one of the best schools in the nation and it's awesome and I'll just be right next to campus and making it easy for them to get some real world experience and I'm also not as expensive as hiring an engineer in the valley
 interesting
 I look at being a closed-off what is an engineering challenge that you're working on it in my mirror right now
 let's see one thing that we are working on it it's more advertisement is providing content like this is basically like analyzing their code what they're submitting figuring out what parts of their codes like airing out what part of their code is failing and then presenting content Autumn like a hundred percent automatically to help them with the specific pieces system that we're working on right now
 I just can't talk anymore about that technical challenges of what you're experiencing with that since we kind of made like a template for him so it's really just too I'll give them behind this that power sit still like what do we need to look for in a student code like what part of a failure so I'm trying to think of something in specific
 is the simplest way we do it right now is if you look at the line that has an error and like identify things on that line like if statements and things like that and percent content that way but usually misses the mark does the line that says there's an error on is not always the line that there's an error and it could be something else that causes air since we just like I would say it's not understand engineering were talking about the Richmond
 fascinating well process it's been a pleasure thanks for coming onto software engineering daily

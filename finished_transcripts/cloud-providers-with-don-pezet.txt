Transcription: in 1999 it took $50,000 to buy a server once you bought that server you had to know how to operate it and maintain it today cloud service providers have changed how we build software servers load balancers networking storage these Hardware concerns have been turned into software Don possessed joins the show today to discuss the fundamentals of a cloud service provider these are the basics that you need to know about building and maintaining your application in the cloud Don is a host of itpro TV a company that makes training resources for engineers and operators full disclosure itpro TV is a sponsor of software engineering daily but I also use itpro TV personally this is not really sponsored content it's just me interviewing somebody that is a sponsor of the show if you like software engineering daily by the way check out our newsletter software weekly every week we spent we send a curated
list of Articles and blog posts and videos that the software engineering daily team has been enjoying and has curated you can sign up for the newsletter and he's also doing the slack Channel by visiting software engineering daily.com and with that let's get on with this episode after a quick message from Chase sponsor
 as an engineer you want to minimize skill ability issues when there is high traffic to your application you need your content delivered with 100% availability cash fly is the content delivery network with the fastest Global throughput every application needs a CDN whether you are in gaming or add tack or social networking or e-commerce if you're at scale you need a CDN go to cash fly.com that's c a c h e f l y. Calm and use promo code SE daily for a 14-day 2 terabyte free trial 65% of cash fly customers use cash flight for software distribution because cash why has the fastest throughput globally for large files try out cash flight for free today there's a 14-day free trial up to 2tb bandwidth and if you use promo code
 I see daily you can help support software engineering daily if you want your app to be successful can't have delays and down time so check out cash fly c a c h e f l y calm and use promo code SE daily for a discount would support the show now let's get on with the show and thanks to cash fly for being the newest sponsor of software engineering daily
 Dump is that works on curriculum for itpro TV Don welcome to software engineering daily makes Revenue Service Providers what is a cloud service provider
 so the idea behind a cloud service provider is instead of you providing infrastructure yourself you kind of transition at risk and responsibilities over to somebody else some company that is out there hopefully in more than one location and they basically take over the it operations at least to some degree for your solution minimum services that I would need if I'm going to put my application on a cloud provider
 so it kind of depends on how far in you want to go right there they make it where you can just had to dip your toe in and test it out a little bit or you can go all-in complete infrastructure a kind of originated even 15 almost 20 years ago when we had colocation right where you set up your own server you did with the operating system the software your application you were fully responsible for it but then the server itself was put in somebody else's server room so I could reach out to an ISP or somebody that was in a more ideal location than you and internet scenario really all your Outsourcing there is power redundancy environmental maintenance security of us are as physical security but everything else you keep as part of your own responsibilities but if you go all-in where the service provider is providing every single bit of your resource is really just the application that you did what they take care of the storage the operating system the server's the Hardware security maintenance everything and you just worried
 the application you've written which is really an ideal thing that term all in I saw that in a number of presentations at to an AWS Summit people talking about going all-in with 8lbs was one of the first the first cloud provider to really do this to a large extent than what people were doing in the 90s maybe in the early early 2000 what are the things that AWS started providing that was markedly different than the Portico I don't know if they were called the cloud providers back then but whatever came before I think it was a song called slice hosted like some other stuff around then
 they've been several providers over the years and I think what differentiated at WIC in NY they become the 600-pound gorilla is that they didn't initially set out to be a cloud provider they said we need this online shopping website and we need to be on all the time and then as their popularity grew they needed bandwidth and throughput and they just kept growing growing growing but they had the infrastructure that was way bigger than what they actually needed but they had to have it for redundancy and so after the fact they look at it said use as much of the resources they have available but most of the time they had equipment sitting there idle and play said you know why don't we just rent this out to people and let other people use it when we're not using it and so what you had was this infrastructure that was not specifically designed to be rented out it was designed for the damn it so it says I'm really really well the other Cloud providers that people like like Microsoft and Google
 Rackspace those guys they didn't build the infrastructure for themselves they built it to be rented out and as a result they focus on certain small areas and it wasn't a complete solution like Amazon's was so we've kind of brush over the top level parts of a cloud service provider let's start delving into some lower-level elements of it Security in the context of a cloud service provider what does security mean security is is really over look in the cloud environment and part of it is just too confusing the terminology because you have software-as-a-service infrastructure-as-a-service platform-as-a-service you all these different AAS type services that are out there and the security element varies depending on which one you choose if if you go it will use it all in term again right if we go all in with a cloud provider and you know maybe we're doing an OJs application and so we we go into Amazon
 fun and we use elastic Beanstalk and we upload our app in there we're just responsible for application and the normal security applies right if there's any input field you got to do input validation if you got stuff like that you've got to take care of it that's your application but you don't even necessarily know what operating system your running on so the operating system is being patched and updated by Amazon and the hardware and firmware is being maintained by Amazon and the the hard drive or does he power redundancy networker done to see all of that is being managed by them and it becomes invisible toss and a lot of us don't even think about that when you think Security will you think viruses sequel injection attacks man in the middle attacks we don't think air conditioning we we don't think locks on doors right there the physical side of it and the cloud providers take care of that where that why is air conditioning relevant to the security discussion that
 they really did a great job securing their facility you could not get in without being authorized their Network or secure there firewalls were top-notch and someone managed to shut them down in the way they did it was like going to the air handling units outside of the building and they stuck a crowbar down in the air handling unit to stop the fan from spinning and of the fan couldn't spend it couldn't get the hot air out of the building the hot air stayed in the building and the service thermal shutdown it was a very low-tech attack that basically took the building down and it doesn't have to be maybe just an AC unit breaks if you only have one air conditioning unit and it breaks you can keep your servers online so it's not all about high-tech sometimes it's just regular resources that we depend on to keep those servers up and going
 so when you hear about these some companies that stay with on private servers because of security concerns like you hear this a lot from Banks or other larger old Enterprises are these security concerns legitimate or are they stuck in their ways what exactly are they concerned about
 some of them are legitimate some not so much I used to work for a bank in and we had what was called SAS 70 compliance and it has a different name now but the back then the rules were very specific about where we were able to store financial data and if we went with a cloud provider. Provider also had to be compliant they had to meet all the various requirements even though they aren't a bank because they're holding our data they would have to operate like a bank and if they didn't invent the date of might not be safe you know when you go with a cloud provider you don't just have to worry about your servers you have to worry about their employees do you trust an employee's and I I make is joke all the time that I'll throw servers in Microsoft Azure or Amazon web services and I don't know a single employee in an AWS data center I don't know a single employee than as your data center I do know some of the Google do you trust these employees that you've never even mad so we've got to make sure that we can trust those employees at the data is being stored safe and some people choose not to do the whole
 software-as-a-service model because it's too much trust and then if you back off a bit and do platform-as-a-service so now the provider is handling the hardware for you were infrastructure-as-a-service for the handling Hardware you encrypt your hard drives and runyoro asked there's still some exposure to those cloud provider employees and you get risk so those types of companies will usually accept colocation a lot more than they will going with cloud services but there's no substitute for just maintaining the servers in house in it that doesn't mean you're now it's suddenly immune to attack right you still have your own unique problems but at least you don't have to worry about the cloud employees different than networking with on-premise servers
 hide it the biggest difference is going to be that with most of the providers when you fire up a cloud instance it's going to have a public IP it might have a private IP a sign but it's 121 added with a public IP addres does it NWS does it Rackspace does it you know that you need access to your server and they do it through a public IP when we bring a server up internally it's private unless we choose to make it public the cloud stuff usually defaults to public so we've got to take steps to restrict that and if you look at it I keep using AWS as an example of the really kind of all all the same from that aspect but but they're the biggest so it will kind of continue when you spit up a Linux box with AWS it has Port 22 for SSH open to the world and when you spit up a Windows server in AWS it's got 3389 for remote desktop protocol open to the world so anybody could hit that port and attempt to login attempt a brute force your server so that's a risk we don't have a local service cuz we choose what opens we just have to make sure that we go through and secure those ones there
 that's the primary difference when you fire something up in a cloud vs firing it up locally and on the network side you've got to work to isolate that a little more
 and when you're creating your network on AWS for example has the notion of a VPC what is a VPC for somebody who is new to Cloud providers need to know about a VPC optional now the required it's a virtual private Cloud so instead of having a public Cloud you crave use Virtual private clouds and now they operate more like what we expect you create a server in a VPC and it's isolated and then you use once effectively of virtual fire while they're called security groups to Define what traffic is allowed to come from the outside to the inside what's allowed to pass through into that V PC and you can even use the AV PCS amongst your own server so I might be one company but I might have five different bee species one that's public-facing one that is DMZ database servers one that's internal servers usually start isolating it like that and that way if an outside attack or where to compromise one's system they be held within that V PC
 not be able to Leap Frog into our other server so you could give you a lot of power so what are some other usages of ppc's
 they're very similar vlans so like in your own server environment you might use Virtual local area networks to create segment and broadcast domains or usually security purposes optimization you can use dpc's for the same purpose the other reason that the area where I use bpc's a lot is you might want to have a cloud that's not public maybe that's not your intention is I I don't want my web server email server I want my internal service up in the cloud because they're going to be more stable and so we might want to build a permanent VP VPN tunnel between are on premises environment and our Cloud servers and so you can create a VPC that has a permanent VPN tunnel to your infrastructure and now somebody on your corporate Network can access Cloud servers and local service at the same time and maybe not even notice the difference which allows us to set up for failover for like a hybrid environment where four main data center fails are Cloud environment is already up and running or car Cloud environment fails we got our own premises equipment is up and running now we get the best of both worlds
 there are companies that are explicitly focused on networking like I think about Cisco Amazon is not a networking company I would imagine there are things that I can get out of Cisco networking for example that I can talk it out of Amazon's networking that's true and what I would do about that is there a way to shut up some kind of working it's like a hardware type of solution so how would I connect that to to a cloud sure so some of them not all of them but some of the vendors have done a really good job adapting to the cloud you know what an example would be like liquid AWS security groups I mentioned earlier though the software firewalls they're not very Dynamic and they don't they don't do like attack inspection and things like that so they're pretty limited compared to a real fire walk then you look at a Cisco firewall I can a essay and the powerful didn't they do a lot of different really cool things so it's Cisco did
 is a release What's called the sav the the virtual form of their ass a firewall and it's really just a virtual machine that you can spin up as an instance inside of AWS or they do it in a day or two and then some of the other providers so that now you get the full feature set of a Cisco firewall and it is not just firewalls I use that as an example but I know F5 has done it with some of their big-ip devices their load balancers so you've got the off of the the functionality from the cloud provider that might be limited but then you can go out and license these is not free right but we can license the F5 Cisco Juniper checkpoints at 10 to check when does not Dell but they have those were full appliances you can fire up and really get the extra the extra rooms that you need to either secure a better manager Network actually setting up instances of compute on Amazon or azure
 how do I select the right instance type how am I going to be a question I have to answer regardless of what cloud provider I choose right it's kind of challenging right because one of the things they all advertises how easy it is to scale-up you know what the cloud there's two ways of scaling you can scale up or scale out if I have a server that's under spect but doesn't have enough memory I can just add more memory to it that's scaling up but there's a limit of threshold we get eventually weave added as much memories you can and there's no more we can add and the solution is to scale out to add more servers and so is that have one server now I have two or three or five hundred did depending on the type of service and I'm running it if I'm Twitter then I'm going to need 500 servers or even more and if I'm an overnight success right, they just all the sudden goes viral I might need 5 servers one day and 500 servers the next day so being able to scale out like that's really important and choosing your instance type is really going to influence how you scale because
 you might choose an instance type that has tons of memory or tons of CPU and then you need less servers because it's you know they're each more powerful or I might choose to go with aloe or end in since type maybe one that only has 2 or 4 gigs of RAM and for CPUs right there that's not a very beefy server for me but I might choose that because I know I can scale out and add more of them as I need it and the way I normally look at it is if you have consistent utilization so if it's like a business server business servers are pretty consistent load from 8 to 5 each day and we know what they're going to need I usually go to larger instance types and that's why we're not scaling is often but if you're at. Com if you don't know what you're used to going to be like tomorrow or if it widely very is right at I know where I 240 V servers very pretty significantly and so there might be peak times and slow times and if you want to get your real money's worth you'll do smaller instances to seep
 maybe for CPU is 2 gigs of 4 gigs of RAM and you might have five running at 6 a.m. and 50 running at noon and then by the time you get to 6 p.m. your back down to 5 again you can scale Up and Down based on demand and that's going to be really flexible if you have smaller instances but you've got a plan your software to survive that night not all software is written to be scaled out like that so you've got a really kind of plans that early on in the engineering pays your software TV servers and I just I'm doing a software Gene podcast which is a media company but I don't really have to I don't think much about I don't have to I don't have any Amazon Instant is running for example your job is but it sounds like you're both a teacher on by Depot TV have watched a lot of the videos are very interesting very informative but do you also spend a lot of time on the software architecture of the site
 I wouldn't say a lot of time anymore I built a lot of it early on and I've stayed involved with it throughout because for me it's important keep my skill-set relevant if you teach too much then when do you learn right so I like to keep my keep my hands in the business and and work with that I also just find it really interesting you know it's it's kind of my hobby I like to work with the Technologies and see what's going on and so with all right approach abuse servers I have an infrastructure hear that we've got a staff a for developers and a handful of it guys and they really manage our equipment some of it we Outsource we use Music Cloud providers that take care of a lot of our stuff that we just don't have time for it I don't have time to my monitor hard drive health and so we use cloud service we don't have to monitor that but we do have to monitor our site utilization and see if things are getting busy and plan for scale and and we leverage that now we actually have a bit of a hybrid solution year were some of our stuff is on mediatemple which is hosting provider and then the bulk of our stuff is in Amazon website
 this is me is that we have a little bit of Microsoft Azure but not very much so we're mostly AWS in mediatemple and you mentioned the fact that you're paying on how traffic happens in your service
 and you know I've done some shows about Netflix and this is a massive thing that Netflix has under consideration cuz they have such variable load throughout the day I imagine it's similar with itpro TV probably people maybe watch it more in the evening after they get home from work or maybe they watch it at lunch and in the conversation I've had with the serverless people recently serverless people are concerned with getting even more out of their utilization do you do you feel like you're you're still may be whining up with it with a good amount of sugar of compute that you're not utilizing despite the fact that you've got maybe Computer Resources scaling up and down it does happen and I don't think you can avoid it in and here's the reason is let's say that I evaluate my system and I see that it's running in 99
 percent utilization right maybe I've got 10 servers were Peg out of 99% if I am to bring up an 11 server even if I've got the the fully generalized clone ready to power on right now then I have to wait for its power on right Wing boot it up and if it's if it's a Linux instance and it is highly tuned it's still going to take 30 to 35 seconds to to speed up so for about 30 seconds my users are going to get poor performance and then this 11th server comes up and joins the pool and now the next person that visits the website they're going to get a great experience but my last user had a bad experience they had a bad experience that's what triggered the the scale event so you have to catch it early and you have to say I can't wait till I'm at 99% I need to do it at 80% so we're at 80% load go ahead and spend maybe not just one server maybe two servers are a batch of five service spinner up and that way my current users get a good experience and the next user gets a good experience and yeah I wasted a little
 play I pay for some resources we didn't use but I was ready for the load in my made sure that my end users had that good experience because you know you have a website we have a website what happens when user comes your citing it slow. They just hit the back button and they go to the next Google link that was you people don't wait anymore they don't want to and they shouldn't have to so you wasting resources and I'm scaling down it's the same thing for the site search to get little idle and maybe not as many people are logged in so we think okay well we can go ahead and shut down one or two servers but if we start shutting down the server and all the sudden load picks back up reacting to fast we the service to come back online then now if you got to wait for that to in and I say it like we're doing it by hand but this is all automated right it's all done I'm performance numbers
 show let's talk soon about the parameters that you were focusing on when you're choosing the instance types for ID from TV for example or maybe just more generally what are the parameters that people should focus on when they're choosing what computes to spin up so we kind of made some mistakes early on in and learn from it and we had a very database-driven site back then we were using a relational database and so everything everything on our site was really tied into a my SQL instance and so when I was picking instance time I was really focused on this guy oh it was important to me to get SS ssds and you don't want on Amazon and on Azria Ops the input output per second that you kind of reserved so normally you're competing with other / other customers that provider to access the disc but if you reserve I Ops then you'd have a dedicated disk access is available to you so I really focusing on that and
 shouldn't have done that it in hindsight that was that was me being a server guy when we started working with some of the developers in our team started to grow we got some more people and you said you know the website would be a lot faster if we moved away from a relational database and went to like a nosql type solution and I wind up moving over to mongodb for a lot of things and as soon as we did that are disk IO really try to tell him was nothing in our our speed of access really kind of Skyrocket we went to a a single page angular app for a website which pushed a lot of the processor work off to the clients as opposed to having the servers do it and so once on that was done this guy always I don't even really matter are just go anymore just because it's so insignificant and its CPU and memory that we watch which shows are easier to watch that user what you're being built on
 great okay so what about storage what are the different types of storage that a cloud provider typically offers
 all rights on the storage side it used to be that everything we default to magnetic storage right Spinning Disk and then they started offering ssds as a premium what about a year ago Amazon and Microsoft to David started the shift to where everything's SSD you can still choose magnetic if you want but SSD is the way that it's gone and get some really cool stuff at this because they said we want to move everybody over to SSD the prices come down and it's pretty much the same as magnetic now so let's just move everybody over that so if you provision a instance on AWS right now it's going to default to SSD and that's normally what you want but they had all this magnetic stores left over from before and so then throw it away they kept it you can still choose to use it but they also moved a lot of it over to their Amazon Glacier service the Low Cost Storage so that you can throw a date on there they they put a lot of information out on it so that you still gets used but you'll see that SSD is normally the choice
 you won't see selections for things like choosing what raid array you you won't get to pick Raid 0 to raid 5 or whatever they they deal with all that behind the scenes and they provide that we're done it so often more than what rate can provide because they'll give you were going to see your cost more than one fault domains are example of a sure if you want to answer and spend up an instance your storage there's actually three copies of it will be a copy on one Rack or they called a slice on one slice in their data center will be a second copy in another slice right there in the same Data Center and there be a third copy this held offline in a completely separate Data Center and that's all done without you even looking at it so you create your storage you pick if it's SSD or magnetic you pick the eye Ops that you want to reserve they handle all the redundancy on the back and just as simple as that
 is speaking in terms of AWS there's a few storage Types on AWS they're called instance store and elastic block storage does Amazon give us around the durability of the storage types of storage is what we used to call the ephemeral storage and it's kind of Gone Away except for the operating system petition so when you spit up a VM it's got an operating system partition that's already created on it and Amazon doesn't guarantee the date of its on that petition if you reboot the VM the day it'll stay there but if there's a crash on Amazon side they're going to move your insurance to another server and when that happens the odds are you're going to lose anything that was on that instant storage it's just to be gone at a femoral store gets wiped out I think of it as like what's in Ram you know when your computer lose what's in Ram a lot of times that's what happens with the instant storage now there are ways to make it persist and you can't get it to last longer but if you really want to keep your data you need to be using EBS and that's a lie
 Lock Storage in when you create an instance it'll usually have an EBS volume attach two of the majority time do and then you can add more than one Union you can make them as large as you want or as small as you want and when you provision them on the EBS side that's where you can pick how many IHOP's you want to reserve and get that set so always be careful of that that dude it doesn't matter which cloud provider to go with all of them had it they typically do you have some kind of temporary storage versus some kind of persistent storage and it's really rare that you want to use the temporary storage an example would be like a load balancing cluster where I'm spitting up nodes and maybe it's a cluster of web servers right and so I might choose to store my websites files in that temporary storage I bring the web server up and it's got the website in there maybe I use rsync or something like that to synchronize the page into that temporary storage when the web server comes up and when it's done I'm going to terminate that instance anyway I'm going to delete it and so I don't need to keep the stores doesn't matter to me if it's temporary or permanent
 so the note goes away and that data goes away and that's fine I can do that and I don't incur any extra storage charges of using EVS but storage is so cheap these days that unless you're dealing with terabytes fun terabytes of data it's usually just worth it to use the persistent storage
 wealthfront is an automated investing services that saves you time as an engineer your time is valuable if you want to invest but you don't want to spend significant time evaluating your portfolio and allocating assets take a look at wealthfront go to wealthfront.com se daily to open an account today and get a special offer for software engineering daily listeners $15,000 manage for free when you open your account with traditional Investment Services there are many humans in the loop that are doing things that well front automate away when you pay the commission's an account fees of these traditional Investment Services you're paying for work that could be done by a computer so don't pay commissions and account fees maximize your gains with wealthfront set-it-and-forget-it investment automation check out well front.com SE daily it would support software engineering daily
 I would introduce you to the world of automated investing wealthfront.com SE daily thanks to wealthfront for being a continue to sponsor of the show now let's get on with the show
 how many more broadly in what situations do I need to think about making my data more or less redundant
 well you know there's always the risk that if we put our storage off of the store with a provider that we know that they're trying to make it redone in that they're backing it up but we're kind of trusting that they are going to take care of that right so it's a good idea for you to make sure that you got some kind of backup it is separate from that provider because providers do they do failed any of things do happen Microsoft I'd really visible failure it was like 10 or 12 years ago where they had some San appliances die out and they weren't able to restore backups and actually lost customer data a lot of customer data Amazon has had situations where they went down and there's they weren't storage or Hardware they were routing issues where you just couldn't get to your equipment so it didn't matter if you had a backup you couldn't get to the back up that it was It was kind of petition of mold off until it's a good idea to make your storage redundant yourself in addition to relying on the cloud provider does if the system works right and you have a failure restoring from
 their backup is always going to be fast but that's the one we want to use but it's a good idea to backup your data and either stored on premises or store it in another data center for that provider you know they've all got multiple data center on the globe in so you can store your copies and other data centers like that or you can head your bets across more than one provider that's what that's what Apple did with iCloud when they launch the iCloud service they didn't have the data centers to support that so they put half of it in AWS and half of it in Azure and they spread it between those two different providers may they still do that today so when you access your iCloud Services you're being spread between the two so if one entire provider were to fail they don't have to worry about going in restoring all that storage all that data it's already in the other cloud provider and just flip ride over to it seamlessly and off you go
 it sounds like that is that also what you do with itpro TV or are you are you multi Cloud for a different reason we are out for a different reason we we're not quite large enough ER scale isn't quite large enough to need that yet and are our product isn't as critical to need that so what I mean by that is if your hospital if you're dealing with financial records and you go offline for a period of time there's regulations that dictate how long you're allowed to be offline if you are if your Amazon right they have a web-based or if they go offline they're losing millions of dollars for every hour there offline that's a big deal
 price of a TV if we go offline for an hour it's actually not that big of a deal sure ignore users aren't they be happy about that but they're not losing money we lose a little bit of money because we didn't get subscribers for that hour will come back online and I will later we're fine so we can survive an outage like that and be okay it's all about understanding what you are a recovery time of ject of your RTO is and how long can you afford to be offline if you can't afford to be offline at all then you need to be multi-cloud multi-provider you know you need to spread across more than one don't trust multiple data centers with the same provider you need to be on more than one provider right but if you can afford even an hour of downtime then it's typically okay to have all of your resources in a single provider and she was more than one data center in that same provider or if you can afford an entire day of downtime at the bank that I work for we were FDIC insured in the FDIC rules stated that we can be down for 72 hours 3 Days A Bank could be shut down for 3 days and as long as they were back up at that 72nd hour
 it was okay right the customers get mad if they wanted but it was okay but if you went to 73 hours that's when the FDIC came over took over the bank and said I were taking over operation so if you have three days you can you could be running a whole one server for that matter you and you could restore from a tape backup bility availability requirements you don't need to go multi-cloud you can go single cloud and have redundancy across multiple data centers multiple availability zones that's right you know so for us we use media Temple when when you go to our website the main website is being rented from media Temple and we've actually got the media Temple servers spread between the east coast and the West Coast Datacenter so that's why
 provider to defend data centers but then all of our database all of our actual content is being rendered out of our are media servers and that's all on AWS and I need to be us we actually use data centers all over the world because if somebody goes to watch a video you want them to get the video from something that she graphically clothes from them they are there in Australia we want them to be watching the video from a server in Australia pulling a web page it's okay for them to come with us for the web page of high definition video that needs to be a little closer to them so we use a different provider for that and we spread it across the world and that's just because of Ben needs love the customer know so much are needs
 what's the current load balancing what kind of shut up did we have to do for load balancing in the past before we had cloud service providers making this into a software issue what was load balancing like so I work in my first load balancer back in 2000 right right at the end of the.com bubble burst you know when everybody was feeling because that was the first time and I was able to get a hold of load balancers that cost less than $50,000 right now it was really challenging to get to work with them back then things have changed so much now you can fire up any open source in Linux box and turn it into a load balancer and it doesn't cost anything it forms a great this companies like at 5 that have their big-ip appliances that are amazing appliances to work with or you can take your data center in stretched across multiple locations around the globe it'll load balance amount of you
 amazing stuff it's complex but it's amazing but you can go into AWS or into after and you can use their software load balancers and achieve the same thing and just a handful of clicks so the load balancers aren't is complex anymore the only hard part with a load balancer is figuring out how you want to balance cuz that's pretty challenging you know when it comes to a website people hit your website they open up a TCP session that that little handshake and import Association opens up and it stays open for a handful of seconds and then idles and closes and so load balancing each of the users it depends on whether they're staying on your side a long time or just staying on your site for a few seconds whether or not you'll be able to get even load balancing and where it really starts to get challenging is each time that user comes back to the site you kind of want to steer them back to the same server they were on so their session stays active otherwise you got to store a lot of data in the cookies on their own machine and cookies are getting more more challenging to use every year as we have privacy concerns and
 other things so if we want to do a Cookie list website we've got to be able to track somebody's connection and it's up to the load balancer to do that and if our software is encrypted what's the lowdown sir going to see it's going to seem Cryptid data and it's not to be able to help us so now it's just going to randomly send people to different servers and it creates a jarring experience for the end-user so a lot of times the hardest part of configuring a load balancer is just the fact that you got to put your SSL private Keys into it so that you can decrypt the traffic in the load balancer can actually see what it is to send people right back to the right location so there's some security concerns there but once it's in place as long as you control the load balancer and you control the web servers it's the same degree of security you have at the unexpected traffic
 so when I'm setting up my application on a cloud provider what are the steps that I am going to need to go through to set up a load balancer
 so typically we're going to do is oatmeal cream multiple servers and you may start with just one server if you doing like an auto scale type environment or if you just say I'm going to bring up 3 servers and load balance right at I'm at 3 servers in 3 different locations and that's where I'm going to go so then you're going to create a load balancer and you'll have to join those instances to the load balancer so they kind of have to participate in it and that's nice because when you bring up a new instance it might not be ready to go into the load balancer right away you might need to run some scripts on it to get it ready to update to the latest copy of your webpage or update the database or whatever it is you need to do to get ready for it and then it gets brought into the lowdown source that starts participating you don't want to send traffic to a note before that note is actually ready so that's step one is you create a little bouncer you join your missions is to it and you got to create a series of rules that dictate how your traffic is load mountains and what ports you want to load balance on if it's a website you know it's Port 80 and Port 443 but if you
 when the custom application that uses different porch you'll need to load balance for those and with with web traffic it can look at things like cookies and session-variables to send it figure out where to send the traffic but if it's your own proprietary application the load miles are going to have no idea how your application works and so it's going to be up to you to add the infrastructure to that load balancer to let it know hey when somebody connects on this port we need to load mounted across the systems and when you get track what's called Affinity make sure they always go back to the same note or maybe you don't need a finiti and it doesn't matter which know they go to you'll have to configure the load balancer to set that end in the most critical part is once the low downstairs fully configured you need to monitor monitor and make sure it's actually working because I've seen a lot of people where they get a load balancer set up and they think it's balancing but all the traffic sucks being sent to one node and it's not balancing the way they think that it is after that the last thing that we need to do is the health side of things if a node fails we don't want to send
 traffic to that note anymore right cuz otherwise it will say we have 3 servers a third of our people would be going to a bad server and having a bad experience so the load balancers going to need the monitor to see if your application is still online and if your application is going offline I want to know is it can stop sending traffic to it and a lot of them will monitor based on HTTP call still like request a certain web page and look for a text string but there's other API type ways that we can do a quick query or even just a TCP or UDP port check can I connect to the sport if I can't close it down but if I can then the server must be up we have to be careful with those I know my ask you I was really bad about this where sometimes the port will be up and it'll answer but the database on the back and might be offline so just the port being up isn't necessarily enough you got to figure out what's right for your application to make it understand when a note is down and take it out of the cluster
 so what you're saying is customize health checks on those different servers depending on what the functionality of that server is right yet because otherwise a little bounce you just won't it won't know the difference between healthy and unhealthy monitoring what are the features of the broader features that a cloud service provider gives me to help with monitoring
 so the other monitoring side you know when we set up our on promise the servers it's up to us to configure monitoring we've got to get everything set to to do what we needed to do and and if we don't turn on monitoring didn't nothing is monitored but on the cloud providers every single one of them will provide a certain level of monitoring and the reason I do that is because that's how they bill you write you on how much storage using a bill you on how many CPUs you've allocated they bill you based on the ram that you're using and so they're going to give you at least as much monitoring is needed to calculate your monthly bill so free of charge right there you could least got that level of monitoring but you're going to want to go a step further with Amazon you have cloudwatch with the other providers have other types of advanced monitoring you can turn on and they can start to show you things like where you got bottlenecks and that's important because most web-applications these days are multi-tier applications to have your web front-end Java database on the back and you have an application server in the middle you can be bottlenecking anywhere along the lines so
 if that happens you need to be able to figure out that problem is so you know where the scale or where to improve and so turning on Advanced monitoring I'll take care of that it'll usually cost a little extra but it's not that much but you also don't have to use the cloud provider Services you can you can go do something else maybe if you use New Relic before new relics kind of like the de-facto standard in an application monitoring so you can go and throw that in or I've done solarwinds Network performance monitor even traditional tools like Microsoft system center operations manager they can they can all monitor your Cloud instance is because to them it's just another server it just happens to have an external IP
 okay let's have a broader discussion about these different Cloud providers I've been trying to talk in the abstract about them I know we offer revert to the mean and talk in terms of AWS I mean let's talk about this this group is different what are these DCH car providers is commodities
 there's some of them some of the smaller ones are but a lot of the bigger ones there are differentiators out there like it if I had to pick between which class I'm going to use today so you got some of the big ones that the Google's and Microsoft and Amazon you've got the the next level down where you got people like Rackspace in Lino. There's a ton of them and then this probably somebody in your town local that provides cloud services to because it's become so so kind of well spread so how do you pick which one unfortunately not really all created equally they all have a variety of services and some are massive they have a ton of different Services you can choose from some have a very small amount of services and it's really an influence how you make a choice so when you going to Amazon AWS probably has the largest selection of service is available so they've got posted databases and infrastructure-as-a-service as well as soft as a server
 platform-as-a-service that got all the different components in there they've got all that stuff available and you can got to pick and choose but the one thing they don't have is they don't have where you can get somebody to help you with your system so if I'm having a problem getting Apache to run on my server they can't help me with that but if I went with Rackspace or if I went with media Temple or someone like that they might not provide as many services but they have Support Services where I can pay an hourly fee or whatever and they'll have it technician help me find out why Apache is not running on that instance or something so if I want a little more of a personal experience I might go with a smaller provider but if I want breath of services then I'll go with somebody bigger like like AWS so that's really going to influence that choice and then also the age of the service if it is a if it's somebody like Amazon that's been in it for 10 or 15 years then you know they pretty much got it under control
 but if they've only been doing it for one year while their infrastructure might still be growing into haven't truly been tested for redundancy reliability so that becomes a a thing we have to look out for as we as we pick which provider we're going with
 when you think about these three big ones Amazon as you're in Google what do you see is the competitive differentiators between those three
 alright so each one has their own little advantages I would say that Amazon certainly wins rapping breath of services that they're going to give you the most options when you go with the cloud they've really got that covered on the Microsoft site with a sure there's there still an evolving service it's fairly new to the web you I was changing a very rapid rate but if you're going to be doing Windows deployment they really are the best choice because they're going to give you a break on the licensing cost and they're really built window Centric although they've been seeing a huge amount of Linux servers deployed in their environment on a greater and greater basis as time goes on so they really kind of doing both but they they do windows really well when you reach out to Google Google probably does scale the best nobody handles volume of traffic like Google does but they have really done the full dive into services so it's really limited what we can get your they'll give you a rock compute instances but they don't have all the other Fringe services and things in it that's starting to change
 another container offerings that they're doing but kind of as it is right now it's a smaller service set your scales larger
 how do you think that container stuff is going to shape out cuz I was a Google has the expertise in kubernetes but you know like you said they may not have as much experience with public Cloud but I certainly have as much experience with their own cloud as they can possibly have anything while I was there they had this thing Borg which turned into kubernetes board was there internal container Management Service and it's starting to move services off of Borg and on to kubernetes on Google compute clouds are there so they're kind of dog food in their Cloud but how do you think this container stuff is going to shake out how is that going to evolve the different the competition among the big three I think that I think the containers of the Future ride so two or three years from now soft will be deployed as a container that's just how it's going to be weird to see it today but
 we're going to see it more and more the containers are the way to go but they're kind of suffering from what Linux distribution suffer from where there's so many different great Linux distribution to pick from and each one. Just a little bit different and that's how the container Solutions are is that each one just a little bit different so when we get a visible winter which most people say that doctor is the winter but kubernetes has some great features in it especially when it comes to like load balancing and scale but when we see it start to settle into a a very well-defined winner that's going to make a big difference and that's going to make it where we have a shoe in the common in our own show that we do episodes on how to install Windows are how to install Linux how to do XYZ task and in a few years we're not going to do those shows anymore we need to know how to install Windows who needs to know how to install Linux you just spit up a Linux instant so you spend up a Windows instance and then you take your containerized app and you you deploy it on the infrastructure it's it's it's that simple
 that environment is changing I think if if you're not working with containers today or if you haven't learned about it even played around with them you're doing yourself a disservice that that's something you need to be messing with whether your windows Linux Mac doesn't matter they all support a jump over the doctor's website dr. IO start start learning
 so you coming back to the present how does pricing compare cross these different providers the big ones that the pricing it is one of those things that when I first started working with with cloud service we're so used to prices going up over time but Cloud prices just seem to continually go down especially on the storage side which is where a lot of your cost comes from bandwidth is where the rest of the cost comes from a lot of people forget about that they look at an instance cost and they they pay for certain amount of CPU in a certain amount of disk space not realizing that you get charged for bandwidth to data going in data coming out some providers like Amazon dino charge for data going in but they charge to get the data back out again Microsoft and some of the other guys they'll charge in both directions so when you start calculating cost that's really important as far as the actual like per hour CPU charges and so on most of the prices are pretty similar you'll find it Amazon's usually live
 less expensive but the other providers might have features in Amazon dozen and that's why they are able to justify that or when you're doing Windows instances you have to pay for the windows license that increase the cost and on on a sure that's going to be cheaper than on AWS so you can price check it but be careful cuz the prices change a lot they change very frequently and they typically go down so it's a win for us but it's something we have to be aware of the other thing is when you spit up an instance all the providers at least all the ones I work with they do billing two different ways you can do what are called On Demand instances or reserved instances and On Demand that's where you fire up your pan hourly rate so if I run it for 5 hours I pay for 5 hours if I run it for 365 days I pay for an entire Year's worth Max after you pay for what you use but if I shut it down I'm not paying for it with a reserved instance you always pay you can shut the incense down and you're still going to pay for it with Reserve you set it aside but you get it cheaper
 so you can save a lot of money by doing reserved instances if you know you're going to use the server for certain amount of time so if you know you need it for 3 months or you know you need it for a year or 5 years do a reserved instance and that'll bring your cost down significantly but if you don't know how long you're going to use it you don't want to do a two-year reserved instance run it for 3 months and then figure out you don't need it anymore and now you're still going to have to pay on it for the rest of that time and that that does get to be expensive I had worked up a spreadsheet at one point when I was trying to explain it because there is a break even point for example if I'm doing an on-demand instance for 3 months
 if I had done a reserved instance for one year I could run the note for 3 months and then turn it off and it would still be less expensive than if I done on demand for 3 months because the reserved instance get you such a price break so you'll have to break out the calculator and and look at which one's going to work out best for your use case scenario but don't just assume you need to use on demand most people do and it's a mistake you could save a lot of money by going Reserve which art about a lot of different aspects of a cloud to save a security and monitoring and Cost Storage what are the other fundamental features that we can expect from cloud service providers today and in the future would I look for our support right you might need where they have some extra tax on hand to be able to help us in with with media Temple they have a service called Cloud Tech and I know that I can call the
 Tech guys at any time maybe something I can perfectly well do myself but I'm just in a hurry and so I call and say hey guys there's this new exploit out for Linux and I don't have time to patch it I should say when it's you maybe it's the openssl right so this next week open a cell can you guys before the patch for me and I'll say no problem we'll do it and that's that's part of the the service agreement we've got so look for service agreements a lot of them will have that were the offers a feature some don't like 8 of us doesn't have that but with AWS if you step up and do things like their elastic Beanstalk they're taking care of the server for you there already patching it so it just kind of depends on what you're looking for their VPN Services another one if you have Cloud servers you might need to transmit data to and from your your own corporate location to those servers you want to do that securely you can always spend up your own incense and make like an openvpn server or whatever but it's nice to have that built into the service built into the infrastructures you can connect in some of them even have where they'll give you like Cisco
 play SAR Juniper SSG configs you can drop right on your firewall and it builds the tunnel up and it's no big deal so look for that also supported operating systems if your Linux shop pretty much all the cloud providers do Linux but maybe you really love sushi links and you go to a provider and they just do a boon to and send toss right so make sure they have the operating systems that you want there's plenty of them like like like a sure where maybe I'm a developer and I'm doing testing and so I need 20 Windows 7 machines well if you have a normal corporate Azure account it'll only do servers they won't do desktops you have to have a developer account to do desktops they limit that end in limit that to just Windows 10 I can't do a Windows 7 VM on Azure so depending on the OS I want it might not be available that providers always look to make sure they support that OS is that you need
 okay. Well thanks for coming on the show this is a great conversation and I'm happy to have itpro TV as a sponsor of software engineering daily I think it's a really good fit I watch itpro TV and I thoroughly enjoy it so you're a great teacher by the way I think you're an exceptional exceptional lecture gifted public speaker so thanks for going to show I appreciate it and then I appreciate you having me on here I always enjoy talking about Technologies and the other Cloud stuff is exciting that that's things other people like to hear about so thanks for having me

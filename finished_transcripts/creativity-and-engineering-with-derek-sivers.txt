Transcription: Derek sivers is a programmer a writer and a businessman he's created several companies and products including cdbaby which became the largest seller of independent music online direct welcome to software engineering daily mix just so you know you mentioned that people often have you on their podcast and all they ever want to talk about is entrepreneurship and starting a business and you know you were willing to come on the podcast to talk about software in this is actually something that came to my mind when I was starting the podcast is I would listen to a lot of podcast should be about starting businesses so I guess I want to ask you like
was there some point in time we're like these two things like entrepreneurship and writing software got conflated
 well
 from me every everybody has their own personal take on this for me I often felt like programming is what I was really doing and really loving and it was also making a business but say for example when somebody would say to me like he why don't you just hire somebody else to do the programming but that's like going to the song writer in the band saying why don't you just hire somebody else to make your songs for you it's like know if this is the whole point is what I really love doing to me the program really creative side of things this is where the real invention happens Mississippi for an online business like this is the most creative part everything else is just kind of selling in marketing and Communications and all that but I would never give up the programming Lee is it is it hard to communicate that to non-programmers last night I was out to dinner with a friend and a friend
 Curtis walked up or like walked by and she said that's okay so you're just making chit chat for a minute and then Rose asked me what are you doing I said that I'm a I'm a programmer and she said it I said I'm working on diving into some postgres database stuff and she went and she said she has Ruby on Rails and
 I was ahead of this come up and pick you up because she was talking about yoga and I said actually I think my life is very tranquil I sit there all day long just programming and it's it's really beautiful and tranquil and she said like that sounds really stressful and it's funny that even though she's also a programmer to her like programming is something that is stressful it's work it's difficult where is to me like programming is like the ultimate like peaceful meditation until after we like 5 minutes later than my friend that I was having dinner with said like is it funny that to her after the fact so it did show me that
 there are some programmers that dude think of programming is just work just drudgery just a necessity something you do for money okay so I should work that I've done and one type of work is like working for the man and do having a deliverable and like having a date they have to finish it by and that is stressful or like a computer science no Academia but like there's the separate thing and this this is maybe what you're referring to this Tranquility because I think a lot of people on Project that's that's when you get that Tranquility true and I last time I had a job was 1992 I quit my last job in 1992 and I've just ever since then I've only been self-employed it just doing my own things and in fact now that I sold my company a few years ago did sorry this is like weird to say but I have more money
 then I'm going to be able to spend in my lifetime so I I have to constantly remind myself this because I got to make sure that I'm not doing anything for the money anymore everything everything I do now has to be for intrinsic reasons not just because it's interesting to me so yeah Timmy programming is like it is the answer to that question like if you had all the money in the world what would you spend your time doing to me yeah so I mean when you were working for somebody else was that a programming job it was just a lowly I was 22 years old I was like working in the tape room at Warner Brothers music in New York City really don't have any association of programming the corporate stress that the sometimes isn't another programmers alright you think that as programmers we have an obligation to create new things like
 people who are young programmers and I think there's an epidemic I know these young programmers like go home from work and there's like watch Netflix or play video games and it's like appalling to me and I don't know if it's an overly judgmental but I'm like why do you not have this consistent internal need to create something new we got this new art form that's been around 30 years and like you have those rare people who have learned these skills and there's like squandering their time
 okay so this is
 an interesting comparison between programming and creativity that a lot of people don't think of programming is creative I think that's like the biggest misconceptions of think a lot of Outsiders that have the Lexar not program to say think of programming is kind of like drudge work it's almost like working in a factory but would your fingertips or something but to me it's just it's pure creativity and therefore they're so amazing books about the creative struggle that I think a lot of programmers would appreciate that the one that start with is called the war of art by Steven pressfield and he's a novelist he wrote The Young the book The Legend of Bagger Vance which then got turned into a Will Smith movie and so he's written a few novels that were quite successful but my favorite thing about him is that he writes about the creative struggle he's got so it's got a series of three little books the first one is the war of art the second one was called dude
 work in the third one was called turning pro into the cell by Steven pressfield I highly recommend all three each one is just a little 90-minute read but what he doesn't see Sana faiz the creative struggle by calling it The Resistance with a capital are almost like Satan who know it's like the resistance is what will make you just decide that you suddenly need to go watch some TV or play video games instead of doing this thing you know you should be doing the resistance is the thing that when you're 90% done with the project people tell you like maybe I'll just go explore this other Avenue instead because it's scary putting your ass on the line and actually launching something and calling it completed really sing it to the world so the resistance is the thing that makes us continue to dabble instead of every launching anything I think a lot of programmers would appreciate these books because I think it addresses that kind of stuff you're talking about where it's like that you've got these amazing skills to
 go invent worlds and turn nothing into everything and create realities with your fingertips and yet people who have those skills will just keep their chips and watch TV I don't get it either do you think I'm not identifying programming is this creative activity but or do you think that afflict even programmers
 bad I mean like do you think that there is an Affliction of programs where they don't realize what they're doing is creative absolutely yeah right right I see what you mean right because I said you think of this factory work absolutely I am in India for example so my wife is from India so I have family need to go in fact I have an Indian passport now since I was married to somebody who was born there I am now an overseas citizen of India so I spent some time there and it's amazing programming culture in India that's just some drugs work you do for money like you don't do it for fun this isn't something creative this isn't something enjoyable it's just you go get a job at a big Factory house and you program C plus plus our job and that's just what you do it's not seen as anything creative at all cuz that gets in that world it isn't it sad to hear of make these tests Pasco find the bugs in this code I don't know
 tragic so you mentioned pressfield and the resistance and another author who you and I both appreciate is Seth Godin he writes a lot about press fealty version of the resistance's the lizard brain which is like this you know kind of Basil in a primordial Instinct that is preventing you from doing your best work because I'm at times because of shame I mean the heat you know you articulated things that make you at a low at a really low level like a frayed Evolution find somebody who loves you these are all these things that are connected to what he calls the lizard brain or the resistance large volume of
 other things that Seth Godin talks about that are applicable to programmers and I'm curious like what do you think would be good takeaways for programmers honestly I think it's the same stuff we just said that the Steven pressfield books to me and I am upset and Becky's the one that published my book I never intended to write a book but then he asked me to and when Seth Godin asks you to do something you say yes so I think 10 years ago he made a name for himself as an author writing on the subject of marketing and I think over the last 10 years he's kind of morphed in talking more about this the bigger struggle of putting your ass on the line and doing something daring and launching things and having to The Bravery to release something and sign your name to it and so I think honestly he's been influenced by the sea
 Westfield books a lot so yeah I think start with the for anybody listening who hasn't read anything that's a start with those all three of the Steven pressfield books of War of art do the work and turning pro and then then check out and then work backwards through stuff goes in his books because the most recent ones are about the the general creative struggle feeling that you have something unique to offer the world and this knowing what you should be doing what you can be doing and having The Bravery to do that instead of staying make a laying low his more recent books about that but as you work backwards his older books or more about marketing
 so you've written some about the struggles of maintaining creative productivity and we're kind of having a conversation around that how do you stay productive as a programmer as and as an artist particularly because that you have this you've got you've made your money you don't have the the fiscal imperative where do you derive the Creative Energy the juices from I love that you ask this but the phrase that
 often comes to mind I don't know where I heard it first but I think of it all the time it it says this it's a dumb
 creativity what are you going to call the music creativity
 never comes to you she will only meet you halfway
 inside yet it's like God we all know that feeling where your you're sitting there was some vague idea or something that you want to do like that I wanted it's like it's almost too much to wrap your head around it's too big I don't want to check my email I watch TV or something and I just not inspired right now I don't want to I think okay I know what will happen if I just fucking quick sit down and start typing just type create table create the first database Taylor whatever it is like just begin and what happens is like if you just start and then you're maybe half an hour into it and then the inspiration starts to show up and she can meet you halfway I really like that idea and it's it's come to every time so this even happened to go where I was trying to wrap my head around some big new thing I was
 doing and I'll just feeling so stuck that I found I was just distracting myself in every way possible and finally going to like 7 p.m. as I can hike Rumble, Rumble around them you just hang on to the next thing I knew it was like 1 a.m. and I was just on such a role as I was just such a great feeling that's like made myself go to bed at 1 a.m. because I knew that I have this tendency to wake up at 6 or 7 no matter what time I go to sleep I made myself go to sleep but I was on such a good role it was funny that it was having to remember if it's like wow just did and I just 9 hours ago I was feeling like I couldn't do this and now I can't stop that kind of surprised because I thought you were going to say and then I got it from the computer and I went for a run or I got off the computer the design of small things or whatever that book is called but I was surprised you just kind of you sat there and focused on it that's the difference I think anything else you do if you think like
 oh maybe I should maybe I need to meditate or maybe I need to go on a run or maybe I need to clear my head baby I just need to call a friend shut up and begin just start fucking working like begin start like everything else is just distraction interesting I think there is there's two schools of thought like one school of thought is like you can be productive while working on a bunch of different tasks or what kind of bunch of different products projects and there's this other school of thought that you should serialize your things and focus completely on one small thing at a time so I'm curious if you have any thoughts on that or like how do you choose one project and commit to it or do you just thrash around and do a bunch of things at once and then just see what comes out of the super
 I definitely do one thing at a time I've tried to do this more a habit basting might My Front Tine and wrote a great book called superhuman by habit which is an amazing book on the subject of living of making habits that run your life like giving yourself the habit of exercise in the habit of eating healthier the habit of practicing a language for an hour a day or whatever it may be and I get the benefit of that but I just find that I just tend to get so into one thing at a time that I'll just now I'll be working I discovered some new way of letting my postgresql database handle all of the business logic instead of keeping it wrapped up in Ruby around it and all looks ugly I'll just get really into that idea and I want to do nothing else for months I just had this time like last December through April or May I think we're that one thing I just said like moving more of my business logic in
 to the postgres database itself and learning the plpgsql language that's built into the database I got so into that idea that all I did from 7 a.m. to 1 a.m. 7 days a week for like 5 months straight I would just bounce out of bed sometimes at like 4:30 in the morning I wake up and go right back to the terminal where I left off the night before and we just so into that one thing and then I'll hit a point where I finish that and I'll say no okay well I think I'm done with that for a while like interest specific lien in postgres evolve how did you get obsessively you know wrapped up in in postgres and what that lead to
 okay I've always liked SQL or escamilla just I learned it way early on before I even really learned programming like back in 1997 98 I was just starting to do my very first Dynamic website everything was a static HTML but then I build a saddle online store called City baby that was starting to take off and I was still cutting and pasting everything by hand in a little desktop application called FileMaker Pro and finally somebody told me like you know there are databases that will sit on your server and do that stuff automatically oh my god really cuz I was spending hours a day be like cutting and pasting and cutting things off of emails into forms and and when somebody told me that they were server-side oh my God and so I had to learn this SQL language to manage that mean they were No Object relational managers then right it was just you have to in order to run your database do you have to learn this language
 and because my database with just the cord everything I was doing a really I learned SQL well enough not the Deep stuff in the advanced SQL did the basic level I learned it well enough to just became the way that I think about things like even the one I just be sitting on an airplane and suddenly have a new business idea just one of the first things I think we just opened up a text file and I'd start typing you create table create table calendar entries create table attendees of gigs and that became the way that I would think about Star Trek did everything else is secondary the language around at the UI the everything else the core of everything was just the data the database so SQL just the way I think so popular in 2004 I already loved the Ruby language I've been using Ruby for a couple years before rails came out which was kind of cute because actually
 somebody in my Ruby Community told me like I mention to somebody like I really love Ruby I just wish there was a way to use it on the web and they said there's this guy in Denmark that's working on a web framework and I emailed him I was like hi David my friend told me you're working on a web framework that uses really get anything you could share with me and he said no not yet later and that that was David the crow Trails so I was an early adopter of reals I loved it right away but I hated the way that it used active record to take away all this SQL and it replaced it with this silly Ruby code that I just use the SQL and so that was always a conflict in fact you can see there is a popular notorious article I wrote in 2007 called something I had to go seven reasons I switched back to PHP after 2 years on Rails it was just something that I posted on a little O'Reilly blog I had at the time that nobody read and I posted it it was literally on my birthday
 night like I got an email from somebody think I heard that you switched back to PHP from where else could you could you tell me why and it was like the 5th person that had asked me in 2 months so I just decided like instead of just continuing to answer this question but I'm just going to write a blog post about it so I posted this blog went to sleep in in the morning I woke up and it was like front page of Slash. And read it and all these sites and all these hundreds of commenters were calling me the biggest idiot to walk the earth and people like you were the problem you're obviously a complete moron you have no idea what you're talking about and people that really upset that I would threaten their their years of learning rails as if it was not the most precious thing they had ever done anyway but one of the things I said even back then in 2007 was I didn't like the fact that rails
 was hiding the SQL from me I just I really like to type in the SQL commands so finally I'm just giving a little context after all this finally did it for me it was rich hickey the inventor of closure did a keynote speech at the railsconf 2014 or something I think if you search on YouTube it's called Simple Made Easy something like that simple easy thank you Rich hickey simple Made Easy something like that he's actually twice once to close your conference went to the rails conference and I think the one at the reels conference is actually a little better it's a little monkey has edited it a little more tightly and especially if you have any Ruby experience it'll get home a little more for your point is he defines
 Simplicity vs. complexity as something that is objective not subjective he went and found the original etymology the origin of the word simple needs a single thing like an unconnected thing it is a single thing where is
 complicated comes from complex which means to be intertwined with other things were things are intertwined together like braided in fact I think it comes from the word complex i p l e c t complect on which means to braid the things together so we said this is something that we can look at our software objectively saying is this simple meaning is it not reliant on other things or is it complected where it's tied together with other things
 and he did notice that this is nothing to do with hard or easy that things that are simple can be very hard that it might you might have to spend a lot of extra work to learn a new language that is not familiar to you in order to make your system very simple he said or and this is what I love it for anybody that's done anything with the rails or even node Packaging Systems do this example of a gem install hairball type one very easy thing is it's very easy to install a big giant complicated mess of code into your application that now everything in your application is completely bound to this extremely complicated thing but boy that was easy for you is it so I really want to separate this idea of easy from simple and complicated let's forget about whether something is easier hard you know doing a little bit of extra
 necessary to this how did you feel like active record was complected things he gave this see there's a series of slides it let's talk where he describes what is not on the left side he says these are simple things on the right side six of these are complicated things and so like on the left he would write like Maps AKA hashes those are simple the associative data structure that we all know with keys in value is it on the right we have objects and classes and that and he said that is an unnecessary complications he said I think a lot of people use objects and classes when it could just be using the simple map or hash and then he kind of kept doing this for a lots of different data structures and things we use in programming analyzing
 as being either simpler complicated and then last week at the very last one who used it said object relational no RMA then he just wrote OMG you did this is wonderful it's like a warrior arms are one of those complicated complex ridiculously over-engineered things you could ever use it it's good raps all this ridiculous amount of layering around something it's basically just turning it into simple SQL strings and sending it to the database and I totally have court that just hit home for me very long answer to your question but I guess like for years and years and years what I'm getting at is I've felt this disconnect between like I just want to use SQL I just I speak that language it's a very simple language so after seeing
 this Rich hickey talk to me that was like the final straw I was like I saw SQL at something that was not necessarily easy but it sure is simple because if I'm uncomplicated my my business logic my datalogic that would mean that right now like everything was kind of written twice like I had a database but I was treating it as dumb storage and then I was writing a whole bunch of Ruby code around it that contained all of the business logic but then what if I decide to switch from Ruby to JavaScript iframe JavaScript to dumb it looks here is something I can have to rewrite all of that language and I thought that by definition
 is complected because now I am I am tying together my database and my surrounding code in this way that it could be simple and what is the simple way the simple ways to just have that data logic in your database itself so now that that is by definition simple it is one thing it is just at the database knows that you know you can't Mark a project has closed if it hasn't been opened yet again of that shouldn't let me not to say that one is right or wrong in fact if you look at the comments so all of this by the way anybody if you're interested in this stuff I'm talking about I wrote a good in-depth blog post about it at Savers. Org PG so if you look at the comments below that of course it's like hundreds of people telling me I'm an absolute idiot I'm a raging idiots and I didn't have no idea what I'm talking about but I find that a lot of people that are saying that
 the people that were burned in the past by Oracle or mssql or something like that they say there was a vendor lock-in and did something something so never again
 but I think the post outside it's it's open source it's it's amazing you can do so much more than people to do with it a lot of people just treated his dumb storage but it has a a great functional functional meaning working language built into it the plpgsql language built into it they can handle so much of this logic that were writing all this code around the database to do could it be built right into the database itself when I just love the fact that if you put it in the database itself then it's uncomplicated it's on so if I understand this right away that you architect rails applications is user experience very dumb simple
 front end logic that support those complex database queries is that correct well I don't use anymore so okay so I think and whatever okay how does that map to whatever front like whatever framework you're actually use it what do you thinking of switching to a combination of Helix ear and Elm eliksir for the the API backhanded and Elm for the front end but this is what I love is it when when you keeping most of your logic in the database itself then the front end can because it's uncomplicated it's no longer together
 well I guess that's just reality weather in logic becomes extremely simple almost everything that comes in the front end you just pass it the database no like no more logic around it needed you no matter what language the front I did what are you using Express with JavaScript or but erlang Cowboy framework or a warp in Haskell or whatever you may decide to use on your front end you just tossed the incoming parameters to the database and it knows what to do and you just get Jason back and display it to the user and that's it you're free to switch languages pretty freely because all the important stuff is in the database itself how do you feel about non-relational databases
 I played with him a bit but
 by the time I played with them it's I already had 10 years with my postgres database that's right I forgot to get this crucial context is that since 1997 I've switched language is a few times I started out in PHP you rewrite everything in real switched back to PHP now started doing everything in JavaScript now kind of doing a ruby Sinatra thing I'm thinking of switching do it like Siri in Elmo and but meanwhile I've had the exact same postgres database since 1997 I mean you know the person ID number two in my database is the person that got inserted there back in 1997 my very first customer person ID number one is me so I have this basically a legacy database that I'm working with that I am not going to dump and give up and switch to Mango or something because my existing database works But as time goes on you keep seeing all of these benchmarks that show that actually actually no faster in fact post press has the
 it store type thing built in so if you want a non-relational data store postgres at that built in in fact it's faster than mongodb and all the stuff that just made me feel like I'm ready to double down on this technology meaning postgres so that I can be not so connected to the other Technologies sure what I mean maybe I'll get slayed in the comments or something for this but I think that a lot of the motivation for using Mongo or some other Json database is the fact that you just get to speak Json the database right index and it's like it's near the motivation for JavaScript Json everywhere you know unilingual grew up with with with postgres then that's a switch it cost to you that's not right right right maybe if I was
 just starting out brand new today in 2015 and having to look at the whole feel things and where to start out that yeah I might I might go that way
 is there a is there a project you're working on right now or are you are you kind of just fiddling around like I mean I'm working towards a web app idea I have called mccork but I also I've written this whole kind of customer I know this whole email inbox system that I wrote myself in the back in to manage all of my contacts and everything I do is open
 because I want to know if a boy well I don't like the cloud I don't like the idea of keeping all of my crucial contacts and and absolutely precious information to keeping that on somebody else's stuff in some mystery computer I don't have access to it offline so I really like having everything in my own database to look at your email when you and I are emailing about doing this interview that was all in my own email system that I wrote in my postgres database so when Jeff Myers and emails me it comes in as person number for 365 in the email number 8 39128 Whatever Gets inserted into the database and save there so I have a permanent history of all of our Communications in your URLs and all that stuff and Jimmy this is like it's it's very
 three long-term Focus to write like I'm 46 now and like I said I've been using the same postgres database since 1997 imagine I'll probably keep using this database for the next 20 years and this is this is everybody I know and everybody I've ever communicated with I have a permanent archive here and it's not sitting in Gmail's servers you know where if whatever they they thought I was logging in from a a bad IP address label shut me out of my account or something you know like it this is I find it important to keep my data on my servers in my database and under my control so I guess that's one thing and then I think that's that's it that's a reasonable that is a reasonable fear
 yeah boy is it happens to me too and I mean yes the story of A friend of mine told me a couple days ago he has a 7 year old kid and for the last 7 years he's been taking pictures of his kid and putting them all up onto I think it will Plus or maybe it was just a Google images or something like that likes one of those Google products for sharing it maybe was Picasso or something like that point is he also had a Google Apps account and he decided to kind of merge everything together so he's using his own domain with Google Apps and he decided to merge together his old gmail account that he's had for 7 years with his Google Apps account and it said okay do you want to merge together okay..... Done it is merged and all of a sudden death like all of his photos are gone I will give Mercy to account so they're not they're gone
 first-year counted it did ask you at 1:20 to ask you if you were ready to you know you understand the implications of merging accounts and you click the ass so yeah sorry those photos are gone and I was in the cloud and assumed that of course it's Google they'll keep his photos there but now they're all gone is worked out I know you could never lose any data but I feel like there's an increasing sent that there's like losing Talent or if they like places in the seams where you're like the seams are splitting and qualities degrading just a little bit and you worry it's like is Google I mean I mean people talk about Google going the way of Microsoft or whatever but like you know people don't generally talk about the consequences of that and I think one of the consequences are like well what happened to Windows overtime came, not the best in
 more like what is that happens to Gmail or Google Drive and yes holy crap like but you know if I lost the ability is like 3 days to get back my account if they screw something up and like that's like 3 days offline can't do anything until like single points of failure for our for our lives
 yeah I love when I forget who this was somebody had some conferences that recently they called they called cloud computing they called it they said let's just call it what is how to put my data in the clown I'm going to give all of my severe business logic in the things are crucial to my company put it all in the clown let's give it to the clown call it what it is because we don't know where it is it's not it's not trust was it why do you trust the clown and I don't want to sound like a complete paranoid these edge cases do happen just occasionally enough that to me it's just it's a quart philosophies like I don't I don't trust anybody with anything like it I guess we have to kind of trust the banks with our money a little bit these days and
 and then like the standard operating procedure is to put your stuff in the cloud if for no other reason than like security and I think the idea that these companies are considered considerably better at security at keeping up with security then an individual can be like you disagree with that I don't know I mean honestly I don't since I don't work at a company and I'd never have I just don't think about it like I don't I'm not being prescription no I'm not saying that what I'm doing is what others should do the same for me I mean I'm I'm Lenox cake I built my own server is you know I don't even run Linux I run openbsd on my server is and I install it myself and I don't even use say I'm not even using a whatever digitalocean linotype virtual slice I actually I have a dedicated 1u server sitting in the Datacenter and that's mine and I am I install
 NBA stay on it as my fucking server and nobody else has access to it you know like because this is me like whatever and so whatever I also have servers in spread I have a little bit of a file server spread around the world in 3 different places and every night before bed I backup everything to three different countries and because I can because that took me no effort it was just kind of fun so I'm not obviously this is not what everybody on there should be doing but this works for me
 that's fascinating okay well so so you know I didn't want to be like too much cuz like you've gone over that so much and other interviews and listen to that people know the story the business side story of CD baby but I am curious a bit if there are any like interesting engineering stories you can tell from your time working at CD Baby I mean you've you started this business you skilled enough to like a hundred million and revenues are a lot of money a lot of stuff going on are there any interesting engineering stories you can share with the listeners good question
 I think a lot of time to challenge was to get things kind of Asbury and simple as can be like in speaking of rales versus Sinatra verses about things that sometimes you realize that the framework are using even if you wrote it yourself can be doing lots of extra crap around what's actually necessary like say for example you visit a typical blog in 2015 or news site that you just want to read an article and that article is basically six paragraphs is how many bytes 1015 bites that's all you actually want is that but in order to get that you go to these sites that are pulling in things from five different content distribution networks and all this JavaScript in all these ads and things of sliding under the screen and date of the article is loaded dynamiclear it with JavaScript and you just think how it like no
 do you need a hold data Farm just to serve that all uploads if you would have just had to display the damn article then you wouldn't have needed so many servers and so much I T that just give me that little six paragraphs I want so I think it's CD Baby we were constantly working with that like trying to streamline things as much as possible because I think the whole site even with all those users and everything was really good we had two servers I had a little 1u server that was the front-end web server and then it to you server the next to it with a cross-connect and it was just the database and that's it I just had two dedicated servers that ran everything and so when I hear people needing to fire up a 50 instances on AWS or whatever I can't relate it was pretty popular Institute servers could handle everything so I'm
 just about everything I can just kind of be even just Optimizer SQL calls and make sure that you're not putting any unnecessary stress on the server you just make me ask you a call like the minimum necessary information to grab from the server optimize those easy explain query tool to make sure that it's out my front end things up as soon as possible without relying on any unnecessary JavaScript stuff like that and still like a realistic approach day cuz you see movement towards like these real-time apps where you've got you every every little transaction you have with your Apple with the application goes and communicates with database and does something then gives feedback to you and then psych there's just all this interactivity is there still a place for these types of very narrow applications that do things in a simple fashion
 well yeah I think it just you have to ask yourself what's really needed for you right like even on my service. Org site again I'm not being prescriptive I just don't care about other people I just find out what works for me you write and it and I try to share what I've learned so that if somebody finds it this also works for postgresql stuff we were talking about earlier all I ever said on my website was this is working really well from me like this way of doing things has been incredibly streamline incredibly successful this works really well for me and I feel sometimes with tech stuff people get so
 religious and then cultish about the things that they love that when you say something that I feel the conversation off and goes like this it all publicly say this is this is something I like and in the world replies with no you're wrong that's not what I like
 I didn't say you should like it you know I'm just saying I like it so if you look at my service. Org website it may not be the prettiest thing but man that thing is just it is bare-bones like if you do view Source I'm not even I don't even have an external style sheet anymore its just like I just found the bare minimum CSS that was necessary to style two pages that you can read it and I just inlined it right in the header I'm just one less HTTP call that your brother needs to do when you read my side makes it load a little bit faster milliseconds in at whatever but it just it's fun to come look at anything you're doing and eliminate any crap around even like say I just get about the stuff like even URLs it's funny to me when people have these long URLs that are like for kids.com 2015 / 10 / 31 / things - you - mustache do - 2 coming out
 you're talking to software engineering daily.com you can do the Warby Parker approach and have the like extremely long name which is what I chose the software engineering daily
 okay with you but I'm not talking about like you at the domain name of the song you are elves that are like you don't actually need a hundred and ninety three characters to uniquely refer to that article you could have just called it you know of before I work there, / unique ID unless you have over 1 trillion articles that you've written you can refer to it in just for six letters combination for six letters can uniquely identified that a document on your web server you know if you don't need these long silly nested URLs that were depressed as my default anyway I'm sorry just I just I just keep got about the stuff so I'm always just had to recently admitted to me programming is
 a hobby not a profession because if I was really looking at is just like a means to an end then yeah the people who say that I should just hire another programmer to get done what I need done I guess that's rational it except this is just what I love doing so I do the stuff just for my own enjoyment and hopefully I'm making things it will be useful to other people you know but
 okay so one of these clothes off I want to talk some about a post that you made it 2007 being very difficult year and I'm sure there are a lot of listeners who are going through the lost my job last relationship or something difficult many people are going through difficult problem can you talk a bit about what happened in 2007 and what was so difficult and what you learned during a difficult time yeah 2007 is like you you're ever for me I didn't like I ended up cutting these chapters out of my book but they were going to be a couple chapters where I kind of vented about how bad things turned with CD Baby in the last year before I sold it it got really really awful Dynamic at the site so I think what I've learned
 is that time heals everything that I think that if you were to think back 10 years ago so what it was 2015 think back to you in 2005 and what was really upsetting you at the time right and imagine that back in 2005 you would have written down all of the major major problems you were facing at the time in 2005 and you were to go back now 10 years later and look at what you wrote down you just kind of laugh and think it was kind of cute and quaint cuz you're like yeah of course all of that stuff worked itself out and so I like the fact that I'm 46 now and I've been alive a while long enough to see that things can just work themselves out and I know what the time when you smack in the middle of it sometimes it can just feel
 overwhelming but you just got to kind of zoom out a bit and just realized like he had this everything tends to work itself out so you do what you can but more recently I think what I've learned is this idea of
 doing what needs to be done no matter how you're feeling I think a lot of assets especially kind of a bit of a millennial thing or Gen Y thing I like this idea that I'm just act like I want to do my passion I want to do what I love I'm not in the mood to do this thing or that thing I just want to do what I'm feel like where is I think maybe go back a couple Generations there was this more of his coming out of the depression sense of just know you just do what needs to be done it doesn't matter how you're feeling that's why I think something healthy in that that especially when you're feeling really down
 and just really bummed out of angry about a situation it can be tempting to just wallow in that you know but I think instead if you just go through the motions of what needs to be done like you still need to do your dishes and pay your bills and even work wise when you're not inspired and something feels overwhelming but you just sit down and start typing anyway. It's like now I like I obviously I don't feel like doing this right now and I'm literally screaming at the idea of doing this because it's so frustrating but I'm just going to sit down and keep typing keep typing and I know that it'll work itself out so that I think at work wise it's like that sometimes like
 say if you were just fired and and you know that what you need to do is to update your skills and you got to get up to speed with all the JavaScript stuff that's happening right now in 2015 you may not want to you may think JavaScript is stupid and ugly and see look at that anybody books called the good parts same as proof of his language sucks but sit down and learning JavaScript this is something you need to know now
 it exists but you just you work your way through it it is there is that kind of that was just how do you continue to be creative in it when you're stressed out like when you have something that is depressing you how do you maintain creativity
 I think same things I just said like you just
 you just start working an inspiration comes she'll only come to meet you halfway you have to start without inspiration you just have to begin you just start working on this thing go in my case go create your database tables go start writing those function some people work from the UI backwards just to start creating thing just add the simplest functions to it make it start to work make a few unit tests and then it's pretty soon we'll come to meet you halfway and man I find it even if I'm depressed or angry it that you just start working and you keep working and that the clouds blow over
 what is the most counterintuitive thing that you've learned in life
 Wow
 we might have to add that I don't know other so many but they've become I think
 I guess once I guess once they become a life lesson they become intuitive exactly I feel like you're not really learning something unless you're surprised right so
 the first time you hear something especially if it's a fact and it's really surprising well then it's counterintuitive that goes against what I thought was true and those in the moments that you're learning something but then it becomes your new reality you know and then you just fits in your bigger picture rather so I think I'm constantly seeking out those moments almost daily trying to pick up books on Amazon later
 did go against what I know and even he had this morning I woke up and learning this Elm programming language that's kind of like Haskell but yeah it's it's really a shame because I've always wanted to learn Haskell just in theory I hear people talking about the benefits of Haskell and just never really got around to it maybe just because I couldn't find any practical use for it it would have always just been some little Kiki thing I knew just for fun was when I first learned it was just like this fun little shell scripting language I learned for fun than later somebody wrote a web framework for it but that's cool I picked up a couple books on it but just never really got into it and then somebody described lmm as kind of like Haskell purely for web development immediately useful that's so yeah I've just been starting to learn that in like it but yeah it's it's
 it's a very different way of doing things than I'm used to and it's to me very counterintuitive so yes sorry I couldn't just pick out one learning do once everyday admire the most does open source guys that are out there contributing to everything and have created these great things at the world uses for free names that come to mind TJ holowaychuk or something that you would Express and even if you have this one time before I learn JavaScript I went to a conference and they they put us up in housing in it and I was rooming with this guy named Isaac that told me he wrote in p.m. and at the time since I've been gone since I didn't know JavaScript yet I was like oh okay what 10 p.m. and later I found out to like oh my God that was my roommate
 oh my God that is amazing and these people are I can't even remember their names right now but they were these people that you've seen that have contributed to the they co-wrote JPEG and you know all of these lives it exists in every Linux box in the world and they just did this in their spare time while they have a day job doing other things and if I run out of web app ideas and little entrepreneurial type ideas I would be very happy just spending a couple decades just contributing to open source projects I love those guys that do that so well
 that's great will Derek sivers thanks for coming out the software engineering daily it's been enlightening talking to you thanks Jeff and back when I was a musician when we just running to strangers you know when airplanes or whatever and people say so what are you do I found it if I would say I'm a musician that I get a whole bunch of stupid questions like what kind of music do you do a butt a little bit and what I loved about saying that is it would shut up all conversation they don't go they were all so we can talk to him they sell really what do you program in sitting there talking about programming and I love it so point is I love talking to programmers in fact like it's like my eyes light up when I get
 email in my inbox for another programmer and we can sit and talk text so yeah that's the reason I wanted to come on your show is like the reason I do these things I'm obviously I'm not here to promote anything I wasn't pitching something I mostly do it for the people I need so yeah if you made it all the way through this interview send me an email it's Derrick d e r e k at Silvers. Org s i v e r s. O RG it send me an e-mail say hi I love talking to fellow program yourself to ask me anything I answer every email question did you ever try programming music like we using a digital audio workstation right now I got home I can't say I've seen these languages also that are like music making languages these people basically using a Haskell or lisp to like compose music on the Fly and I can't imagine what Rabbit Hole I would dive into I got into that
 yeah I mean the digital audio workstation your cool just because it's like a really robust IDE and anyway heading into that says oh man I'm almost scared of it you don't like somebody says hey you should check out Game of Thrones my quiche is my life so I worry about like you're getting into like programming music all man you take two things I love and combine them up I'm kind of scared of that

Transcription: Cloud Foundry is an open-source platform-as-a-service companies use cloud Foundry as a control plane to deploy and manage applications it provides abstractions for microservices and continuous integration Cornelia Davis joins the show to discuss Cloud Foundry I interviewed her at the devops Enterprise Summit where Enterprises share their stories of improving their culture and their technology Stacks Cornelia Explain how and why a large Enterprise adopts Cloud Foundry and why they often hire a company like pivotal to help them as they migrate their infrastructure and change their processes was a great show on cloud Foundry because I hadn't done a show about Cloud Foundry before but I know so many companies use it to manage their infrastructure and if you are interested in Cloud Foundry then you might like this episode and any case you like it because Cornelia is a great guest and explains things really well so I hope you enjoy it
life is too short to have a job that you don't enjoy if you don't like your job go to hired.com se daily hired makes finding a new job enjoyable hired will connect you with a talent Advocate the will walk you through the process of finding a better job it's like a personal concierge for finding a job maybe you want more flexible hours or more money or remote work maybe want to work at Facebook or Uber or stripe or some of the other top companies that are desperately looking for engineers on hired you deserve a job that you enjoy because you're someone who spends their spare time listening to a software engineering podcast clearly you're passionate about software so it's definitely possible to find a job that you enjoy check out hired.com / SE daily to get a special offer for software engineering daily listeners a $1,000 signing bonus from hired when you find that great job that gives you respect and
salary that you deserve as a great engineer I love hired because it puts more power in the hands of Engineers go to hired.com se daily to get advantage of that special offer thanks to hired for being a continued longtime sponsor of software engineering daily
 I'm here at Cornelia Davis from pivotal Cornelia welcome to software engineering daily today we're going to be talking about Cloud Foundry so why are you start off by giving us a bit of a brief history for what cloud Foundry is and how pivotal moved into it and what the relation is to devops sure maybe I'll last year that with a little bit of a personal stories so I came to pivotal pivotal for those of you don't know is a spin-off from EMC in VMware which is actually quite relevant to the question that you just asked I came to pivotal from EMC in it EMC I was working for quite a number of years in the corporate CTI office and I was working in the architecture group and working on emerging Tech and about a bit more than 4 years ago I was rolling off of a project in my boss at the time Tom McGuire said you know I would really like you to start looking at platform-as-a-service I think that's going to be very relevant moving forward and naturally because we were EMC in VMware is part of the MC VMware
 was already incubating Cloud Foundry at the time it was early days it was about a year maybe a year-and-a-half in on cloud Foundry that's why I started looking into Cloud Foundry working with other groups within EMC that kind of Explorer what cloud Foundry could mean for them and then the pivotal spin-off happened and by that time I was head over heels in love with this product with this Cloud Foundry product and I joined the product team other the cop Henry product organization and started working with customers now I need to back up a little bit because when I first started looking at platform-as-a-service I thought it was all about me and what I mean by that is that I meant a lifelong developer I'm a computer scientist I've always been on the development side never been on the operation side at all and I when I first started researching it I was doing these in a Googling things and looking at reports from analysts and looking at tech tech Publications things like that in all of the headlines read platform-as-a-service is a
 list of the developer makes the developer slides easier it's it's about developer productivity so I thought it was all about me I thought sweet you want to make my job easier that's great and I believe that actually for the first 8 months or so that worked on cloud Foundry and then when I started working with customers and started going out and working with them the product we didn't even have a product pivotal had no Cloud Foundry product we have an open source project at the time and we were doing some consulting services and things like that but we were out there was very early days helping customers kind of wrap that starts this this new thing that was promising to maybe change things up a little bit and I wasn't more than a month in working with customers and I came home and I told my husband I'm working on an operations product I am working on a data center product that is just as much or even more for the developer I mean for the Opera
 then it is the developer and that was a big Epiphany moment for me and a half or so yeah so what was the relationship like between what things were like three and a half years ago what was the relationship like for typical company that that is now that might be working with pivotal Cloud Foundry today what was the relationship between development operations back then companies today which is why he ran in the same form in the same form although we have great exemplars now of the possibility for change but that relationship was predominantly adversarial and more than anything else it was siloed it was we have the development organization and we have some an ancillary organizations around the development organization like quality
 insurance for business analytics you know there were kind of bridges to the development Silo on either Edge but it was very much a silo and then the operations team was silent as well and the reason that I say It Was a Serial and still isn't a lot of organizations is because they're really incentivized along different Avenues so the developers are incentivize to ship features on time and on schedule and operations teams are incentivize with things like up time what's missing there is actually the incentive of creating value and bringing value to the customer neither of those organizations have that so they're there incentives are actually not in alignment and there's sometimes in conflict and it turns out that platform helps platform isn't the only thing you need people process and Technology not just technology but the platform helps tremendously in the number of ways that we can kind of Explorer but the relationship was very much and it's example of
 hide in the quote that always makes customers that I'm chatting with cringe and kind of nodded knowingly at each other which is it works on my machine yeah the relationship I am thinking of is I'm a developer I make some change the code and I passed all my test so I deploy it to a server somewhere now it is the responsibilities of the operations team this is how things functioned in 2011 2010 or whatever how does that differ from the plot for the Post platform-as-a-service world where you have development operations that are operating on the same platform what's interesting about that is that you're right development and operations are operating on the same platform but the platform actually allows you to put boundaries in kind of a different direction if you will if you think of this site
 was just kind of having vertical boundaries where were throwing things over the wall so there's a wall between these different silos what it allows us to do is it allows us to kind of turn that sideways and it allows us to say well let's make the job of platform to be that the application team and noticed that I'm not using the term development team I'm using the term application team the application team can be self-sufficient and not only developing but operating their applications on top of something and that something used to be infrastructure it used to be servers networks storage and that developers often don't have and shouldn't have to have deep knowledge in infrastructure to be able to develop and bring their they're softer to production which is why you ended up with these different skill sets in the
 different silos so now the rule is when I say turn it on its side is we actually have two different product teams in place the application team is the team that's bringing some what's a mobile app or web app to some end-consumer so whether it's the customer of that organization or it's maybe an internal application used by Associates on a retail floor or something like that so they're building that end apple and application of the other product team is the team that is actually providing the platform and the platform is now the product that has its consumers its consumers are the app team now both of those product organizations now the app team in the platform team have developers and operators and they have their product that they're responsible for developing and operating and they have the right tool sets they don't have the same tool set the platform team is actually providing the tool set in the abstractions
 the contract up to the application team so can you talk more about how how company develops that type of Team structure cuz Dad is probably I mean you're basically describing platform this platform as having such a profound potential impact that companies should restructure their teams to, not accommodated but more the the platform accommodates the team structure that would be ideal for them to operate more harmoniously you. More about how so pivotal works with companies that want to deploy Cloud Foundry they want to be using it as their platform they want to be using as as a tool to Institute this more harmonious relationship how old is a company large Enterprise start to use cloud Foundry and how do u s pivotal like teach them or tell them how to work with them to get in
 to that mode where they are they can facilitate changes that where they're working in a better fashion it so it's interesting it it almost
 starts with a Grassroots movement it almost always starts with people who are very Innovative a few Champions that are maybe in the architecture position or where are tired of feeling the pain they might come from the operation side they might come from the development side we've had both and they start to explore and understand different ways of doing things and when they realize for example that cloud Foundry allows them to just provide their their code are VP of R&D for for cloud Foundry has his great Haiku which says here's my code run it in the cloud for me I don't care how and so when we have for example developers that realize oh my gosh I can save myself and the operations teams and that might be me because my team is responsible for development and operations even if it's not the same individual it's my team I can get rid of a lot of that pain
 it works on my machine it doesn't work on this machine so that's what platform provides is kind of consistent environment through the life cycle and so on so it it often starts with that grass roots at some point though not too far along in the Grassroots we start to see the need for getting some executive air cover once we get the executive air cover the cool thing that can happen is you can Define in this is typically the way that we do things at pivotal is weed we don't like to come in and just do abstract coaching for example or just do workshops in the abstract we really like to help clients identify a product that they want to build and that product can't be too small that there's not enough visibility and it can't be too large that you can't be successful in it and reasonably short time. But we try to find a product that needs to be billed you come in you say what is the product you want to build and you help them decide
 okay here is a pragmatic way of restructuring where you might be able to build that product more easily you talk to the executive management team you say hey I think you might be able to ship this product more efficient fashion in a way that might be replicable down the line if you restructure this way and then when we do that first experiment we say here are the rules that we need here that yours the way that we're going to do things first of all you need to have that those two different teams so you need to have a team that's going to be responsible for standing up that initial version of the platform because that's a huge enabler of of what we're talking about here and you need to enable that team you need to bring together design the right product management so product management sometimes as a combination of your traditional business analyst but you have to have somebody from the business that's their you don't only want the proxy you want somebody
 who's the business individual that's partnering with maybe the business analyst to be a product manager and then the stories in your backlog don't just include stories for implementing features and unit tests but they also include stories bed in that build pipelines that automatically do is CF push into the Prada environment when you're when you passed all the tests the automatically create smoke test so that you can have your monitoring so that we need to play into production the smoke tester deployed along side of it so that you can immediately start monitoring the smoke test and it's completely different way of thinking and I'm choosing the tools for my side projects the first thing that I look for is ease-of-use that's why I love mongodb it is the most popular non-relational database and it is super
 easy to use at the beginning of a project I often don't know the shape of my objects and Mongo makes it easy to evolve the database schema as I like overtime overtime as my project gets popular I'm going to need to scale and thankfully mongodb has built-in horizontal scalability but configuration and database maintenance aren't really what I want to spend my time on thankfully mongodb Atlas was released in 2016 mongodb Atlas is the easiest way to get access to mongodb without having to run the database yourself you pay only for what you use for small projects all the way up to large production deployments to try mongodb Atlas today go to mongodb. Com SE daily and get a free $25 in credit
 use promo code go Atlas 25 to get that $25 in free credit Atlas is the only hosted mongodb service built by the engineers behind the database the company mongodb with Atlas you get into end encryption you get VPC peering you get access to the latest releases and for a limited time you can go to mongodb. Com SE daily enter promo code go at least 25 and get that $25 in credit and get started with mongodb Atlas thanks to mongodb for being a new sponsor of software engineering daily and thanks for being the database behind a lot of my favorite side projects in the past we're really happy to have mongodb as a new sponsor of software engineering daily
 you talking about the things that the platform provides that a company can take advantage of when you educate them on how Cloud Foundry works and what things that unify the things that the developer see so it's not it just works on my box and the the operational challenges that the Ops person sees are we talking about like a are the other positive effects of Clark County are they mostly based in the idea that it's easy to make replicable and environments and where you have a very consistent between them is it about having a platform that is tightly coupled with your continuous integration tool what is the tooling of the platform that you actually do you actually are getting
 as an organization that's adopting a platform-as-a-service it's actually all of those things and more than what you just talk today in the examples that you just gave their first and foremost I think the most important thing is that the platform provides the right abstractions for that application team to work at and what I mean by that is that we sometimes talk about this this Cloudera and I'll clarify I'm what I mean by cloud is a part of this we sometimes talk about this cloudera's kind of the 3rd platform the first from being Mainframe then we saw a huge shift and architectures and everything else around that changed when we went from mainframes to client server PC everything changed and now everything is changing again it's a huge architectural shift to move from this client server into the cloud now what I mean by the cloud is not g
 CP or AWS I don't necessarily just I'm not constrained that this definition of it's in somebody else's data center it's really about the way that the cloud abstractions at the cloud has and then the functionality that the cloud brings so one of the things that exemplifies the cloud again it's more not so much worried. It's how you compute one of the things that the cloud has that we didn't necessarily have in the previous era is that things are always changing in the previous era we and I I grew up in that area so I've been doing this for 30 years so I grew up in that era and and I worked on products like documentum which is how I came to EMC so document management system that was originally built maybe 25 years ago or so so it was very much built in this client-server model and so the architecture was you had your database
 and you had that applications here and then initially it was thick clients on the desktop and then eventually we got a web client which is not really markedly different it's only slightly different from the rich client slightly better well when we built that application we built documentum assuming that the storage and that the Oracle database for example that you were running on we're going to be stable we assume that they would be solid and if Oracle went belly-up we threw our hands up in the air and said not our fault Oracle went belly-up Market Market blade different world than the cloud where you just expect everything to be transient fail all the time absolutely bring that up because you were asking back to the question that you were asking which is what does cloud Foundry bring Cloud Foundry brings those principles it realizes those principles so
 for example when you deploy an application onto Cloud Foundry let's say you deploy that application in you have scale mean so you scale it out 10 instances if you lose a rack in your Datacenter or Amazon loses a rack and their data center provided you have more than you had Cloud Foundry configured across more than one Rack or we sometimes called them availability zones which is easy to do Club fabbri takes care of Distributing that load across the racks for you that's no longer developer concern so you happen to hear these stories of Amazon has a problem you know of any availability Zone goes down and a company that had all of their stuff running on that one AZ or in that one single region screams and says Amazon it's all your fault that's like documented saying Oracle it's all your fault it's not Amazon's fault Amazon never promised you that that would never go down they give you the opportunity of
 leveraging multiple data centers or multiple availability zones but if you're doing it just on straight ec2 it's your develop it's the developers and the operations teams responsibilities of the app team the app teams responsible for implementing all of that cloud Foundry shifts that burden down into the platform since the platform will take care of that for you so that you the app team the app developer in the operator can simply say here's my code run it for me I don't care how we will distributed across az's so when you lose an AZ you're still up and running that's a huge difference so companies like Amazon often have things that are built on top of their own infrastructure-as-a-service that's made create some abstractions that give people the feeling of a platform-as-a-service I mean this this whole platform
 service a big Market there's all kinds for good reason there's all kind of mean Heroku is a very different thing than Cloud Foundry you know I want Heroku as an individual developer hacking on something I may not want that as a large Enterprise can you give more color on where Cloud Foundry sits in the market of different platform-as-a-service boxes I think everything you've done you've described with platform-as-a-service like Heroku for example I don't want to deal with auto skill and groups on Amazon I don't want to deal with the availability zones do I deal with that have a plugging into some CDN I just want everything to be taken care of by her Oakland want to think about anything talk more about where Cloud Foundry sits on that spectrum of different platforms as a server so the one thing that cloud Foundry has over let saying Amazon Solution on top of their own infrastructure or Heroku has being just as a service
 just like life after your thing they don't have a full past but they have some some of those they have like compositions of of their own products write the like kind of give you a fit so I can one collect deploy like 15 services and it does some stuff for smack of small bits of platform-as-a-service but they don't have a platform-as-a-service if you will but what cloud Foundry does there's a couple of things that are really compelling about Club battery first of all from the get-go it was built to be multi-cloud so Cloud Foundry will run on AWS it runs on gcp it runs on openstack it runs on vsphere so it runs in your own data center or it runs up in the cloud sofa Roku for example is just too SAS service and so this week we also offer run. Pivotal. IO so we do offer Cloud Foundry as a server
 that's actually a very small part of our business most of our businesses that companies want to own their own platform-as-a-service whether they deploy it up on somebody else in somebody else's data center like gcpra or AWS or in their own in openstack or vsphere based environment in their own data centers they want it on their platform and we increasingly have more more clients that are deploying it actually more than one location so they've got something in their own data center but then they also deployed up on Asher for example to make sure that they have first capacity or or or just two different data centers just just Disaster Recovery that type of thing so that's one of the things the other thing of course is that cloud Foundry is is all entirely open source and it's funny because when I first started a couple of an active 10 years ago I used to joke around that if my father in
 however wins the lottery and I would always say my father likes he's the only one who plays it regularly but I always said if he ever wins the lottery I'm going to quit my job and work on open-source so do you know 10-15 years ago there were very few people working on open source and that seemed like just the most amazing thing and now the brilliant thing is that I and so many other people are gainfully employed and get to work on open source and that's just been a fantastic shift but he's been open source from the first day although I check a little bit because when I first joined the club boundary team three and a half years ago I sometimes put air quotes around that open source the source code was out there it was on GitHub but the only committers were pivotal people and that's not really I mean open source I didn't understand open source that well for years ago but I have always had the sense that made me uncomfortable and now I understand very clearly that open source is not just the availability of the source code but it's the
 the Vitality of the community it's the number of commuters and those types of things and so for the last I would say couple of years or so we've had to Cloud Foundry foundation so pivotal actually donated all of the open source code into it's a Linux foundation and and that that so now we really I took the air quotes away we are an open source project we don't have it all doesn't own the code anymore we don't own the process anymore we still have a great number of the competitors I would say the vast majority of the committers but we now have committers from our competitors we have committers from IBM and from from Intel and from many other companies that you know competitors in on competitors as well
 show you got a bacon delivery service and you need to notify your customers when they're bacon has arrived at their doorstep twilio helps you make sure your customers get the bacon while it's hot twilio's programmable API let you build SMS or voice alerts easily in the programming language of your choice all in under 5 minutes with only a few lines of code now your customers get a text or a call the instant their bacon is ready if your customers want to see the bacon frying on a hot pan twilio has video API and SD case for the platforms that you know and love learn more It Go. Twilio.com podcast and get an additional $10 when you sign up an upgrade your account that's go. Twilio.com podcast you will only pay for what you use and it cost less than a penny to send a text
 get started at go. Twilio.com podcast get your bacon delivery service cooking with twilio's API for Voice SMS and video
 very interested in your thoughts on the business shifts that are going on as we're seeing kubernetes get popular we're seeing people using Mesa and these are these things that are sort of lower-level orchestration engines that might serve as Primitives for people to build other platforms on top of like red hat built-in do platypi form call openshift on top of kubernetes which seemed somewhat similar to cut down there not sure like the place exactly the same Market does boundary they are the abstractions built in a way where you can plug into the kubernetes he goes to smoke of kubernetes provides enough economies of scale and you really want to give a pre-existing customer like hey you really should swap out your lower your lower tier of orchestration with kubernetes it can you take advantage of that evolving ecosystem
 absolutely and in the reality is that there is not a one-size-fits-all solution one of the things that we say about Cloud Foundry is that we are intentionally and unapologetically opinionated so what we do with Cloud Foundry is we in fact provide you a safer environment in which your applications will run which is a nice way of saying what some people will interpret is very negative which is to say it's a much more constrained environment so we don't allow you we don't give you the rope to hang yourself now that is sometimes laid at are at our doorstep as a criticism that's why I use Roku as well I use Roku stick cuz it cuz I won't hang myself cuz I have no idea how to be an awful person exposed to things where I can hang
 Greenfield application that is most often exactly where you want to go because you you have the opportunity to build things in a new architecture so going back to the example that we talked about earlier where we say you know we've got a bit and availability Zone that goes down I actually didn't carry that example all the way forward you have an availability Zone that goes down you still got instances that are running will Cloud Foundry not only do you have those instances still running but Cloud Foundry will automatically detect that you only have half Your Capacity running and it'll automatically spend up new instances but we can only do that if those instances were stateless if you were depending on the state that existed on that crashed rap then you're in a world of hurt and then how do you restart so back to my documentum days we had these two components the doc base and then the web web tear and if the dog face went down you couldn't just bring the dog face up and it would keep going
 you had to bring the whole system down because the web tier expected the doc doc base to be up first so there's certain architectural patterns that you have to follow and when you're building your Greenfield application you can and we spend a lot of time doing workshops teaching people have those Cloud made of architectural patterns and those types of things and people can learn them and they can follow those in a Greenfield but our customers were all that new startup customers that's all we have to do but our customers are the customers are here at the center price Summit there the phone Ford Motor Company's and the all states there these big corporations that have been around for tens if not over a hundred years that have information Technology Solutions that have been around for a long time and there is no reason to move them and now here at the devops Enterprise Summit we talked about
 okay we've got these applications now and there are often very very painful to keep up and running and that's we're going back to your initial question about this relationship between Deb and hops this adversarial relationship that's still exists in a lot of these organizations especially around these long-standing applications that have been in production for a long time and so what we want to do is we want to make those better and now they're there's there's a Continuum sometimes those applications what we find when we work with her our customers so we find a lot of those applications actually can be brought onto Cloud Foundry with minimal change it turns out that some of these architectural patterns like separating your persistence from your your business logic patterns that people were starting to adopt and to various degrees have been successful and if they're already running in Tomcat for example we can move those were close
 something like documentum doesn't belong as an application in Cloud Foundry that really needs a kind of it needs more of an infrastructure dial tone to it it needs some of the road if you will to be able to bundle it together maybe not hang themselves with but hopefully they use it to just tie things together and so we wanted them you there's a lot of tools out there that have been designed to help that tools like puppet and Chef and somebody's orchestration engines and some of the ones that you even mentioned earlier like open shift and mazes still leave some of those potentially rough edges on there that might make it more suitable to do some of these traditional tried not to use the word legacy but there I just said it these traditional applications and so the reality is that some more clothes
 should take one channel some work load should take another Channel and I don't want to leave your listeners with the idea that cloud pantries only suitable for Greenfield because we are spending a tremendous amount of time in which we have this one offering for example our Services Group which will replat from 10 apps in 10 weeks so these are existing apps that weary platform on the cloud Foundry Buy
 configuration changes in a few in a shifts here and there and that's been very very successful but there's room for other things it's almost a little bit like Docker you know we don't talk about stalkers much snot the word that's in every every sentence like it was a year ago but we we went through that experience of every of the docker height and we'll clean cloud found in Cloud Foundry run Docker and the answer is absolutely we we can we run Docker images so we don't want to put our customers into the in the awkward position where they have to choose one or the other and so there is room for all of those things and it really just depends on what you're what you're trying to accomplish and what skill sets you have and all those types of things back to that idea of the Greenfield stuff so when you go to a company like if you go to Ford Motor Company Shaw other large
 can you do what we were talking about earlier where you say okay you want to get Cloud Foundry up and running what you might want to do is you should identify a project that you want to accomplish and we will use that project is the Greenfield thing that we is the first Cloud Foundry prototype that's that's what I was looking for so you get a proof-of-concept and you orchestrate the teams in a way where they can build that proof-of-concept and you get them up and running on cloud Foundry and then they've shown the base case that we can now in duct tape on within the company so at that point does does pivotal like a depart or just like becoming a just like kind of become available over email for at answer any questions and Company is able to adopt and have an internal evangelism and have Cloud Foundry like can they replicate that to other or other Greenfield projects or to Brownfield projects like
 what happens after that first event where they build proof-of-concept so I will tell you spoiler alert that our goal at the end is to leave because what we believe is at these that all of these companies need to be self-sufficient and and so our goal is not to come in and do work for you but to do work with you and eventually you take over that work yourself however it's not after that first project generally that happens after several years of engaging especially with these large corporations so after that initial proof-of-concept that often times gives it does a couple of important things it gives an example our that can be used to to Really energized
 Oregon people the workers that the boots on the ground some of whom are filled with a lot of fear because things are changing around them so it gives an example are in the ability to to Really evangelize look how great this isn't look how much fun we had it also is a great Exemplar that you can use in through all the way up through the management chain up and executive management even over into your Chief Financial financial office your HR department to help them see the benefits of making some of the changes because we talked we barely touched upon kind of organizational structural changes some of those are going to happen this we have an it we often have these plan build run silos and I'm not saying that you're not not going to plan Builder run you are going to plan build and run but you're not going to do that along this style of boundaries anymore you're going to have a different organizational structure in a few years it will happen if you if you want to continue to be successful so
 first project is important for that and then we do we do a lot of things to help clients because scaling is really what you're asking about after you've done that first project how do you scale out during the process the process exactly how do you scale out to the larger organization so it isn't just this one product that you built its multiple products and there at let me tell you just one anecdote I have a very large retailer that I was involved in in the early days and then a colleague of mine ended up being boots on the ground was there Walking The Halls couple of times a week a couple of days a week for a year or so they they landed Cloud Foundry in about August of last year so stood up their first proof-of-concept platform and did the first they actually did a couple of products that were deploying right onto the platform all the way through the dev all the way out to production so they're running
 open production on cloud Foundry and one of the things that he did while he was there was he started running these workshops and the workshops were we're going to teach you some Basics on how to declutter Foundry how it's different how you deploy your code how you monitor your code how you scale it how you do capacity planning how you doing upgrades rolling upgrade zero downtime upgrade so it was you know a lot of that kind of stuff but what was unique about this was in very intentional was that we insisted on a cross-section of participants so we said we will only run the workshop if you bring people from your current development organization your current keyway organization your current project management office your current operations teams if you don't get those people signed up we will cancel and we were that opinionated we said you've got to have these folks here so we ran this Workshop over over two days and we
 so important about that was it it was a shared experience so now your operations teams were there the very first time that you did a CF push and your developers were there when the operations teams were saying how do I see those metrics and so it was a shared experience there we also did devious things like when we went to lunch, let it go on and we had two hour lunches where these teams that have an adversarial relationship shared a meal and I love to cook so sure my colleague Josh crack ran about 20 of these workshops between August and December of last year
 since December he has run exactly zero of them but individuals at this organization have this year run 70 80 90 of them how they themselves because one of the things that you do when you run these workshops is you start to identify who your Champions are and you work more closely with them and you enable them now to carry the torch forward and so Josh is no longer spending 2 days a week every week at this organization because they've become far more self-sufficient and that's the way that we work with a lot of dead wraps up into like the devops like I worked at Black Friday and worked an organization year-and-a-half since starting this podcast with the last company I worked at was Amazon and
 there wasn't really anything like that like what you're describing at the company perhaps because the company was orchestrate was built in the internet age and so it was kind of Built Well actually there was a pair of time where they had a big monolithic application took him two to two-and-a-half years to break it up into Services perhaps over that time there were group therapy sessions where they were surely surely yeah that's true and then then eventually they got to the Amazon that we know today with the highly distributed internal practices and whatnot so yeah it was quite interesting that the the cultural shift really took place after after that or the early Cloud Foundry sessions there it's really interesting and that's kind of reflection on Amazon we hear stories we hear stories from Adrian cockcroft on the on the ship that happened at Netflix and last year at the summit one of my favorite talks was from my
 Bland who is now with the 18 f o but he was at Google and he was one of the people that was received the government organization for those who don't know the government is kind of like the government digital service something I don't remember how it breaks down organizationally but that's right they're kind of the the dip if you want to pivotal Labs of the government is Special Force Special Forces they're the ones that are trying to come in and help organizations transform the way they build software government organizations and input Michael and he's at the ATM now but he was previously a Google and he was one of the people who was responsible for the testing on the toilet for example which if you haven't heard that story you should look it up I encourage all your listeners to look it up but Google didn't always have that the culture that we were just talking about the the the developer is responsible for Quality also responsible for operations they themselves didn't have them initially and had to go through that cultural shift
 and one of the techniques that that Mike talked about very eloquently last year in the video is online and I encourage everyone to watch it it was literally my favorite talk last year at Deb up at devops Enterprise Summit was that they in order to ship this into this test and culture one of the things they did was they posted testing tips on pieces of paper in the Stalls in bathrooms and it's a great great story about cultural change and and and shift and yeah you really tied together how so much so many of the sessions today are about culture and which is great and obviously very important but you really helped me tied together the connection between the software products that are developing and the cultural practices that come out of those products so so thank you so much thank you for having me
 software engineering daily is having our first ever meet up in San Francisco January 11th at galvanized if you live in the Bay Area and you listen to software engineering daily please come check it out I would love to meet you or to have some awesome speakers that Pete hunt who was one of the early members if they react JS team who is now the CEO of smite haseeb Qureshi who has been one of the most popular guests on software engineering daily preethi kasireddy who has written about her career transition from Venture Capital to software engineering via coding bootcamp each one of these speakers is going to give an awesome talk and I hope you can make it January 11th at Galvanize in San Francisco you can sign up on meetup.com you can also find the link on the software engineering Daily website software engineering daily.com I really hope to see you there

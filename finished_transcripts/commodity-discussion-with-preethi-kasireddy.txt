Transcription: play previous episode of software engineering daily called you are not a commodity received a lot of feedback both negative and positive the episode was a monologue that I wrote about why Engineers should build products on their own as a default career path rather than work at a large corporation as their default career path Reddit Thread about this episode was almost entirely negative most of the emails I received about the episode where very positive and there was clearly a mixed response there were some regular listen to Road in and said they had those kinds of mixed feelings and what are those listeners which preethi kasireddy who is a previous guest of the show she was on talking about her transition from Venture Capital to software engineering as a very interesting episode I recommend checking in in this episode Pretty gives some counter arguments and questions around the ideas that were presented in this episode you are not a commodity if you're in
did in these topics I'm discussing you might want to check out that episode before you listen to this one this is going to be a useful discussion for anyone who is thinking about their own career path and whether to go work for a company or to do something on their own the previous episode you are not commodity commodity was on a weekend it was an episode without any ads but his follow-up discussion was a little more substitutive and so this is I'm airing it during the week so I hope you enjoy this episode and definitely give me some feedback on if you like this discussion if you want more episodes that are discussing this matter certainly the emails I've received so far sounds like people do want to hear more about alternative career strategies so that I hope you enjoy this episode
continuous integration is so useful that I've started using it on my own personal projects snap CI from thoughtworks has the fastest setup I've ever seen I registered for SNAP CI with my GitHub account and after a few clicks I had continuous integration pipelines setup for a no JS application and a rails application that were just sitting on my get have account and I don't want my users to experience breaking changes so I want to run a large sweet of test for my application every time I push a change at snap see I will run those tests quickly in parallel on a worker that snap CI spins up and takes care of for me what do you have personal projects like me or you work at a company that is looking for the perfect tool to improve the deployment process go to snap. Co / software engineering daily snap CI and bodies the lessons that thought Works has learned from 20 years of software deployment the sea
watches that have been written about by Martin Fowler and Jazz humble check it out it's snap. Co / software engineering daily it would support software engineering daily and you would get to check out continuous-deployment snap. CI / software engineering daily thanks for listening
 Rita kasireddy welcome back to software engineering daily for those who don't know you were on a previous episode about your transition from Venture Capital to software engineering and today we're going to discuss this episode that I did a couple weeks ago called you are not a commodity which you had some feedback about you had some comments and questions and you want to discuss it but before we get to discussing that episode why don't we talk a little bit about where you are in your transition from Venture Capital to software engineering and how that transition has gone for you so it's been I think almost a year since we have chatted on software engineering daily and in that time so I went through this coding program called hack reactor and after that I did some work on my own independently as like a contractor type of thing and that was phenomenal I gain some experience doing that and then I may
 my transition to do doing full-time software engineering at a company called coinbase and what we do is we build a digital currency platform for people to trade Bitcoin and ethereum and in the future are the types of currencies as well and we're trying to like create a financial system for the future based on the blockchain and so I've been there for a little over 3 months and it's been a phenomenal experience really learning a lot as a full-time software engineer and so when I came across your podcast it was interesting to hear because I mean obviously as someone who comes from Venture Venture Capital I'm very involved and very attracted by the entrepreneurial sort of mindset and as an engineer II I have that still in me and it was interesting to hear your kind of preach to just go out and do your own thing but obviously has some questions about like for a software engineer
 I like how it's impossible to make that transition how does my perspective contrast with the perspectives that you have been exposed to through venture-capital end through your work at coinbase which is obviously early on and it's and it's company lifetime there's a lot of entrepreneurial people there. How does my perspective contrast with there's you know you talk about in your in your perspective you talk about engineers sort of a bigger companies and throw like larger corporations mean while I'm working at a startup so it's slightly different in that sense and you kind of have as an engineer you have a lot more freedom and loveridge to kind of build and do work on what you want at a startup and you'd get to do a lot more than what you might do at a big Corporation where you have one single roll okay
 okay cool well so what are we get into some of the discussion that you were interested in talking about this will be slightly different than most the episodes cuz you have some questions for me most the time I'm asking the questions so I guess go ahead and ask me what you're interested in discussing
 yeah sure so I think one of the first things you talked about or like as an engineer you know you you felt that you are not being compensated as much as we have so much more leverage these days and the work you do at a corporation is not compensating you enough for the lovers you can go and get out in the real world but before a person or suffering Jerry can go out in the real world how much experience do you like real world experience you think an engineer needs before they're like ready to actually go out and build a product can like a college grad completing new grad go out and do this or do they need like a couple years of experience to see house offer is built in production before they go and do something like this
 what's the definition of real-world experience can kind of vary depending on who you are some people will say Real World Experience means working at a big Corporation or even a startup and seeing how the sausage is made the thing is whenever you work at one of these places you or your view on how things are built how things should be built in inevitably gets biased towards how the last place you worked at function and so there's there's positives and negatives to going to open organization to see and seeing how it works so so I don't think it's like strictly advantageous to go and get quote Real World experience to anybody that has been alive long enough to learn to code has Real World Experience they just they may not have real-world experience building a software
 but they have enough real-world experience to see some problems that exist in the world they've probably seen how some businesses work and they probably have ideas for four things that they could build or at least areas that they're interested in so I think you know by the time you're 10 or 15 years old or 20 years old or 25 years older 30 years older however old you are at the point at which you learn to code you have enough quote Real World experience you may not have real-world experience building a company but in some ways that can be advantageous to look at Facebook your Facebook was built by somebody who had not built a company before and the result is that you have this really strange company structure that work really really effectively at. I mean how how long have we had internet businesses in the world not very long like 20 years 30 years maybe and so how many different models for building a
 company have been explored not a lot and so it's it may be advantageous to have a minimum of experience because then you're just looking at everything with really fresh eyes
 that makes sense I guess I like some of the examples you pointed like Facebook I think some people like during their childhood experiences there they just mature a lot faster maybe like sometimes even like 10 years faster than some other individuals so like do you think this advice kind of excuse to the person who said have has had that real world exposure and kind of knows what they want to do versus the person who might be a lil bit more sheltered kind of grew up in a very homely life and doesn't really know what to do when they go out there
 that is partly true there but for anybody who has admittedly lived somewhere of a sheltered life we're all probably were just coming out of college we're all insulated to some degree we all have limited sets of experiences but yeah thanks the internet there's plenty of things you can read about that will be tardy insulate you there are ways to have brought her experiences but there's also no advantages to being to having it insulated experiences because if you have extremely specific sets of experiences then maybe that's like the customer base or the user base that you want to serve like for example I spent many years playing poker online and that biases me towards thinking about the like the problems that online poker players have which most most people would not be
 not be thinking about and it insulates me in some sense from wider such a problem that real normal everyday people have that are not gamblers but it might inform more specific interesting problems that I could build for that customer base
 interesting I think I generally agree with that like for example Peter Tails program he he pitches that like a student doesn't even need college and they can answer to start building right after high school and you get like a very tailored experience through that program and the success of that I still hard to see the point of view that like if you just throw someone out in the real world go figure it out or she's being questioned the whole time I can see that point as well but just something to consider the next question would be like let's say someone does have the courage to go out and build something and follow your advice they do have to still make a living and not enough to pay rent and food and the basic minimum expenses to live so how did they come up with something that will actually generate enough money for them to stay afloat while they do this
 if you're really risk-prone you can take out loans or but the you know what I've seen from my little brother is he's doing this lifestyle Arbitrage thing where he travels around the world to places like Thailand or Philippines where it's super cheap to live and you can work on Consulting project Cedar on up work or if you start your own little Consulting business you can you can make a good amount of money even as someone introductory programmer and you can live in this in The Fairly cheap to live places you can also do this thing that there was a guy had on the show a while ago who had also gone to hack reactor he actually gone to to coding bootcamps and instead of going to work for a company
 he just went to live at home with his parents so you know it he had parents who were willing to house him while he could work on his own stuff there and until that's what he did not everybody has these luxuries obviously you know maybe people have no no money saved up they can't go to work at they can't they can't do any explorative stuff cuz I have no money saved up they don't want to take out loans they may have a family and in these types of situations you probably have to do some sort of planning up front where you say okay I'm going to work for X Monster X years and save up enough money to do some sort of explorative coating Journey but it tastes like the time the time Horizon for that type of decision would still be like three to five years which is not that long if you're thinking in terms of like this is the way that I want to organize my life I want to organize my life around
 building things and having a lot of autonomy over the things that I work on show showing any case like the financial framework that you you take to this this process may take some time to arrange but it's totally worth it and if you are if you're younger or if you have fewer things that you're tied down two then you can make it you can you can actualize it a lot faster you can find different ways to go off on your own building type of experiments but if you're older if you have more ties or more deaths or something it may take longer to navigate your way towards that direction and I under and then I would have like money and making enough money yet an interesting stat where you sort of talked about how I Apple or Google make a million dollars per year on you but they pay you much love
 slot and that's that's probably true in like an absolute sense right like because they have certain number of prophets you divided by the number of people in the company but if you're going out as an individual trying to build a product you don't have that Network you don't have that customer base that Apple or Google or big Corporation is Bill overtime so do you think it's fair to say that like an individual can go out and make $1000000 a year or is it is it is is there is a scoot Scoot a little bit higher just because they're working on a bigger company in the beer company has some leverage that you don't pretty biased on in this post that may not come through clear is that the like you know there's such a such a diminishing return on the amount of money that you need these days just because like a smartphone is like the best thing that you can possibly have in the world and it only cost $600
 so maybe you don't need to make $1000000 a year immediately or you don't need to make $200,000 a year immediately working at a big company but show that that kind of you made your point your point is that you know you when you go to work at these companies you have the you have the leverage the company gives you the leverage to generate 2 million dollars a year and then the company captures 90 or 80% of that that profit and then they only give you $150,000 $200,000 to take home I'm not sure if 4 most people how much difference the $150,000 versus the 2 million dollars would actually make in their lives but my point was more that like if you're coming at this from a financial sense you would be better served to try to build one of these type of revenue-generating monstrosity is then to work as a subservient agent of of
 one of them so like people look at people look at that that treadmill I go you know it's horrible deal for the people working there and I look at it and I'm like wow that's a great that is a great revenue-generating machine a piece of Machinery that they've built but I guess your question was more around like a if you like how you know how can you build the customer base or the network that you would need to catch up to this type of a revenue-generating engine which I guess is more of a social question like how do you build the network how do you build a customer base cuz you're not at this company will you have a lot of people to talk to and a lot of in the the job of selling to the customers abstracted away from you
 and I think that like part of that social the social problem to to tackle the problem of becoming an authority on a certain product area or a certain type of engineering part of that can be achieved through blogging or Cora or podcasting or Twitter or these different ways were you can become a social of thority on a highly need Niche topic yeah there's dirt there have been models proven for this at this point like you know Quincy Larson is the biggest Authority on coding education and he basically became that Authority by deciding he was going to become the authority and writing incessantly about it which you what you can do regardless of whether you are qualified for that by having worked in it before or if you just say that you're going to become qualified by writing about it and researching it
 yeah interesting and like let's say someone say they do have an ambition to do this but they don't feel ready or they don't feel like they're financially they're not going to be able to do this financially just yet so they want to go out and save some money what it couple questions so I can let you want to go out and then if she and get some experience in the meantime and save up some money before they do this a like what kind of companies do you think or what size of companies do you think provide the best experience for someone who's going looking to go out and build something on their own two what are the skill says they should be looking to gaining at these jobs that they take before they go out on their own probably the best place to start is like you know the the mid-size answer this question is the mid-size fast-growing company like coinbase where you're at or like Airbnb or Uber for these places where they're they're tackling problems of like really
 fast growth and then there's a lot of opportunity for people to jump into like even if you're an engineer that that has little experience but you gain you gain you know 5 or 6 months of experience in in the domain they are working in like I probably after 3 or 4 months of coinbase you can probably think of applications that you could build within coinbase that would have a lot of upside for the company so you can have a little Dino entrepreneurial venture within the company but I think there's a lot of value to going to these bigger more ancestral companies like you know like I worked at Amazon and it was very fast because it was it was almost like I mean I thought about it as like being in like a museum it was almost like just walking around and seeing how this stuff was thinking about how the culture was built to be able to scale over 20 years and and maintain these properties were people are
 active and their leaders and their opinionated about stuff so so really like any type of company is going to give you interesting experiences either about what you what you like or what you dislike you know it in end different perspectives into how a company is at the beginning and how a company is 20 years into it depending on you know if you want to think about how you're going to build a lasting company like a Google then yeah maybe it's better to go to a Google but your I think your other question was like what skills should you build while you're at these companies and you know I think there's all kinds of scales look probably the things to focus on our what you could learn within that company that you can't learn anywhere else you know like if you're at coined
 guess you probably have access to your ways you have access to information about how people scale how companies can scale Bitcoins systems and the domain to specific domains of challenges for for for building those types of systems and you're not going to able to find that information on medium or on cora or read about it or hear about it Now podcast so it would be interesting and unique to end it would give you specific highly differentiated set of skills to focus on those sorts of things you know not not to not to the detriment of you know learning react JS or Ruby on Rails or whatever more generalized skills you could learn at this place but there is a there is a type of differentiated information you will get by virtue of working at some established company
 financial company versus working at like maybe a social media company to think that their experiences their influence what they end up doing and what what product you're working on at that given company but other times you know the guy I worked at Amazon and I'm I am but don't have any plans to build an e-commerce business to the things that I've been things that I took away from from Amazon were more about the culture and the the attitudes of the people there rather than the specific products that they were building when advice that I've always heard is I always be like at some point I don't know whether it's in the next year or the next five years I will go out and go something on my own but when I tell this of people of the advice they often give me is why don't you instead of making the full jump why don't you do something on the side like on nights and weekends what do you think about that idea instead of instead of going in and jumping in
 hundred percent it's not a bad compromise so you know like near the end of college I just started realizing that I was having a lot of fun building stuff and it was much more fun for me than playing video games or going to concerts or whatever and show that realization has kind of propelled me to just do this stuff whether I'm working at a big company or now you know doing software engineering daily all of my spare time is spent building stuff and so that the decision to be building stuff is sort of agnostic of am I at a company or am I on my own and like I guess the the the importance of something that I'm building being viable as a business is is more important now that I'm on my own like I had to figure out some way to build an actual
 business card before I I left I left Amazon but I guess that is last true if you are if you are working it at a at a company you have a stable income you might the scope of stuff you explore might be more radical and interesting but yeah I mean that's not a bad compromise and then my next question is kind of slightly different it's and they like completely fail
 how can they serve prepare for that head of time instead of facing it at the time it happens I've learned it where the things I can do to find a cushion that failure so they can pick themselves back up and maybe go on to building on the next thing or maybe take a break and work at a company for a while before doing the next day
 for you and I it's really hard to have what it what you know is a complete failure because regardless of how badly we fail in business ventures we still live in America and you live in America you have clean water access to the toiletries and it's like it's really hard to imagine something if having a business failure where you somehow lose access to it like having a nice bed to sleep in the downside risk to starting something for most people that are like listening to software engineering daily is really minimal and so like the main thing that that scares people the most is the shame rather than it's really rather than like the actual like losing of money or the prospect of having to borrow money from parents or borrow money from friends or or take out a loan
 going bankrupt or whatever these things are not actually that's scary because they don't really threaten your livelihood in any meaning you well for most people in a meaningful way it's more like the shame and the stigma of potentially running out of money you're failing in that area I know that once once we bumped into each other at a conference and I was going to tell you that I'm doing I'm not ready to work at a full-time job yet I kind of just want to do my own thing and you were like all for it where is like my friend next to me my friend next to me was like no I think like it would be good for her to experience at a full-time company and you kind of like didn't like that idea some cute and then I know that you're an example of someone who said I have left their full-time job to do this podcasting thing and you're making a career out of it so how did you make that jump and like how how long did it take for you to sort of
 settled it actually figure the whole thing out financially and like are you satisfied or do you feel like you're going to probably do something else later yes or to be clear I probably would have gotten fired from Amazon in the next like 2 to 4 months or something because I really was not performing well I was not cuz I just didn't really like the work and I couldn't find my couldn't that wasn't focusing I should say I couldn't but I wasn't focusing on it but at the same time I was just thinking about software engineering daily and the idea of a podcast it just made sense to me that this could make enough money is a lifestyle business so so I Stumble kind of stumbled upon the idea of what would be a decent lifestyle business right when I when I probably needed it so just got lucky coincidence and
 show as far as like am I satisfied I mean I am really enjoying my life right now because my day today is I get to talk to interesting people and I have a lot of control over what I'm doing but like let's be clear I'm not building software I'm short of an armchair architect I think it is I can't remember what some gas recently coined that term and show like II and I think of it is very much as like kind of like just another like training cycle for me you know it's it's it's it's the process of like understanding how advertising sales work in a podcast has been really interesting because you know that is really important for me to understand in order to get it in order to stay afloat as as a podcaster and understanding like to what degree do I need to grow and then kind of understanding like what is if this podcast failed
 but I do like thinking about the the the downside risk but like I mean I'm working on it some other software projects on the side and eventually all all all be doing something else okay I'm sure I'll always be interested in the media side of software engineering but I definitely want to build build softworks like this is to be clear like podcasting about for me at least podcast about software you so much easier than actually writing code
 interesting but I guess it's still falls under the bucket of you're not working for a big Corporation and you're trying to make money and do something that interests you personally
 so I kind of falls under that bucket still even though you're not building software I guess I under that subject what are examples are who are examples of people who are building do it have gone out and done this not excluding sort of the the canonical examples like Facebook or or what not but like do you have examples in mind of should have smaller companies people like are like me and you who just went out a few years ago to do this on their own and I really succeeding at it look at the the lower end of generating money I think there are all kinds of people who are doing this lifestyle Arbitrage thing where they go and live in Thailand or whatever and there there's doing consulting work and then maybe they're writing their own saying in their spare time and they can live off of $30,000 a year $40,000 a year whatever they make Consulting and then there's you know people who write word p
 plugins and they make a living off of writing these WordPress plugins and then people buy them often enough for them to make a living and then as you move up the profitability stack there people who is like the person who made I think there's something called Nomad list which is like basically a way of hiring hiring nomadic programmers and I think Nomad list makes a lot of money there are I think you know sometimes I think of people who have done this there's this guy I wrote about in the blog post that you are not a commodity La Posta Sky Marcus friend who started a dating website that you couldn't he just started cuz he was learning C sharp he's he was literally like I want to learn C sharp what's a basic application I can build a dating website and like 10 or 15 years later I think this is trending on Hacker News yesterday he sold it for $575
 play just this thing that he had started hacking on and there's also like the exact I think the example of aetherium is really interesting I think vitalik buterin started it when he was I think he was basically like he was working on some Bitcoin related Technologies but mostly he was like doing journalism and just writing about Bitcoin in like writing about governance stuffing the challenges of of of a cryptocurrency protocol and eventually he was like I should just do this and then he kind of turned into this Authority on what is now at the area meeting invented and then became Authority I said there's all these different paths that that people can take those are mostly my questions but this is been super helpful these are kind of the things that are there were like coming up in mind as I listen to a podcast and I'm sure most of the people had the same questions and terms
 yeah because like it's not like it's not uncommon for people our age between like in their 20s or 30s to feel this way and kind of go through your self-doubts and figure out feel like okay am I really doing anything working for this company or should I be doing something else like people kind of go through like an existential crisis turn the sage essential E2 that I know or all my close friends at least are going through the same thinking process so it's good to kind of here you go out and tell people like yeah it's okay to go out and build something on your own and even if you fail it's fine if you're not going to like be on the streets necessarily
 thanks to symphonic for sponsoring software engineering daily symphonica is a custom engineering shop where senior Engineers tackled big Tech challenges while learning from each other check it out its symphony.com SE daily that's s y m p h o n o. Com SE daily thanks again Stefano

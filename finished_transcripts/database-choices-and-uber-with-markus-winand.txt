Transcription: when Uber says engineering team published a blog post about moving to my sequel from postgres Marcus Vine and started receiving lots of email that's because Marcus writes about databases on his blog use the index Luke which is a guide to database performance for developers the people emailing Marcus wanted to know if postgres doesn't work well for Uber is it safe to use for anyone Marcus wrote a detailed blog post that was a response to Uber's discussion of postgres and in today's episode Marcus explains why postgres is perfectly fine for most applications which I have a database indexes we talked about many other topics most developers are not experts in choosing between different databases because the average developer maybe knows the difference between I know sequel database like mango and a normalized sequel database like MySQL but that developer might not know the more subtle differences between different SQL databases
like my Sequel and post grass that is why Marcus is site is so useful and why it was a pleasure to have him on the show to talk about databases
 the circonus monitoring and analytics platform is a leader in accurate monitoring and custom analytics for any Tech at any scale for 6 years circonus has given Engineers the tools that they need to understand the behavior of their systems whether it's leveraging anomaly detection and learning tools to quickly adapt to unexpected changes or accessing the flexible analytics solutions to plan your resource allocation circonus is the go-to platform that enables you the engineer to answer the questions that support your problem solving goals if you want to learn about how to better understand the behavior of your systems with monitoring tool that you can trust go to Cirque honest.com SE daily for your free trial Services built by and for engineers and they know that inaccurate data from monitoring tools can lead to bad decisions and that's why their platform stores data using histograms which enables recall
 Tire Distribution of data it's not just compressed or average data for for your alerting you get accurate alerting and Reporting date of you can trust this method is not used by most competitors in the monitoring space many of whom may not even guarantee an accurate measurement for a 99% service level agreement let alone the service level agreements that your customers require of you which would be higher than 99% again to check out circonus go to Cirque honest.com SE daily it would support the show and you would get a free trial circonus offers smarter monitoring for smarter Engineers check it out at circus.com such as he daily thanks to circonus for being a new sponsor of software engineering daily we really appreciate it
 Marcus mean on right about databases at use the index Loop a Blog about database-performance a guide to David performance for developers Marcus welcome to software engineering daily so we have done a few shows recently about this issue of uber moving from my sequel to post grass and the blog post about this migration work on a popular they trended in the episodes that I recorded what kind of popular and what thing I was surprised about as I dug into these topics and did some reporting I did some research is it was quite interesting I found myself interested in databases and I had thought the databases were this Arcane topic they had to be a DBA to understand but it's probably just hanging in there like why was this topic of Uber's database-migration so popular around the internet
 that's a tough question
 I sync to a certain amount every Big Tex company blocking about some decisions to make a special in a database in Pasco chances to to go viral at the moment it's just a day in the database seen that a lot of movement in the last year's like that wouldn't know SQL and pick that up I don't have that that makes it quite easy and if one of the big companies was there but no names comes in and says okay we be found at this particular technology is not a good fit for our need and that's why we change to the other one out of this this blocks are already going through the sky when you see a paper come out of Google for example and they come out with something like what was that database a cockroach DB was based on a spanner or something like that you know some some new database technology there's not as much virality to it but I feel like this particular decision had something to do with tribalism like there was like an us
 versus them mentality that some people took away from the blog post it wasn't actually intended probably by the author but you know there was like oh like let's latch onto postgres Sequel and be part of that tribe did she did you get that sense from the kind of Internet interactions that you saw today actually realize that it's just practice has been published but I didn't have the time to read it at the time and while I was busy doing other things my emails are coming in and people were asking me about this block and is a diva really acting like is it really that bad is it supposed to be that much crap and so on and it's actually caught my attention and I told you the reason why are ten blocks about it I just think and keep the tone of the blog post is not very fair and it's actually not helpful to decide whether a prosperous is the right
 tool for chocolate and before we get into the the database discussion too much of you know what what post dresses and versus my sequel of the things that you write about on your blog in great detail who are you why were you enough of it and thority on databases that people were starting to send you emails worried that postgres was problematic if you have a Blog about database-performance you do training tell me a little about who you are and how you got into this line of work
 and without planning it that way it turned out it after 10 years I used to be the developer having to the database experience it was really no choice it just happened to be that way and I'm at some point in time I changed my my last time and said Okay I want to do my own business and that's why I was just started to write to block you stay next look.com which was designed as a book from if I suggested it to a publisher but they declined it so I probably sit on the Block but eventually after it was finished I still published the book and the special thing about this book is that it is not focused on one particular SQL database but it covers pretty much any extra database and that brings me into a nice that I have a good feeling about this drama and Rica points of each database and I'm quite often getting questions like I had to have to use case what do you think it's the right choice or what what should I look for
 so she can get you something important for from a Rita's to know that I'm 13 years old if it's different databases and I have some some distance but still good inside and out of this database Technologies to to give you some guidance of decisions like that and when you see all of these new databases popping up whether we're talking about just the no sequel databases that have popped up in the last five six seven years or talking about newer databases that classify themselves as new sequel need to talk about
 what am I thought about it what's that memes equal MC calor volt DB looking at these different databases and this is large population of databases that are bitter cropping up are there any like misconceptions that chronic misconceptions that you think people have about how you should be evaluating databases I'll just hoping to become the next Facebook or whatever and I think it's safe to use the same technology but I think it's it's the wrong to the way to to stop thinking of this problem at all because the key strengths of the SQL databases is actually that they are very flexible to your design just keep my usual in to normalize tree but it's not a requirement you can even do it usually you decided in a normalized way because that enables you to later on
 watch Furious to answer specific questions but the important part is that you don't design your skimmer for the questions you decide to just came out to 2 for the data and later SQL to reshape to stay tight to answer your question and I think this is a common misconception quite awesome keep it up you sign into the database just to answer some specific questions and if you questions come up with a Christmas changed and they might have some problems and Terry's SQL databases are quite flexible to it because it's it's easy to ask different questions later on so are the mistakes that people are making as they focus too much on maybe making their Bethany weather databases in in terms of how am I going to be able to make schema changes aggressively later on or what what are those and we say people are thinking they're going to be the next Facebook and they're making incorrect
 which is because of that what are they what are they missing about the straightforward SQL databases that have been around for a long time honey I'm more powerful than 10 sink and even if we have to think that we have nowadays it's extremely powerful I have quite a lot of clients stronger food and price on a single box which is not very big at all and they're still running hundreds of thousands users on that so you can come quite a long way we supposed to Old technology before you need to give up their flexibility in favor of scalability definitely the name of your blog is use the index Luke why why is she cool performance all about indexing what is the importance of indexing
 that's what's special about indexing is that English English 14 to date of responsibility of the developers and this is hardly known and it's actually not written in your text books like that and that's the reason why I wrote it to database performance for developers and what do I need to take care of his index finger and this is what is Web book is about this is of course directly relevant to what happened at Uber because arguably they got into a situation where they had made so many indexes that it was creating issues for them and arguably one solution would have been to not make those indexes in the first place to place but once you've made them it's kind of hard to go back
 got two interesting questions you the number of in Texas I think they mentioned in the Blockbuster Tim might have had too many of them but I don't have any information about that so sometimes you were actually really need a lot of education for the other strange thing I've noticed is that they have had quite a lot of problems with what they refer to write amplification and competitive in MySQL and actually this is really better in my schedule is not in the transfer case of writing like inserting to entertainers but only for updates
 I just did something very strange and decorated databases to record fact and Effect 2 usually just inserted the update procedures usually charge juice to to correct Runge record affect that's the main purpose of dropped it in the traditional way of Designing Steamers and out of this fact you have recorded you are done using richer SQL queries to tear off Samsung answer questions basically what I single problem that the updates for suffering from this right temperature caitian it's just an, did you have so many updates compared to the internet that this becomes a real problem except your mail is using it to store transient data like like fishing or so then you're updating at a lot of course but this is a huge case which is better handle
 the idea of of indexing and by the way an interview I did with the guy that wrote that block was she actually did say that they probably did make too many indexes in and what what he said was the early on an Uber you know who were scaling so quickly the number of developers who were not experienced with databases are intensive experience they didn't know a whole lot about indexing what the purpose of indexing was and what the downsides of creating live in Texas were they they did as he said probably make too many indexes why don't you give us an overview of like when should you make an end when should you make a new index on a database and what are the risks associated with creating a new index should you should you be picky or should you just make as many indexes as you need
 and creating a new index isn't it the last thing to do if if nothing else to extend your trade in your index so the way I'm teaching it is that the first thing you have to understand how in Texas work and what type of creature is they can help and this is actually more powerful than most people sing because most people sing stressed out of state to free T4 infect in Texarkana operations like sorting data and indexes can be used to physically change the layout of the data stored on discs of the translator dreary some for later tater tot day happens to the festival you have to understand what to see in Fort Worth can can do for you
 and then once you high fat reward it is not running fast enough you need to to analyze the index the amount of this dreary just like this 70 months after. Sex is what you need to to satisfy this team and in some way and the first thing is of course to look at existing in the exist. They are already trying to send text to Mom what if they can be changed to maybe a satisfied history month and what day in case expanding existing index it is not an option then then you should start thinking about maybe I didn't you in Texas but both extending and adding you in Texas has some risks but definitely adding a new index has more risk filter for every index sweetened and taters with need some space that means it needs this disk space which is quite often not a problem but it also decreases the cash it right because you will have to stay
 LG memory for takesha Drayton really go down if your trade-in you index search the memory consumption it's all true that the right away because the English must be checked in sync as I mentioned it is redundant data driver time you're doing an interview updated it to the base table dangerous must be updated that's one of the case complaint Define violators to shirt shirt kind of Jamal Industries you provide to the database the harder it is to decide for the database to pick the right ones so that they took his needs to sink long about picking the right ones and it looks of making a wrong decisions I actually higher the last auction
 so you don't work for people who are listening to maybe less familiar with with databases and database indexing like I know I worked as a software engineer for probably 3 or 4 years without ever making a new index without ever having to type the command to do that why what is an index and what are the what are the circumstances where somebody should create an index just let's listen let's go to the basics show two different types of indexes but the most important industries to Peachtree next week she's basically just ordered it's on a date I treat you so you are you can pick some Koreans out of a table that's a call you may end and the end of three basically be those two columns ordered according to the Natural ordering like 1 2 3 4 5 6 7 and son and white table is actually not ordered an index is ordered
 I just makes a big difference because it works basically like in the telephone book in that would print it wants to know that if you have even if you have millions of of names in the telephone book if they easy to find one particular name because you know once it is ordered you can just wear mine research and Peachtree structure of the index is actually a little bit more tricky because it needs to cope least an update or the time to cut or telephone book is printed every year actually in different databases must be kept in sink or the time that means it needs a little bit more complex data structures to do the order in certain tell each without a lot of work
 it basically comes down to it assorted assorted representation of the index data right and it's not necessarily copying all of the data but it is creating references to to all the data that accurate indicator and adding references to the two remaining data so if you have let's say at a table with a hundred card and you're creating an index entry columns to the content of these recordings will be copied over today in text talk a bit about this Uber discussions who were migration I understand that there was a Confluence of circumstance City where they were
 did the fact that they had more indexes then perhaps they should have there was the fact that updates or propagating to all of these indexes rather than just a select select number of indexes and then those updates were being Amplified by the right ahead log so is that too accurate representation why don't you explain what happened to Uber from your perspective is happening is that they're running a lot of lot of updates on I-43 heavily in text Taber indeed usually you would expect that if you have an index on a column A and your rock doing an update on a colume set that you don't need to touch that index which is only hurting to call you but you should State the unique approach for stress has Reddit in most cases in many cases needs to update folder in Nexus even if they don't include the index data
 so this was the problem to have maybe too many indexes at least quite some of them and doing a lot of updates on them that I think was the main problem which cost Brighton precipitation generally high frequency of write a headlock and trees and a sink the old yourself at the cost of the physical replication to physically replicate right ahead look to the slaves which was $10 or more network dentist and then they had against why does postgres which it was over was using post grass before they wrote this block which I think they're still using it for many of their applications but now they don't want to use it as much they want to use my sequel together with their own homemade ski molesting but why does postgres do this sort of update because it's so the what are there issues was they update
 a row and not only does it update the index at the indexes that correspond to that row but I guess it has to update other indexes even up even in Texas that do not contain that row why is that so okay Andrew imposturous it's not actually over written test in utero create a Twist in Utica you have time to Russians of that same road in the database and the reason for that is if you're running a database you must be able to to do some kind of Snapchatting love it it's so cold my depression concurrency control nvcc feature that if you're running along 3 Richard takes maybe 10 minutes or even longer that you're still need to provide some consistency in terms that if other changes happened to the state to visit you in jail Trump time
 that you're still need to answer the trivia as though it is a atomic theory immediately finishing so Jeff Keeps The Old Road Russians in the database still needing those old versions can still access it at a new row is stored somewhere else
 I'm the reason that's the reason why order in Texas must be updated because physically for prosperous it's actually in Europe
 life is too short to have a job that you don't enjoy if you don't like your job go to hired.com se daily hired makes finding a new job enjoyable and hired will connect you with a talent Advocate the will walk you through the process of finding a better job it's like a personal concierge for finding a job maybe you want more flexible hours or more money or remote work maybe want to work at Facebook or Uber or stripe or some of the other top companies that are desperately looking for engineers on hired you deserve a job that you enjoy because you're someone who spends their spare time listening to a software engineering podcast clearly you're passionate about software so it's definitely possible to find a job that you enjoy check out hired.com SE daily to get a special offer for software engineering daily listeners a $1,000 signing bonus from hired when you find that great job that give
 respect and salary that you deserve as a great engineer I love hired because it puts more power in the hands of Engineers go to hired.com se daily to get advantage of that special offer and it's thanks to hired for being a continued longtime sponsor of software engineering daily
 choke you you write that the article was perhaps misinterpreted by the internet audience because the real take away was not that postgres was bad it was just that post was not the best fit for Uber's environment what do you mean by that his tattooing chocolate update update all of the time then they will suffer from the program day explained and using a database that does not suffer from that program I think I see a point to correct point but what I think the attic it was really bad about is to pointing out there to use case they had because it's really only need to update way more updates and you're doing in search otherwise it doesn't matter so much
 right okay so so this is this is your the bone they had to pick with it was that some people have to take away that postgres has an inefficient architecture for rights and this is a subtle but different lesson to take away then postgres has limitations for update heavy use cases explain that decision what is the distinction between update heavy use cases and the inefficiency of four rights adopted delete as most of the time you're doing English writing you take a recording you fact into your database update is just one huge case which is usually not the most common bond out of this interrupted too late and if you look at the Dietrich Sanford the weight or stress is treating to delete if they would bench Market they would find out that was Chris's actually faster
 eating at my schedule so if delete would be very important for them it would look different because because it keeps the data in the database even if you delete it for the same reason like you have to rush and stuff today update it just maxidus logically delete it and it does not remove it from the indexes yet to the only making you dinner table so that anything is faster for example of injuries about the same I think I think Evan the guy that wrote the article probably would have been more particular with his language if he would have known that the article with God so viral it is unfortunate that those slight Symantec differences in what he said was taken perhaps out of context because it was examined so closely by the hordes of people that read it there is something that you mention about postgres that was not in the Uber article
 did there is no mention of Heap only two balls which is a way to update a tubal repeatedly without touching the indexed columns and this would not necessarily have helped Uber but your point in writing it was that it would solve certain right heavy use cases that other companies might have is that accurate yes so what updated score keep on the topless so this is one special case where progress already optimize that problem that if your ovulating and if he's that old English just needs to be updated I need a special case which is basically you're not updating an index data and then you roll version happens to fit into the same data page to order groceries in debt special case they need to be updated Auto it sounds like special case if you know about it and make good use of it then you can become a common case I can even come to life
 because it basically means that you don't put those feature updating heavily into any index and then it will work so it means if your
 AIA, you Stacey for Sanford * 10 + 25 * 10 which is quite often updated busy every single right operations is every update but if you don't put it into any indication your truck stop taking his last 45 times and then you can't benefit from the heat on the top of documentation which act right so you also suggested that Uber might have underestimated some of the downsides of my SQL specifically the clustered index penalty where's the clustered index penalty if it's a time I invented it is so
 Dewitt Post dress stores at able to secure cheap table it just has some space that's true of the role of the rowing no particular order and once the road has been in touch because you to itch immutability it does never move to a different space on on this credit will remain where it was written for in the NFL stressed that means any index can use a physical pointer to point to Metro because it never changes his address in my school it's different it doesn't get worse or better be at my school it's different it doesn't you keep tapers and he was just a joke or two just an index concept which means
 if uses an English to store old Tabor data but as I mentioned before an index is already always something sorted so that means if you're inserting somewhere into the index you might come to the situation I need to move for a lot of data while he's a little later to to keep the order
 Jennifer invariant and for true that once if you're right a row to one specific place on disc it will remain there forever it might be moved to some other place later on Q2 in and day out for the other indexes cannot use the physical address of Tetro to refer to Tetro
 instead of using just a primary key
 so careful you have two letters of in Texas violent or stress you have to heat table in the middle and the index at or around 10 and take an old DIRECTV access to heat table in my security have to just an index in the middle and index around him. XS interested in there is less efficient than exiting a heap table because the heat. It's just a Philly address I can just say to find name is a final fitting theater Ruiz. For the cast of index it actually means I have to do a search like in the telephone book to start at the Middle look left right is it to you and to an extra search operation which takes more time than just doing one won Iowa operation correct at a time that you know it must be because it wrote it down with how Uber zartical discussed the topic of rebalancing b-tree indexes so I only have a vague idea of what a bee tree is and how it works can you explain
 would it be treated and you discuss a little bit earlier to explain what it is and explain what index rebalancing is I really don't like to drive to cut it puts the wrong idea in the mind of the people soak the Peachtree in Texas or to be treated sent that message meant to say it's a tree obviously it's a balanced redox the important point and the balance is kept by anyway which doesn't need to move a lot of data and it's not a periodic process it was every single insert
 that the internet is down in such a way that the balance must be kept all the time so it's not that you need to to check whether it is still in parents or do some maintenance to Bring It Back in Balance it's just with everything right operation that the right operations done in such a way that the balance is kept all the time with medium effort actually and maybe something I should explain that basically means that the way from the root note to the lowest level note is to say in a trustee for 3 pound at the same time at the same speed sure definitely an end can you explain why that was relevant to the Uber article in your recap of the article what did you have to say about index rebalancing
 I think it's I think it was coming up because of the back they had with the replication oh yes okay I think it was related to happen to hit Oshkosh revocation packet and David Guetta physically replication of postgres might break more than just a little bit because of to rebalance I think this is what I I remember and yeah well it's true it's true if you hit it back I mean okay yeah I trust just to make sure Texas for writing the date of writing Facebook slow down if you add more in Texas but it's not as bad as rebalancing as meaning you have to read repeat the complete index it's a very efficient algorithm
 it works quite well for decades it was invented in the 70s of course it was improved since then quite a lot but it it it man it's just a trick by moving only very little later it's really extremely efficient now quote from the Uber article that you did agree with was it was a quote about ORMC said for instance shade developer has some code to have to send in an email of a receipt to a user depending on how that's coat that code is written the code May implicitly have a database transaction that's held open until after the email finishes sending while it's always bad for him to let your coat coat hold open database transactions while performing unrelated blocking I owe the reality is that most Engineers are not database experts they may not always understand this problem especially when using an orm that obscurers low-level details like open transactions this type of open transaction problem and more generally a misunderstanding for
 how the orm layer interacts with the actual database is apparently widespread why is that why is it so widespread that there is this open transaction issuer people don't really understand how the orm works safe on my observations is that English final field no trust related to the u.s. statement but generally developers use the rhyme to 2 height isolate themselves from the database and data to R22 delicate without actually ever have swimming and how to take the Pittsburgh Steeler Hind
 and unfortunately it doesn't work even if I don't know what what are using it but if you look at high when it's like Savages I think I better come on or I'm turning you into creative high when it keeps on stating that hibernate is an addition to your tool belt it gives you more more ways to to to sore throat and sometimes it's a good tool for asking sometimes not and you're still need to understand how databases work even if you're using a ramp to it nevertheless shooter pasta kitchen sink that just vanished it's hardly anybody knows about left right now to try and for camper transactions and two transactions are racing at it even read don't hit transactions have tickle to use case because they they they keep the to snapshot life for you as long as you have to read only transaction open today to place gives you a free
 Ocean Point of you even if someone else changes the date and even if there's someone else commits the changes you still don't see it if you're as long as you have to transexual that means you can talk to your dad about the correctness of your coat because you can throw them as through your voice While I'm Alone in her in a database extremely powerful tool the more General consequence I see of this is just that you know is it is it is it true perhaps that this is a this is it an issue is a wider issue the fact that developed like your developers on the front end might have to do some database some some database interactions where they need to know about these things like left Joyner outer join or whatever and the fact that they are using the orm as this trick to obscure low-level details and and which consequently gets them into problems but it's just like
 is this a Jewish speak to a problem in the way that we were building tools today cuz I got for you see I don't know if you've read about these tools but there's these tools like graphql and Falcor from Netflix that are essentially these things where you can request the day that you always request the data just you make a Json request and then you have a server in the middle that federates that request to the actual databases that are doing the transaction so it seems like these are layers that are doing what developers would want out of an orm this obscuring from the lower-level details are is just the direction that we need to move in or do you think that developers really do need to learn the lower-level transaction ality of these databases and there's just no getting around it
 don't take Revis determination to saying it as a low-level sing it's a pretty powerful extraction to the transaction and after transactions is to write software that works in a concurrent execution vehement flat while writing this after you don't have to take care of this concurrency because the database takes care of it I just extremely powerful I think it's completely honest about the estimated but to to take benefit of this you just have to Define okay here the transaction stocks and she attention even if it's a read-only transaction database please take care of me I'm just joking me as to which was 11 and I trust you and databases to that and it works if you feel use it correctly I think it's something I think it starts with the education even if I'm also teaching at at some universities of a bad sign
 initiate
 just too much nowadays we have so many tools and universities diversities need to teach what is touch most of these tools the time to cover the ground it's just when it's just passwords everywhere and no one takes care about their two faces anymore because there is no time to cost at the University still takes maybe 5 years and dirty as you have to fit in that too many passwords it's just impossible buzzwords become I think they do actually become things that are useful and they become these foundations that we can actually we can build on they do become useful core abstractions so you know for example like I remember I was taught Assembly Language at University and Video in retrospect what did we really need to spend a week and a half on it on Assembly Language you know maybe this is something that is is getting old so I mean
 she's like a broader conversation you know how is that your teaching and University in your interacting with people on this level how when does the University know to be no sacrifice what might be called fundamentals and move up a stack and abandoned older things I think of course we need to have a look at them or molding Technologies as well but as we don't know which of them will become mainstream haven't accepted it which I have to to be sure to teach some of the foundations we can still smell it I mean Jacob recent transactions for example is it in general it still valid concept it's not that it's replaced it's just it in some situations let's let's name the beast in some situations the cap theorem comes in so if you happen to
 Gail to an extent that you cannot write on The Singing Machine anymore then yes then you have to give up something no question but until that point that relation to be safe I had contacted you freaking suck it's not not wrong I think cap cap is great example of a fundamental melting I actually I would say at least half of people that I graduated with probably graduate without ever being introduced to the cap theorem and yet there were two or four weeks spent on figuring out what is simply languages in that to me it seems like a misappropriation of what is what are the fundamentals that you need to know about computer science these days maybe that's not for me to judge. I think it's an important message but what is maybe not stressed enough is that as long as you can run on a single box and kisses maybe for 4
 definition of that size as long as you're pushing this pounds you don't have to care about it this is somewhere out there to message to his lost dancing and you can can take the benefit of assistant and a Nurse Program S2 you alone at the end of this article the the abortion take away that many people have died from this article is at postgres is lousy food that they they they got that impression from The Uber article cuz you boys move away from postgres so when this type of thing happens where people take a sound bite sized lesson away from a post that may or may not be totally reflective of the actual technology with the technology can do this weekend it's actually lead to significant negative impact in the community or is this just going to lose this just typical like a blip on the radar that doesn't actually affect anything
 I honestly don't know if it's going at this rate I mean I really don't know I just don't know yeah well as you know what are the thing I found that was interesting is studying these databases and preparing for these shows was I got the feeling that and this is to your point about databases being fundamental United get the feeling that stayed a baby supposed to deal with the same problems that distributes systems deal with at the application Level like you know I've been doing some shows recently about Kafka and Kafka is this distributed basically Q or log however you want to talk about it and then you are do the shows about postgres and and my seat when I find the databases have describes traction of the multi version concurrency control and the the right ahead log and it feels very
 similar to the same problems that distributed systems deal with at the higher-level application stuff if you think that's overly romantic and keep some Concepts as has proven to be right like just depending to files and not over writing flight status to write a write a headlock it's just that I don't if I guess I'm contacted have proven to be correct no matter which type of application you're doing DVD Houston in databases and in any other applications as well so are there areas in databases that are particularly exciting to you right now the touch on these things really like cockroach DB volt DB these new sequel databases are these exciting to you or is this do you think this is just overhyped it's actually no tell take it out
 but what's exciting mirror what what's my current area of interest is how to ask your language has a holster for the past 20 years and nobody noticed most common examples for example you weigh stupid Aggregates to so-called window-functions people might know the window functions because even the spark and other attitudes have them and they are out of the history of Standard since 2003 supported by many many databases now or coming to my straight eight toshiro actually one of the last 8 digits not yet supporting it and if your go and ask people that can use SQL and Austin but I did notice feature or not you were surprisingly often get downtown and no idea never heard of that and that's a pretty sick because it's available for decades now and you have nobody noticed another example
 August the most recent release of desk fits under desk for 2011 introduced the concept of temporal tables which finally Source One of the last problem we got you to know my decision because one of the problems that was answers dinner at the time vorstadt how to cope is changing data like like a ditch it's basically about the update and now they still sell some tools that you can say if I'm doing an update on my data just making you prime an Andro rush out of debt and if I want later on to ask how to date it was looking at a specific time in the past then I can still create two oldest interrupted delete is no longer destructive and actually or right in front of you but you can keep versions in the Entertainer place that buys right into the discussions I've had recently
 Kafka just about being able to go back in time and see how things look basically because we have these app and only abstractions and it becomes very easy to reason about okay how do we roll back the changes that we've had and looked look at the past so what Marcus to wrap up a little bit by like when what are the types of teaching that you're doing went like when when a company brings you in or when a particular person ask you for some kind of teaching what it what are they looking for and what do you deliver in your in your lessons most common request I have is to basically teach the website to Houston next trip.com that means indexing industrial performance for developers just focused on what developers need to know not to how to configure the Opera
 interesting 2/2 how do anything like that but basically feeling how to write seen SQL and how to provide the writing Nexus this is the most common training I'm doing other than that I'm pretty much doing every training which is focus on SQL trauma development perspective so that also includes this more mountainous terrain features for example is a great place to wrap up Marcus thanks for coming to the show and giving your perspective on the Uber database debates and everything you had to say about Dave it's very helpful
 thanks to sinfonico for sponsoring software engineering daily symphonica is a custom engineering shop where senior Engineers tackled big Tech challenges while learning from each other check it out its symphony.com SE daily that's s y m p h o n o. Com SE daily thanks again Stefano

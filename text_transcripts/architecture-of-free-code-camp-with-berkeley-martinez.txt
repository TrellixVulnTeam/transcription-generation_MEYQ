Transcription: free code Camp is an online learning platform that takes people from knowing nothing about code to have enough knowledge to build software for a living we've already done a show with Quincy Larson at the founder of free code camp in which we discussed his motivation for starting free code camp we talk more about the technical architecture of free code Camp the economics of running a free interactive platform with thousands of users in forms the architectural strategy does not even have ads so it needs to be frugal Berkeley Martinez is the CTO of free code Camp Bandits Days episode he discusses how free code Camp works from a technical perspective including how the sites sandboxed coating environment is built I really enjoyed having Berkeley over to discuss free code camp and I think you're going to do this episode 2
continuous integration gives you faster safer software delivery with A continuous integration to look like Snap CI from thoughtworks the members of your team can push changes independently of each other and they can all see their new build running against different phases of tests before those changes make their way into production the fastest moving companies that I've talked to on software engineering daily are all using continuous integration snap CI from fireworks is available to anyone and if you go to snap. Co / software engineering daily you can check it out for yourself and support software engineering daily with just a few clicks I had my own continuous integration is set up for some projects that we're just sitting in my GitHub account without continuous integration I got continuous integration up quite easily using snap CI if you want to be in that Hero at your company that starts moving your organization towards deploying often
confidently towards that devops dream start working with SNAP CI at snap. Co / software engineering daily your co-workers will see you working with SNAP CI and they will fall in love with it themselves often times it takes somebody at a bigger company to go out on their own and say okay I'm going to roll out see I even though nobody else of the companies using it and maybe that Hero at the company is going to be you so check out snap. Co / software engineering daily and thanks to thought works for being a continuous sponsor software engineering daily really means a lot Berkeley Martinez is the CTO of free code Camp Berkeley welcome to software engineering daily online platform that teaches people to code for
free it's organized as a series of challenges that the free code Camp users make their way through explain the experience of a camper as they go through free code Camp sure we start the HTML CSS and then we quickly jump them to jQuery JavaScript algorithms user mainly to get people familiar with syntax is the Project's the projects involve a certain number of user stories and then the of the camper or students can Implement those used in any way they say the early challenges within free code Camp when you start onboarding those are mostly related to The Meta tasks of being a programmer and also the method has two free
Camp you get on board into the community it shows you the importance of the community the content within free code camp in the medium Channel what's the importance of getting the camper acquainted with the overall Community before they even start coating sure the most important part you can do it in isolation it takes them all out longer comes when you find a community find a group of people that you can code with and solve problems together and you find that you become 10 times better at learning syntax are learning code learning patterns then if you were trying to do it on your own and constantly having to look up things and not knowing what to look up there's also the medical challenges of learning to become a good
Google error or stackoverflow user I feel like the early curriculum of free code Camp also teaches that as an important thing to be able to do like when you're solving a problem as a programmer on free code camp or otherwise you need to be good at Googling there seems to be a challenge in getting people to recognize that the cycle of problem solving doesn't begin with having a problem and then asking somebody it begins with having a problem and then asking Google like how do you how do you how do you acquaint people with that process with a proper cycle of solving a problem there's only two methods at a lot of new coders go about trying to solve a problem and the first one is usually search Google has all times you don't know what to search but it'll just Hammer through it
changing line color character until something works then the second part is you definitely what term the search for and finding the answer not just the answer itself but the explanation why that answer fits we like to promote the idea first asking questions though I'm not just on Google but asking the commute itself I'm very active Community real-time way to get answers and a lot of people there that are answering questions are the same problems in the second all the porch after that is to search cool case a real people fail it sounds like I had the optimal process totally reversed because when I was going through school I felt like I got trained to ask Google the question and then ask a classmate or another person
computer lab it sounds like with free code Camp you actually encourage people to ask each other questions before asking Google. Process stronger but then there are there also things like for instance attorney expression how do you search for that like expression? Expression expression like if you unless you know the term ternary expression you don't know what to search for you see that in someone else's code you're like what is this and then you try to Google it you know Google's not going to be optimized for that kind of search so these are solutions to going to live chat or if you're in class you ask your buddy next you hate you know what this means like what is this thing doing right that's why we encouraged people to ask the community first or get a room or the form we have before going to Google it and see if it's something like that the early steps and challenges
free code Camp are related to these meta aspects of programming and the community in the learning process that the campers going to go through eventually you get into coding it's self at what point in the curriculum do you actually get into coding what are the first steps that a camper goes through in the coding process so are HTML so not exactly getting used to a smell tags and looking at you smell and then CSS listen to Lupe JavaScript before we go into jQuery and now this is something we Face a lot of criticism for it because we jump into jQuery before we like teaching jobs in this is something that were so pretty soon within the next month or two of recording we should see a new version of the site with the
expanded curriculum and this will change the order things where I will start out learning JavaScript first and jQuery later on within the context of framework why is it problematic to start with jQuery before job script because jQuery is now it's cooked really and this has been the trend for a long time where people would learn jQuery become jQuery developers not necessarily JavaScript developer now JavaScript is coming to its has coming to its own a lot of browsers or I should say the the webspec has a lot of document quarrying syntax it's very similar to jQuery so it makes a lot of the nice things that Jake we provided obsolete obsolete jQuery still better at some things but you can get away with doing just JavaScript and using methods that are Universal to most proper most modern browsers so jQuery
isn't the greatest way to go about teaching JavaScript in the first place especially now since JavaScript is revolved around Frameworks learning JavaScript react and then learning the concepts of those patterns of those Frameworks provide not necessarily just querying the Dom changing the Dome that's certainly true though the jQuery query the Dom model of learning can be simple you can be simpler than working with a framework and what is peeling about that to me is you get people excited about programming because things are simple and their understandable at first is there a trade-off between getting people that quick win of experiencing program experiencing mutating the Dom with jQuery and teaching them things in a sin
triple ordered way that builds them the correct model of programming so they lost their you're saying is you don't see the immediate feedback is the the thing that draws so many people to web development take me to Corey and I'm changing without jQuery that's the beauty of the modern modern why but I mean modern in the context of the last 2 years 3 years we have a document get element by class in these methods around the same idea of coring the Dom and then you can still change them just like you would outside of Jake or Jake or if you can do it outside of jQuery just my learning JavaScript now you learn just how objects and methods work and you learn about the document object in the window object
when you can do all the fancy things without having to also teach jQuery how the camper get started with learning free code camp and I did an episode of Quincy Larson last year about free code camp we talk through a lot of this idea of the curriculum process I'd like to get your perspective on the architecture of how free code Camp is built can you give me a high level of you for the architecture of the current architecture is a pretty typical node app so we have a loop-back as a back-end which is built on Express Fields or models using Json and then it provides us with the really nice rest API for Hereford and hops used for the most part the app has been a plane Jade rendered on the server template then become
play minimal jQuery app the actual challenging parts are the running of the challenges in the browser and we used to do this with web workers are current mutation is doing everything an isolated iframes entirely react where all the challenges all the ui's built with react with Redux and then using rxjs to handle or side effects were still running the challenges within an iframe just to isolate does from the environment but now the framework that puts together by users code and puts them with a test and then runs the tasks little more complex now because we want to be a little more generic so now we can do things like an sas react on top of what we already do Jake or his pajamas
HTML CSS so are back in is the back and then our database is mongodb running in a replica set with the cousin are barber chair you talking about the sandbox that the coder can experiment with and write their tests so any given challenge decoder the task might be right an HTML blob that says hello world or write a blob of JavaScript that does this there a lot of different websites that are doing this these days where you have like a Sandbox experience where you're learning to code in the browser what are the challenges to developing that type of sandbox environment
the iPhone was a good fit for the abstraction of a Sandbox 2 code in sure so the string and come out as a string there's a very limited ways to get functionality methods into and I would workers on top of that Germans so we end up having to Mark a lot of things or make things do tricky things to make things like jQuery work cuz you don't have the Diamond Bar menu to prepare that end up just getting tons of has tons of headaches
I did a little testing with eye frames were instead of buildings long string and then running it in an eval and what worker now we build songs compile it together in HTML and then open an iframe and then use that a Chanel has the document for the iPhone and then to test instead of being compacted with that long string or input it into a method in that ice cream and then that method takes that string of tests and evals them and then runs the test against in that environment environment so now it's closer to what you would expect an actual site the way up natural site works but now we get a lot of things for free like the Dom is there jQuery works out of the box and we can shut down and
Pump It Up near eye frames easily and I have to worry about CSP issues right now or where are the shoes with what workers in CSP and blobs content-security-policy so and workers act trigger different security aspects and then I frames and Y chromosome is saying this is not valid dice help you easily manage your Tech Career by offering a wide range of job opportunities and tools to help you advance your career visit Dice and support software engineering daily at dice.com se daily
and check out the new dice careers mobile app this user-friendly app gives you access to new opportunities in new ways not only can you browse the thousands of tech jobs but you can now discover what your skills are worth with the dice careers market value calculator if you're wondering what's next dices brand new career pathing tool help you understand which roles you can transition to based on your job title location and skill-set dice even identifies gaps in your experience and suggest the skills you'll need to make a switch don't just look for a job manager Tech Career with dice visit the App Store and download the dice careers app on Android or iOS to learn more and support software engineering daily go to dice.com se daily thanks to dice for being a new sponsor software engineering daily we really appreciate it the browser approach I've had a conversation with my friend who works
a company called Data Quest dataquest is learn data science in the browser and my understanding of their back end is whenever you're doing a coding challenge in the browser your code is actually getting run on Docker container so they've spent of a Docker container for your sandbox did you consider something with more of a back-end approach rather than the the heavy client sandbox in the browser approach considered a couple times the biggest issue with those approaches cost and so freaking different situation than I like passing websites are where we're not busy funded we don't plan on ever taking you see money or selling advertisement or anything like that and that means that we need to keep our cost down as much as possible and doing things like running a Docker container for every camper at running their code and you know this happens
times for camper camper minute the easiest solution there's different everything in the browser so then you offload power from your dedicated server the campers browser so that introduces its own set of problems but the cost is the biggest biggest problem for us and so we definitely can't do anything like that and not running stuff on the back and also introduces issues of security if you're going to run someone else's code you have to do it and it's something like a Docker container right where you can shut down that thing really easily and not have any doubts about security you can't really do any other way he have to run in some sandbox that can't be can't affect the rest of your production are there do you feel like there are security vulnerabilities and the free code Camp Model of sandboxing so we we absolutely try not to do anything that would involve losing data or manipulating data
how user I'm getting the user data and so the only really berries that we found that we could be patch up our things like by the csrf so we have very strong csrf which means we are limited in the kind of things that we can do in the browser so friend since we're moving to use something called a product Logo Mix which is really interesting you can create a note server and write code for node right of the browser without have never touched it and it gives you a dedicated you were also server and so we wants you use this as are like API challenges so someone could right there an API using cocoa mix give us to you and then we can ride request to those URLs to test whether api's working correctly so one of these. She's with that is now we need to allow
challenges to make Ajax request so that the tests and run against so we whitelist go mix but then this is another issue if someone were to create a challenge or run a challenge save their code in this Challenge in a malicious way so for instance whenever you can be a challenge we save your code so that you can use it at some you can check it out at some later point in time we also give you a you're wrong with that your challenge code and codon that you're out and so you can then share this challenge your eye with anyone else so now we allow Ajax request to go mix someone were could potentially create a malicious go to mix URL a server there and then create a malicious solution to a challenge and then share that with someone in the context of hey I need help and then that malicious
skip to be loaded in the clients code or a crop of the clients browser and then hit a specific goal makes it so in order to challenges to be saved with the comex you are oh so now if you try to type in I try to save a challenge with the girl next door or even in the comments it'll be stripped out so those are the kind of security issues we're dealing with the hardest part of the free code Camp project the challenge sandbox and security risks associated with that are the building of challenges and making it in such a way that's generic so that we can do jQuery in the same framework and so the next person not the current version of the next version is done such a way that we have this idea of virtual files
and I took inspiration from gold actually so go passes idea virtual files are called vinyl files and what we ended up with very similar it's not exactly why doesn't he doesn't need all the same aspect cycle does because open tracks with a filesystem we don't so we don't have to keep track of file pass but we keep track of it so each time you headed code and your editor while you're in free code Camp editing service virtual file word has a filename that has an extension and it has contacts are contacts contents of that and then when you finally hit submit we take that file or multiple files in future versions and then compile them together and send me that web Packwood
we compile them into explain string and it put in a body tag and I'm at header and footer and then send that to an iframe after you're doing JavaScript we can follow your code together and then put that in script and put that in iframe same thing looks a little bit more about the curriculum the current curriculum model has four stages you can start with front-end certification and then get back and certification and then data visualization and then. Engineering certification the most interesting aspect of that sequence I find it to the data visualization element so when I was learning programming I never focused on data visualization any point why is data visualization a crucial step to learn for somebody who is on track to becoming a full stack engineer
sure so the first thing even though we list them out in a linear fashion you don't necessarily need to do them in a linear fashion you can do them in whatever order you feel like whatever what are you still comfortable with and people do this right some people just do the front end and the back and front end in the Frameworks the reason we put date it is after the front end is the date of this is really heavy is building interesting your eyes using our state and we think it's important to people to understand what that process is not part of map is telling the projects not necessarily the price for certain curriculum or certain parts of that so if you don't feel comfortable of his part of it and then
icicle for back-end or Frameworks we just want to say that even though we think all these things are important do what you feel most comfortable with that you can progress as quickly as possible through it to the Project's cuz the projects are going to be working to learn the most when you joined free code Camp how did the architecture look and how has it changed since then so I joined it was pretty similar to what it is now in production Xpress Lube back and using Mongoose at the time so we still had a mongodb database and the front end was mostly Jade jQuery but what's a few elements of angular mostly for the forms the biggest reason I came on is there are so many
with cookies and why are these issues didn't take the site down right to the site was still working there constant things like there's a common error with Express that if you send down a response for clients and then there's an error and some process that you left running you'll get this error cannot send after headers have been since or something like that when I came on this was the first thing I noticed we had tons of those and that was because there are a lot of mpoints that we're sending the use of data while sending Prince's an email out using node mailer and you still have a call back with no matter how many litters can I give you an error if it can't send out for whatever reason but these are being handled they're just being left open ended and so one of these things do air
throw into the wild and what I'm supporting is that process itself shuts down and then reboots and so while the site was the working and still functioning just fine you have a less you don't have the performance you would because you have servers constantly having to reboot the other thing we wanted is Epi because he wanted to be able to let users hit that Epi if they wanted to and we want to do in such a way that it's not a big maintaining hassle for us so one of the interesting challenges we have is such a small team we try to keep costs down we can't really hire anyone we are open sores and we used the open-source Rico as a way to as a way for people to learn to contribute to open source and further their knowledge of becoming a programmer and so we want to make the good race itself easily understandable and easily maintainable
so that anyone can come in and contribute to the Cove Base so who's back really helped us achieve that because we can still create a complex rest API and just rely on how to do that for us at the open source project Rico game is a massively popular open source project like a 529 contributors what are some of the challenges of managing a large open source project definitely early on we weren't sure we were going to be able to do because it was essentially mean Quincy So reading all these shoes closing issues that weren't really shoes directing people to the appropriate solutions for their problems and then fixing actual bugs so funny all these bugs and fix these things and don't remember the exact date but it was and so we are and
my idea was just the purpose of rebuild itself it shouldn't be just somewhere to put our code but it should be a learning experience and so we came up with the idea I'm just leaving campers contribute and letting cappers manage the cookies and manage the Repo Man as the issues Mashpee ours and so that's when we first started chatting campers that we have seen active in the community and this is the point where you realize that we could do it as long as we empower the communities by empowering people we made the job of maintaining open source project easier and this is true of any open source project if you call the benevolent dictator model we just have one person in charge of a repo and they're in charge of merging PRS r ends up happening that person get burnt out then the projects
either died or stagnates if it's an important project it'll like there's this idea and that's the idea of if you could significantly are mixed with Sprite privileges so that it gives the person contributing to the sense of ownership and and hopefully they continue on contributing and also helping Mash issues and testing things so that the project can live on as long as possible as long as it's being used and useful you're saying if you contribute significantly that is proof of stake and so you should be given privileges to merge other people's pull requests which which get you away from the bottleneck of the benevolent dictator approach
especially if there's a lot of projects that just have so many people depending on them and you just did the neverland dictator model just doesn't work in the long-term everyone gets burned out everyone has eaten a life get in the way but if you spread out the responsibility of maintaining an open source project to the community itself then the project itself pass the original Creator or the original maintainer and I hope to see you this model adopted by other projects that are that we rely on in this community. Just to clarify I didn't come up with this just realize it might sound like I did but I didn't come up with this I think it's open open source. Work on making it easy to on board in the open door Community want to like
having issues that are super simple always have a set of issues that are super simple the results if somebody wants to get started as a contributor to free code Camp all they do is open up the beginner issues you know bug fix tabbing and they figure out what the salt from their sure we have the Help Wanted time we have the only tag so these are issues that I've been deemed simple enough for anyone to contribute to specifically the beginners only we realized a lot of people coming to the freecodecamp we both know this might be the first time interacting with this idea open source and this idea contributing to other people's projects and we want to make that process that learning experience as easy as possible and spring as possible so not only do we have the help wanted and then you can use only tag but we
also have a lot of helpful documentation on how to contribute to open source projects and we do this because I don't know if you remember your first Pyaar tune open source project but it is kind of nerve-wracking you're never made one maybe if we could camp should be the last one anyways it is it is kind of nervous because you're you're you're just learning you just starting out to just learning kind of the unspoken rules and you want to help out because you're getting all this awesome software all the awesome utility for free if you want to contribute so if you open a p r e find a bug you can PR to project you using then you wait and then the waiting process itself is kind of miraak's you don't know if that the person maintaining the projects going to be like no this is I don't want this close.
or are you know you never know someone might respond the person maintaining that is notorious for being grumpy in a nice way but anyways we try to help him in every step of the way so they find contributing and finding the first PR simple one in easy and welcoming so that hopefully they continue on not just at least we could cancer be caused by any other open source projects when you joined free code Camp had the project already migrated to using react as the front entry part of the refactoring process to react or angular still jQuery on the front end there were talks about it this is before
right now in an hour we actually have bits of it in reacts okay we are the challenges Frameworks little bits of jQuery I mostly JavaScript JavaScript doing the heavy framework building when I joined we talked about doing this and ways to do it and I think the main selling point was moving so that we have the CPI then we can move to you maybe a client-side only have that does all this heavy stuff on the on the client and then we just maintain any PI server and then as we as a rash became more popular and our frustration with teaching and using angular we decided just to completely abandon anger and that's the time we were using me I think either one of them too and we decided to abandon it completely in
use react wherever possible so now we use server-side rendering Redux and we use Redux verb for are fun and stuff and our server side entering stuff paid for some of the more static pages and so we're doing something now we're moving to completely static Pages for everything besides the challenges and so we use nginx to proxy some of the pages so we've moved our shop so we have a shop where we sell merchandise album cover the cost of servers this used to be part of the actual repo I used to be rendered by are no servers and send down a Spanish to ml
I just meant that our shop was tired too I really cycle for production and because we have this giant move plant that meant we had to update production just to update shop which seemed weird thing to do to a couple these things so how we move the shop to stock page versus the static HTML page on to get a pages and then proxy that using nginx
choosing the tools for my side projects the first thing that I look for is ease-of-use that's why I love mongodb it is the most popular non-relational database and it is super easy to use at the beginning of a project I often don't know the shape of my objects and Mongo makes it easy to evolve the database schema as I like overtime overtime as my project gets popular I'm going to need to scale and thankfully mongodb has built-in horizontal scalability but configuration and database maintenance aren't really what I want to spend my time on thankfully mongodb Atlas was released in 2016 mongodb Atlas is the easiest way to get access to mongodb without having to run the database yourself you pay only for what you use for small projects all the way up to large production deployments to try mongodb
today go to mongodb. Com SE daily and get a free $25 in credit use promo code go Atlas 25 to get that $25 in free credit Atlas is the only hosted mongodb service built by the engineers behind the database the company mongodb with Atlas you get into end encryption you get VPC peering you get access to the latest releases and for a limited time you can go to mongodb. Com SE daily enter promo code go Atlas 25 get that $25 in credit and get started with mongodb Atlas thanks a mongodb for being a new sponsor of software engineering daily and thanks for being the database behind a lot of my favorite side projects in the past we're really happy to have mongodb as a new sponsor of software engineering daily
what did react get right why did so many of the JavaScript Frameworks that came before it fail to get the abstractions ride in the whatever react does that makes it so useful from your point of view I mean I've been doing shows on react for the last year and a half or so and you're being responses from people things like its relationship to functional programming or event-driven architecture what is useful about reaction your point of view so I'm coming from the Little Learners point you not necessarily D somebody who's learned or somebody who you want to teach someone who is teaching and someone when I first start learning react I didn't really consider myself a developer may be right I was developing I was making money as a freelancer but you know
guess it's an imposter syndrome I still felt like an imposter but when I started I felt like I was actually learning learning code learning learning JavaScript and so when The Persuasions we had with angular is just teaching angler was typical because we're teaching Concepts that were unique time so directives in transclude all these angler terms react to the scene I think what made the big difference is there is not about learning right but even that is just learning sort of an abstract Dom's and text but the other stuff around it is still JavaScript coding classes functions and that's it
funneling templates in it's it's specifically JavaScript and that's that for me is the big selling point was you're not teaching tons of other things on top of that thing that campers new programmers have trouble understanding and react make themes of difficulties I think jsx itself is maybe the most difficult thing and that's because if you weren't a dumb you're just starting out then you are in this GSX thing that looks really cool it's it's kind of like The Uncanny Valley words if it's if it's close enough to fuse right
HTML class rights of the Class Act review NJ Sax's class name one word with a capital N sew on the A stand for as in a label for some idea right now and it's actually HTML for so HTML capital s or things little things like that people up the biggest thing with react that was very difficult it's just not reacting self but it's so fun playing webpack State Management like those things create react app which gives you a really nice starting point to start building react apps without necessarily thinking about the pipeline around it
turn around and around it just to get right into building ragtops I want to zoom out of it and talk about free code Camp is an organization and its Mission I talk to Quincy sometimes about the Quincy Larson by the way they found her a free code camp we have conversations about the long-term goals free code camp in pretty cool a competitor so there's like lots of competitors in the learn-to-code space whether you're talking about Udacity or Coursera or maybe coding bootcamps there a wide variety of ways that somebody wants to learn to code can learn to code do you think of these other organization does competitors or do you think of this is just a big communal effort to get people to learn to code how do you think about the other organizations will generally
traffic going to these other two people would call competitors but an issue is the most part they have some system to charge users and once you put what you start charging for the services then your customer base sort of starts changing because it becomes obvious that not everyone has the ability to pay right not everyone is has the benefit of being in a big city or services that are provided for the French Broad areas they don't make much money or the cat just fear that, things are the time it takes for these competitors are the time it takes to work on sites on these computers and then spend the money on top of that
the one thing that we do think about a lot is the long-term of free code camp and the goal is to work the company around free code camp in such a way that we can sustain free cookie of itself and definitely without ever charging anyone buy any of our campers demons that's using the process to learn or any of the nonprofit's that benefit from morrow campers work so in that aspect places like I guess I don't want any other companies but we don't think of them too much in that aspect right there realizing that charging Learners isn't really the best way to make money and when's up happening to say they try to find other ways about it so I think one way that one of these countries is doing it is through
hi charging corporations right for the material and just going through K going through that process to corporate corporate training process soap so people could see me now Services than the price of those services and some skyrocketing and I think that's why all these companies are going towards the corporate route because when I pay for the services and then the people consuming is are their employees they're not they're not paying for it they don't know the dollar amount and then it's hard to judge the value for these things free code Camp is a purist organization in this model of not raising money not doing ads or patreon or anything at this point maybe that will change and if
what do you think about you know doing something for short-term property as a means to an end is there is really not worth it to do that him and you baby if you were able if you can raise him dad to raise some money or do some kind of Kickstarter campaign in service of growing faster I'm or I don't know or maybe the money just would not make it grow faster at all why why the purest approach is interesting because we actually are going pretty fast even 4.0 investment we're going day in day out. But once you so persons raising money through you see once you raise money through you see it in the incentive changes right so right now are stakeholders are the campers themselves but once we take you see me
Princeton now the stick holder is someone that's giving us money and suspecting 10 * 400 * return on investment so then that might change the way we perceive the campers we might see them as a means to an end to get more money and that's definitely something we don't want we don't ever want that to happen rights we want that's always guarantee you as soon as created by the financial structure of your company so it changes the incentive then we become a company that is focused on raising money through Kickstarter so make a Kickstarter and then down the line anymore money and I'm going to make another chick sorry then we focus on promoting that Kickstarter and driving people to our Kickstarter and that's not driving people to learning to code so we want to we aware of these things and we definitely
you know it'd be nice to make money but we we definitely want to do it in some way that doesn't affect the campers that's so freaking out is always there for anyone that wants to learn what I love about freecodecamp is that fact that it is always there to learn and if you want to make a career change to being a programmer you can do that one thing that's interesting right now we have in the economy is all of these jobs that are getting automated some people might say out sourced but I tend to think of automation is the more truthful word and the Techno utopian in me says okay people get automated out of a job they can retrain as a programmer it's not that hard go on free code Camp learn to be a programmer there is some narrative maybe it's just in America maybe this is a global thing people don't want to retrain there a lot of people who will not retrain even if the technology
there they have a pessimistic Outlook they have a lack of faith in themselves to be able to retrain and if we have all these highly damaging narratives around neuroplasticity disappearing by the time you're 23 or 24 and you can no longer retrain and you have to double down on the small set of skills you've learned before your early twenties which there's no proof that that's actually the way that the human brain works no convincing proof as somebody who is heavily involved in a project that helps people to retrain and to learn a new skill set that gets them a new lease on life and you know you can look at free code camp and find all kinds of testimonials from people who have retrain down new jobs as programmers
how do you think about this differential between people who believe that they can retrain and want to retrain and then this vast amount of people who have lost hope or are unwilling to retrain because I mean you even look at just isn't like you the the weather for against Donald Trump a lot of people who voted for Trump are these people who have lost hope and they don't feel like they can be trained at all like heavily engaged with this group of people who are retraining or are not sure are in the process of going from a place where they feel like they are not useful to a place where they might potentially be more useful if they can retrain I don't know this is a mindset shift people need to make or I don't know do you think of my framing of it is accurate what could be could be
don't have that mindset sorry training that desperation will trigger that that changing mindset and I found it for me that that's happened a couple times in my life where I was in a desperate situation and you know I didn't think about me they can't be programmer I just thought about maybe this is way to make money in you know
 not be broke so maybe that will trigger that kind of thing but there is definitely an interesting idea there like that maybe people voted for Trump looking for that that helps I don't have to reach rate I don't know if there is really any hope for people who are in those jobs that are going to be automated and I didn't truck drivers is like the biggest thing people talk about right now is such a large population in the u.s. truck drivers that potentially in the next 5-10 years could be out of job
 I am certain that we have former truck drivers in our alumni right that are now developers I think I truly think anyone learn anything new any point in life I don't think that I don't think that's true there's been tons of evidence to the contrary people have there's a story of a person who had a professor who had a stroke in his sixties I believe lost Century half of his brain and then became
 take care of themselves at that point where I don't mind trapped in an infant's body just couldn't control their body and then they retrain themselves right to use their body again by starting out as and I've been using it and toys and eventually learning to become a fully functioning adult again so I think the stories like that prove that you can teach yourself turn into something else if you're in that kind of desperate situation but I think maybe that do you need that desperate situation to trigger that change their is there needs to be some cows to trigger that I think maybe that's maybe that's the common factor of campers there is a outside of the people who have the free time to learn something new just want to learn something you may be the people who have full-time jobs in a family after taking care of maybe the desperation is there if they're living check to check the check and they want to make that change because they want to get out of the situation and into something
 maybe that triggers their their need to learn this trade right that'll help them provide for the future to Quincy some about in this is not closer related to free code camp but what do you write about this and talks about this is this idea of Facebook potentially destroying the internet I mean to say interesting framing of what Facebook is and where it's going the idea that
 it's this close version of the internet and that the efforts such as Internet. Org threatened the free and open internet I've talked to plenty of others I argue that this framing is based on over idealization of the open internet because the open and it's what we have been normal eyes 2 weeks her to have this Nostalgia towards what we refer to as the open internet so I find it qualitatively dubious to say that the open internet as we know it is better than the quote closed internet as Mark Zuckerberg may be trying to move as towards what are your thoughts on this area have you debated with Quincy about this or do you agree with him I agree with him that Mark Zuckerberg is probably one of the most powerful people in the world right now Heidi controls probably the biggest platform where people can see media I don't know how much control you really have
 sulfur like the what people see right because there is someone a switchboard moving cables back and forth that someone visits facebook.com my there's a grill them saying all these servers that are running that that show and then you have a developer team that's upgrading it and fixing bugs and adding features does not not like he has his finger on the button you know with all the fake news in like controlling that stream but he is probably you know it Facebook is probably the most powerful companies right now and he's the head of Facebook and has a controlling shares on Facebook I think that may change in the future there is recent story I don't know the details but he wanted to sell
 choose foundation and then but then he wanted to change the way the shares work so that he still has control a majority and then there's some legal issues running into now that that people are angry about that now there's lawsuit I think were the government itself you can't do that because this is one of the reasons why I don't know how big of a deal is it that you control Facebook is because while he is very powerful person there are a letter there are a lot of other people that aren't message on Facebook and if you make some move that's contrary to what they want they could organize the rest of the people what are message on Facebook and counteract him it's it's an interesting idea that he could manipulate people want a large scale I don't know how practical is it is kind of scary
 how much hour and it is scary when in when any single individual has so much power and there's no real way to remove him from power for instance if he was President of the United States in 4 years there be an election then there's a possibility that you could be deposed but if your new ruling person in a company that you're you that forever until you make a mistake alright so hopefully it's not nothing bad comes before this podcast interview about isolation working and isolation this has been an increasing topic of importance for me I think it is important to a lot of foolishness I think there are a lot of programmers who listen to the show that are sole Proprietors or Consultants or contractors and they spend a lot of time
 working in solitude and this is actually growing in importance as an issue even beyond the idea of just being a programmer working in solitude been hearing more and more about the dangers of loneliness and isolation and maybe that's just cuz I'm reading about it and I spend a lot of time isolated and I don't like it but I also like running my own podcast business I know you like running free code Camp is CTO but you don't have an office amoeba home office you spend a lot of time in isolation you were talking about the importance of meetups how do you deal with that isolation and seeing as this you know this trend of remote working working in solitude is growing how do you suggest people deal with that isolation on a larger scale
 interact with other fellow human beings right so I now saying this to you earlier I think this is the reason why the meet-up is so big here in San Francisco is one you have a situation where a lot of people are you there working in solitary working at home for instance or working in situations where they may be surrounded by people what their work is individualistic or their coating for our for hours on end without without stopping the companies that just want people to come to their offices so that they can recruit so I think you know that's probably a major factor why me up is so big and that's a major factor why I go to so many jobs it's just you meet interesting people you might spend I spend a lot of time alone and then go to the going to be
 is this I would go to so many meetups in this is like maybe 3 years ago and like I would see him everywhere and like it usually is pretty interesting guy is not his heart and he always wears like a jogging equipment like a queen like to know I don't know what you call it like working at track pants and shirts and he runs everywhere and so every time I would see you my feet just arrived you'd be just dripping in sweat does he just runs everywhere and then like you know I'd never one time I asked him like it do you want it like a paper towel or something cuz you just know because these what is the most efficient way to reduce your core temperature I was just wipe off the sweat I was just Wetmore and I was like it was very like telling of is there any telling of his characters like he works to be as efficient as efficient as possible and not in a negative way in a very positive way and that I think that's why he can do as much
 she does right site today I got a little off track there but I were talking about isolation right so I think he doesn't mind recording this but he said something like he's like sometimes I don't even feel like a human I just feel like a disembodied thing that is online all the time and occasionally I have interactions of the real world that reinforce my interpretation that I am a human and then I am not a disembodied online entity and I was like I get that feeling sometimes too I didn't know if I'd never met him I would assume use a robot of some sort of a man say I don't know how he has a family vs. Family he's like every time I'm in Skype meeting with him which I think she
 yeah it is very efficient person and he's very very interesting person Berkeley thanks for coming out softening daily the time flew by talking to you and I guess just unplug it since we didn't talk about it you are a part of real world react which is a meet-up and soon to be more prevalent online organization around react so if you are reactive LP maybe you want to check out real world react. Com meetup.com real dash world and then if I can we also have a hackathon coming up we're calling it reacted on so reactive gone.com it's going to be leading up to
 the react conf in March I think it's been officially announced so I can say it now it's going to be the react conf is a think the 13th and 14th and so I said Monday Tuesday the Saturday Sunday we're having an axon and then the week leading up to ever going to have her going to have to meet up at where it was I can't remember exactly which companies doing what we're going to meet up on the Tuesday before the conference and then Workshops the whole week leading up to it and a job fair
 add for prize is an IOS app where users can create ads to win prizes companies post these prizes as an incentive for people to make ads if you're a creative person and you love to compete you will love ad for prize check it out on the IOS app store only the most creative advertisements win the prizes like $150 cash or $100 gift certificate is your favorite retail companies with ad for prize I am trying to change the way that online advertising works and I'm currently hiring an iOS Developer to lead the engineering of ad for prize if you'd like to work with me send me an email Jeff at software engineering daily.com and if you have an iOS device check out ad for prize a d f o r p r i z e ad for prize one word check it on the IOS app store and I hope you continue to listen to software engineering daily

Transcription: Engineers love Automation and wealthfront automate your investing as a software engineer at there are certain processes do you want to execute no matter what like integration tests during a bill you wouldn't execute integration tests manually you would use a continuous integration tool like code ship or Jenkins to automate your integration tests well front is a tool to automate investing just like a continuous integration tool runs your test automatically wealthfront can reinvest your dividends automatically and perform at tax-loss harvesting automatically to get your first $15,000 managed by wealthfront for free go to wealthfront.com se daily and get started with wealthfront Slayer of automation on top of your portfolio wealthfront.com SE daily check it out it would support software engineering daily and you will get $15,000 in managed for free if you sign up
how to make your investing get back to the things that you can't on me like writing code
 James Smith is the CEO of bugsnag an automated crash detection platform for web and mobile applications James welcome to software engineering daily
 20 years ago if I was using my computer and an application crashed one of two things would usually happen I would either do control alt delete and end the application from the task manager or the crash would be so catastrophic that I would have to restart my entire computer but today crashes are handled more gracefully buy computers when a modern application crashes today how does this crash manifest at the user level whether we're talking about a mobile application or a desktop application the super interesting really berries Putt-Putt phone but you're right you don't want that to be a catastrophic failure you don't want to be stalking and have no recourse for this but you've already seen this funny yourself but it really depends on what type of building so
 all the way bass typically when I crash happens in unhandled exception happens in your software the web framework or some kind of way to cash. So you're probably familiar seeing these 500 hour is 502 hours whatever I so want to see a pretty big call my slice died and I was like this should not happen so this is the cool thing I've seen a lot recently instead of making the entire application die there's some kind of exception exception-handling you were really sorry page to your customers and the good thing about that is it the whole job
 interaction with your customer so why have I affect everyone else I've seen recently but still playing catch up with that ass when you say Uber or something heavy do you add the app just closed it didn't even say sorry didn't even come over to try it out in the wild bunch of shit to do custom is another area which is quite interesting on companies that service oriented architecture
 add that gives you a lot more complexity but it also gives you a lot more stable does a lot of things have changed
 Sysco Pocomoke now there's about 10 out of 10 or 20 different ways to learn plug into iOS Aston text five different types of Crash so the the types of crashes that were seeing are more variable but perhaps the best practices around crashes like microservices service-oriented architecture graceful exception handling with some sort of hook these these things are offset the the the large variety of new types of crashes that we have yeah that's right there are all kinds of of of of of other types of crashes it like like you said it and silver Timberlake my phone starts to go out of date and Apple
 Nations start to crash more often because iOS 3 doesn't work for as well anymore
 is the root cause we should we should talk about some root causes like obviously you know a phone going out of date is is one cause there are things like CPU memory obviously distributed systems failures what are the types of application crashes that as developers we are worried about you touched on one kind of big area. Which is the devices the code is running or not become incredibly fragmented especially in Android land of a thousand different Android devices but you know what we have stator on the types of crashes the people of seeing surprise you
 and still today the biggest cause of crashes uninitialized variables no pointed initialize variables and is like Swift and Ed languages alike hang on a second we shouldn't be 30-40 years and I'm still coming up to genuinely the biggest by 4 crash type is sorry in Define is not a function in Java and Android land at 12 every platform except for the
 tell her we fighting back now by trying to do things at the programming language level and trying to do better with static analysis before we even ship this stuff nation of devices the second biggest thing that we seen this is of course is that you didn't expect this case study but that was a really interesting bugs that we saw and Ruby in rails application to couple years ago West 78th and people like why why is blowing out what's happening and there was some kind of bug with a particular character in Swedish was being showing up as Unicode encoding what it was shipping showing up as the Swedish encoding
 cycle crazy day there news report of data and its I know you sounds on Android and a cooler out of memory exceptions having a cooling functions that are available so let's use this new sensor that they rolled out
 the paste devices of being rolled out means that there's no way you can test on every single device you can have the exact same environment setup on every single device it says the memory on a bad time but yeah especially the Monaco problems of uninitialized two variables you talked about there are some language patterns that are cropping up these days perhaps you're talking about functional programming what are the language patterns that your scene bit that could help avert these types of uninitialized variables these canonical problems that developers have weather there a new
 bell pepper or an old developer so I'm not sure if you have to explicitly variables as no local or have you have to say no this is okay if this is normal or uninitialized where you can put a? After a variable to say yeah it's cool some explicit E-40 the same being open and I-10
 so that takes a little getting used to but the Next Generation learning development stages saying I'm testing tools out there that's Emergency Services like which you can run your code through you can I too cold climate for example I think it's a great thing take some getting used to it it's a great thing
 code for grade or rank my mic functions in my closet and saying that it was around for a long time it's been around for 30 plus years
 sure you're the CEO of bugsnag and bugsnag provides automated crash detection what is automated crash detection how does that relate to the conversation that we're having a little things we're talking about I'm trying to
 what should I put for dick needs an installer from happening before we ship Asif way to a customer's old is companies in now moving to Agile development rapid iteration that shipping code to production instead of every 3 months that should be in multiple times a day so yeah we need to get best practice if you need to make sure that we not doing the obvious mistakes and obvious errors but the nature of this car outside of our control such as mobile devices mean that you'll itchy kennel catch everybody in development so the library inside your application and then went into production
 another about these questions around how how did manifest how come what do they look like these days does the exception hooks 18 official platform style which is complicated enough as it is but what happened to production was it on Linux with on Mac what server with IP addresses on any kind of information is relevant to the platform we wake up and collect and the point is we can eat around the root cause so we can say hang on a second introduction you had a million crashes crashes with pools by the same underlying line of code
 together so you can meet at you say wow there's a really bad but right now it's affecting a million customers will give you the steps to reproduce which is the bug fixed how do I reproduce this surface and then I'll give you some sexy crashes that happened to your customers
 when a developer starts using a automated crash detection platform like a bugsnag how old is the workflow of debugging change how does the the the application development process change so um you'll be familiar with this but like
 when your customers complaint which is the biggest bass case the same as which is the second thing that we've seen him all the time is because we absolutely crashes down by Route course in a group together a great them all together you can now definitively know which crashes you should fix bus so you can come in and say this crash here is that where is this next one is affecting 10 customers so you can
 show me costumes store crash and then you can use it as an inbox so you can archive them all you can do you can snooze The Witches any future we wrote out in November so you can play until it affects on little more customers for the next 6 hours to work in learning from the the behavior of our customers trying to give them the tools they need to get to inbox zero on Channel 6 every bug
 the real quick thing which I which I'd seen for my customers and I'm loving every really embracing this makes helps you become a ride over and over again that was a really cool side effects
 more applications have a distributed element to them you know you talked about microservices a little bit and there's there's a mobile or web front-end for most applications but there are lots of servers they get contacted for a typical request and whether that servers at database or some random service-oriented middleware and often times you know the the error and or an error or an undefined type of behavior May manifest at the front end that was really the result of a bug and an intermediate layer how does bugsnag have insight into those different layers of the application stack so that's another really interesting thing that's a very very difficult problem to sold because you need to capture the appropriate level of context
 the underlying root cause was the reason that we support web desktop browser mobile East for this exact reason if you have a crash that none of that might have been in a bad way I mean not go to life reseal client received Productions Clues 3 price that's one thing that we do is we train track a single user ID surrounded by transaction so if you'll talk it is something that paint started off with a user interacting with the mobile app that went off when did a web request then went into another service another sense another service we try to say
 cognitex getting right now he's on behalf of this user so then what you can do we have this prices affected this user ID so what you can do is you can track the Journey of the one use of the hat is the user involved in Austin always instigated by a customer.. It's not going to talk to use a necessarily request ID so I'm sure you seen this is sending a request ID to tie a request from point A old way for each service to the end
 custom metadata custom diagnostic data with every crash so you can say this is your quest ID expanding important feature releases to make it really trivial to see the Journey of a user or Jenny and request but he said Movie Database relationships we sometimes it's interesting to see which code cold which are the Cardinals need a stack Trace is a cool concept of how to spell when you're running Kodi production sometimes people are calling you
 get the full stack Trace so we can have enough hey this cold out to my sequel to post grades or whatever you're using for your database database right now eating without talking about Microsoft is the clients ever you can see in the stack Trace quite often if a bug was caused by a sub if you're interacting with white Hot Pro consist of
 show me a picture of Hawking about the high-level use cases in the high-level practicality of bugsnag and we did touch on how it how it actually works on the device it monitors the device for exceptions being thrown and if one is thrown it wakes up and reports data back to the bugsnag servers so that the developers can can look at those those server notifications in and see the bugs that have occurred on their clients or on their customers mobile devices so I want to get a better idea for how that works how that software on the mobile device works and end what were some of the challenges in in implementing the this lightweight layer that has to watch for exceptions could you give some color on that.
 simple example is looking at job applications so we cool notifiers on a crash detection libraries are actually on our way to text me as if you want to go to Binary from bugsnag that install this binary to watch your application that the level of trust in myself way you need to be able to trust what's happening in that the second thing is which is
 we decided this in on some we make this better than this it's the best feeling ever when you go deep into this you can check out I feel so you can see all the secret magic we do that on this thread objects that thread class sorry there's a static method cooled exception exception-handling you can say if a thread crashes run this card because you're in the jvm when you're
 pretty good and we need to know if you actually really want to go to bed like we we spent a long time you can in your job rap hook into thread. Soundcore exception hard love realistic that you can fill this off from from the basics yourself and to get it ready by does take a while but if you want to get started that something you can do and tomatoes crashed but the jvm is still running so the jvm can execute your uncle exception Handler function which gives you enough time then to say what was the stack Trace how much memory would take you to that point in time
 ancient alien in iOS and they're all like four five different types of Crash interesting because you can have you can have an Objective C if the exception you can have a signal like a segfault that's been thrown at as a couple of nuts out of things to remember one of them but that's when it gets really really nasty it's when you have to catch
 okay so let's go into that I mean the like certainly the the the language level primitive that is basically the perfect way of doing that in bucking job I like where you said you just said a listener on the thread and if this thread hits an exception notify bugsnag that's that seems like a pretty easy implementation give me an example of a language or an environment where the implementation is not so easy and you could do something trick the to spring to mind one of them is compiled language is a signal has been for like a sexual for example and the other one is a JavaScript in the browser maybe I'll drive into the the signal
 where to see application let's say objective-c and it's a signal with a segfault segmentation-fault you can hook into that signal inside the software so you can they tell me but not signal is trying to get around that says this concept of safety so if you are in a signal code in the signal emblem this certain things you're not allowed to do for example you are not allowed to make Network request you are not allowed to do things that has happened
 racing safety so you like well how the heck do we sold that's how do we get around this so you have to be creative you have to say right or left reallocate memory so that's when we start at the zoo any memory allocation with a crash of the network send it via Network safe mode scenarios that come up when you got done that rabbit-hole get pretty complex amul kind of tangible one that I think people would have seen themselves is going to Minify that job script when you ship it out to production right so you going to take your beautiful cover the comments and nicely name functions and variables that is going to be squashed out there was single line that's like function
 there will be and it's going to be completely useless
 when I say useless I mean when you need to be able to find where that came from so you and I wish function crashed so looks like for the money season in the in the crash detection Library we detect the crash we send off the bugs thing messed up name g and then we have to take that crash report I may have to recombine it with the original symbol information there was stripped out so we also need the symbol information on hold with the fire. JS you can enable Source Max and have them uploaded as well and bugs not go get infection and this is also true Android Wear
 was possible before getting it to your customers so you need to have both the crash information and the symbol information you can combine them together when you're off so yeah some of the most about as you can see in Arkansas is libraries with some of it we have to be behind the scenes cuz we're combining all these different files together
 that's great I just need a really good idea of how the product works so let's let's go a little higher level I guess so when I shop or product has a bug the process of fixing that bug off involves several different teams working together or at least one team identifies the bug and communicated to another team if a service crashes maybe the Ops Team discovers the bug from a crash does a crash detection platform help with this communication across teams like what we could you give an idea of how it helps an individual developer how does this work in in implementation with with different teams truck so people using offer up this blunt in the bedroom and then we've got development teams of 2000 5000
 then two dissimilar actually it's kind of interesting so before I think that the developer who wrote the code is the best place person to know about that crash and two sticks that crashed in some companies you're right the first line of defense one of the foundations of bucks I go and discuss with her personal level is the we are trying to empower software developers to be better software developers and fix bugs in their own software
 and it's kind of a strange concept for larger teams that have been bracing as a cycle because the more people you have to communicate between to get some things fixed the longer it takes to get to fix out so if you're watching feature you going to sing to you need to ship by the end of the week so far today she is really really important manages to take a look at what was the point of the next stage is moving them to in progress someone is working on this any bucks I got in progress means either you can find it to an engine in it inside the Box on dashboard
 using an issue tracking tool already like Chiara get Hub issues pivotal tracker that kind of stuff you can sync you can link into your issue tracker if you decided to someone who is estate Billings insulation tracker in progress so you can stop leak on fix everybody in some of the month which is meant to support our organization already so if this is a new problem is it being worked on in a signed and have we fix that you can try that into and through through bugs
 that's a huge organization
 so just to reduce a little bit of the controversy around what you might have said was you might have thought was kind of her she like an interview recent with Mark Zuckerberg and the interviewer asked him if he still coded for Facebook and basically what he said was he didn't code for Facebook anymore because they have a policy where you have to support your own code so I mean I think that's probably the end and he doesn't have time to support it but like I don't know I think that's a great philosophy like you write your code you have to support it there's no Ops Team to to protect you I think that's the Netflix model to kind of the no Ops thing is we're getting that is happening
 what city is the best person you wrote this code you're the best out the performance characteristics of this and you're a long time ago and it would be gone you would know where it is it someone else is running it and it had this in some teens in some situations you be like we're in a database query with the request request response coating model
 right and Yodas comparison of of bug snack or something like jira I also think of the comparison between GitHub the issues and these other platforms maybe it's my association with just the products I was working on when I was when I was using these to support those products but
 I don't remember feeling particularly like it wasn't a pleasurable debugging experience that was informed by those those issues or get Hub issues possibly because those those platforms are are trying there
 they're from there from an older era where we had fewer tools and and the tools were more Broad and now we're in this new era with with more developers than ever and so we have more narrow developer tools and their more Well Suited and that's that strikes me as as one thing that bugs nag is is it's this it really it is kind of like like an inbox for bugs and it's designed with with with a with a much more entertaining interface which is the time
 if you get a bug you didn't Aaron to suffer that shouldn't be scary thing that should be a bad thing that should be trying to say which feature do I build next there essential you have to use them a lot of times they would be a dumping ground and it would end up with it with a description of something in jira that would say like customer is seeing the color orange in in this in it like in the situation and as a developer you open up that chicken you like I don't know what the heck this means
 but as opposed to bug snack where you see a statue that Tracy see the type of cloth you see what the vice it was running on the customs office in the ticket that said I crash and then in the ticket it was like an app crashed we say actionability actionable problem I have the same feelings no wonder people get frustrated about these tools it doesn't end up as a chore in that situation
 tell me how bugsnag got started yet so you can probably tell by my accent I am not from the bay area in San Francisco the ice vodka in science technology in London and then in the same problem as company and things with bright Faust dating of pushing you guys brought from 10 tons per day on the same problem is manifesting in a ball one day we were talking with catching up on things and he was talking about he was working in Enterprise software and he said no I've seen the same thing in healthcare
 we have to fix this so we left our jobs a couple months later we hiked up a prototype sending out to a few customers release the beta started putting out a plan people got to pay money for it and took us from from 21 people 16 in San Francisco 6 in the UK and yeah it came is it was scratching an itch you know it's the same as any project that any software engineer builds any hoping for there any side projects like this sucks I want to fix it fix it right now and we were lucky enough and breast have to be in an industry in an air condition where the problem solving is the headset with that and we can fix it
 what is the earliest versions of the bugsnag product look like this some kind of fundamentals we had an MVP which was it hard to detect Earth's surface and diagnose that was that we had on the bridge before. So you are focusing on two very different platforms on philosophy that we we are across the entire stock Android kind of further away from each other
 in any files on the front end but that's just started bugs like that was an appetite there was an understanding the you could do trivia in stool a gym into your application dependency is it become acceptable in the produce of a community to pull a random dependencies from some other company because there was a very easy pasta detecting crashes be because it's easy trivial to drop in a jar file as a dependent
 earlier the fragmentation the pain point in production on Android there was no way of solving this before so having that centralizing to text me when you crushing production was essential so we tried to stop very far away from each other Ruby over here and I'm not kind of. Us to build an architecture of the dashboard in a set of services I'd like to talk more about the customer usage so bugsnag has like pivot tables timeline analysis multi-dimensional filters other ways to explore data this sounds like a tool for data science that are there are there like these things are useful but like virtual into a normal debugger but I think of my like think of you know times when I was just like debugging mobile application or do you buy me some random job application I can't think of when I would use a pivot table unless
 maybe like I was segmenting my customers and I wanted to find like I don't know the highest value for the most customers that had a bug you're looking for the highest expected value using let's say Uber as a crash on the request to call requested Uber page so you can actually segments your application by and dimensions the one of them is one screen was showing what action did they use a dude but you actually know the first time with one of the biggest ones and a little girl costumes you say show me crashes that are affecting paying Customs first so
 companies and companies that have no Revenue because some team has about so actually slicing and dicing this crash data is is now pretty crucial for us for our customers that predicts crash yesterday. Still train in Group Inc is pretty crucial to anyone who's got high voice application or loaded Developers
 I could see how that would be quite useful to some giant company is getting millions and yeah that's very interesting okay so another feature that you have is the ability to track deployment what are the issues that can occur during software deployment and are there any difficulties so I mean we talk some about the the the monitoring like how you do the monitoring on the device silver on the application Level that the user application Level and some of the difficulties are there any unique difficulties to two deployments yes so we've actually seen a few interesting things had the the concept of deployment tracking for us is a subset of the concepts of a release tracking a really striking so you saying I'm replacing the old version
 he's a new copy of my card is in You released on mobile a releases like this is version 2 instead of version 1.5 so conceptually you care about releases release you're trying to improve your car definitely better than last time and one huge thing that every developing the new release the word introduced to a bar in the previous research new release introduce any new problems so we have this concept say things like show me all crashes that were introduced in version 1.0 introduced in this latest deploy
 about, this living in the wild this is Production Air monitoring deploys normally does anyone to play living in the wild unless you break it down by production staging Bay know who these different environments fit in Mobile and there are in the poisoning while cuz you're at the whim of the custom upgrading their application to the point that she pretty crucial you might even want to say I don't care anymore they should have operated by now so then you can filter out those customers out of your inbox inbox that I say let's just focus on the variables love reasons why tracking it a release to rid of poison pulling the basic needs to help you hone in on the changes we made recently what are we done recently
 what's the future of bugsnag we building earlier in the conversation but it's like a productivity dashboard for a software engineer so this is not something you should be afraid of you like I'm getting better at why do this in my in my in my stuff right now we're focusing on the core Elements. Which is the most actionable thing which is identity ever heard this status is a study that came out a couple of years ago that found 49% of software developers time is spent finding and fixing bugs
 no way no way no it's fine but I was close to zero as possible because it's really boring stuff like digging and computer the really good at it so we're trying to make software that means you don't have to do that so a single object to Arkansas sap huge company can spend all of your time focused on building new features and delivering Valley 2
 that is a bright future I look forward to that will James thanks for coming this way this is been a great conversation bugsnag is a great product and I'm really happy to have had you on the show it was great to be aggressive

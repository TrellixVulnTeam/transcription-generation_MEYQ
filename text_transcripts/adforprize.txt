Transcription: there are multiple paths to constructing a piece of software from start to finish an individual programmer can build an entire product from scratch in a couple of days a giant Corporation Commission a project and delegate responsibilities to hundreds of people an open source Community can use the wisdom of the crowds to officially build something as big as an operating system today's episode is about yet another path for building software and my own experience traveling that path I designed and contracted an app called add for prize but is now available on the IOS app store designing an app and Contracting it out to an engineer to build is a worthwhile exercise for most people in the tech industry whether you are an engineer or not this post has two main arguments won the process of Designing and prototyping an app is useful and educational for anyone in the tech industry to it is now cheap and effect
to hire a contractor to build a working version of your prototype as with the previous monologue episodes such as 10 philosophies for engineers and you are not a commodity there are no advertisements on this episode please email me any feedback you have Jeff at software engineering daily.com is my email address I would love to hear your feedback the step this definitely breaks the format this episode so let me know what you think why this matters to you
everyone has an app idea and many of them are pretty good you probably had a conversation with a friend where one of you says Hey wouldn't it be great if there was a two-sided Marketplace for bacon or hey would it be great if there was an app where users could take a selfie and instantly see what celebrity they resemble the most these things would be cool but most ideas and with the ideation who has the time to actually Implement these things most of us are busy at work where we spend our time and our mental energy dealing with a technical complexity of our jobs if you are free quote smart creative when you get home from your job you probably don't want to spend your Leisure Hours reading iOS documentation and slowly learning to write the necessary code for your bacon Marketplace app Smart creatives who have a busy full-time job off and have a hobby with more immediate gratification like playing an instrument or blogging some of us also write app
on the side but if you don't already have all the requisite skills for writing an app the prospect of reading tutorials and reading documentation can take the feeling of ever publish an app and make it seem so distant as to be almost impossible to reach there are many people listening to this who are better at sales and marketing and design and product management and they aren't programming and yet they want to build a nap one common narrative is that these people are told that in order to see something built they need to learn to program and that's simply not true there is a more fun for filling way to build a nap then learning to code in Swift or react native or ruby-on-rails you can contract out the programming to someone else designing an app is a fun exercise building a prototype with tools like sketch and envision and keynote is free and frictionless
most people listen to this probably have spent some time drawing in Kid Pix or Microsoft Paint or photoshop even if it was far in the distant past when they were kid or teenager most of us know how to draw at some basic level because we spend all day seeing and understanding images drawing a second nature to anyone who can understand shapes
 similarly we all know how to design apps because we spend all day using them we understand the purpose of a button or a slider or a swipe or a minor design feature but most of us have no idea how to configure the code around this user experience we don't know how the buttons fit with the sliders fit with the text views but we know that these concepts are essential to actually building a functional app
 I'm not advocating taking a shortcut I'm advocating an alternate path that can be just as successful along with the enjoyable design process the business ideation process is also fun it's fun to imagine business models and viral loops and ways to drive user engagement but without the capability to build the app that embodies your business idea it becomes Less Fun to think about these ideas and again most of us don't relish the idea of struggling through the compiler-errors in the stack Overflow posts there an app implementation requires for a programmer who wants to build it
 we have all become product designers we are using our phones all day and most of us have naturally develop a good intuition for how a nap should function Prada design ability is naturally acquired by being steeped in technology all day if you are an employee in Marketing sales or design and certainly an engineering at a tech company you will naturally learn how to think about product importantly you probably even have a few good product ideas yourself this article is about why and how to prototype your own ideas and communicate your intent as a product designer which is an incredibly fun and important process if you can afford it you can then hand off your prototype to a contractor for engineering implementation if you work at a tech company you might have accumulated some excess cash you can invest that 5
 $1,000 that you have sitting around by Contracting a product in your spare time this can be a much better investment than something like stocks or ETFs and it's a much more satisfying and durable investment than an expensive vacation the experience of Contracting a product teaches you skills that you might not have stressed in your normal 9 to 5 job experience skills like management product design user experience budgeting Communications and Engineering limitations even if you go immediately back to sales or marketing or engineering or whatever job title you have immediately after you build released contract your app you will have gained those skills
 why now
 the first version of uber was written by a contractor the Uber Founders clearly communicated the specification for their product to the contractor and they got what they paid for Contracting Uber was easy for the founders they had millions of dollars from there earlier startups and they had a network of contractors to choose from and they had experience hiring people there is now a set of technologies that are enabling this for the average person who doesn't have a ton of money and doesn't have hiring experience reputation marketplaces like upwork and fiber and other talin Market places have a rating system that holds workers accountable in the same way that Airbnb or Uber does contractors who have maintained a high reputation through hundreds of hours will do your job well these marketplaces also provide massive accountability and price transparency a contractor who screws over naive customers cannot sustain a high rating some people have had bad
 experiences with upwork and fiber but that happens with all marketplaces
 better communication tools like Invision slack Trello and campfire make it easy to communicate with your contractor on a regular basis minimal effort scalability infrastructure like a Roku Amazon S3 and other auto-scaling products remove the complexities of building a product this makes it much more straightforward to architect and deploy a typical application for a single contractor app mechanics are becoming refined or expectations and intuitions for how certain types of apps should work are becoming refined because we have had enough time to work with these interfaces for a while that we kind of expect how a button should work how was swipe should work and this makes it easier to get things right on the first try with your design decisions there was a recent New York Times popcast podcast episode that I listen to it was talking about the app musically and there was a quote that I thought
 capture this well said musically is a social app it feels a little bit like Vine there's a lot of the similar mechanics to vine you like things you follow people and as a timeline but it's not Vine it's musically it's a new product and this point deserves a lot of emphasis because these cool new apps that are off an interesting remixes of well-defined mechanics mechanics like a news feeds likes photo-sharing map based ride-sharing overlays swiping interfaces social media integration these things are a pallet of interesting ingredients that have lots of new product mileage left there's a lot of stuff that is unexplored in these new interfaces and these types of features are so widely used that their implementation is well understood and documented so you're not going to have to hire a really expensive contractor who specializes in swiping Tech
 lakes or news feed architecture you're going to be paying a reasonable market rate because the infrastructure cheap the design patterns are easy and well understood and this is been around for a while but there's still a lot of mileage left
 want your printers
 programming ability is not a prerequisite for being a good product designer and operator and yet the negative term quote want your printer is used to describe someone who has ideas but has not built or shipped anything substantive if you listen to Silicon Valley type of podcast you will occasionally hear a venture capitalist or an angel investor use this word watch repair inner it is a fensive and shame inducing and should be removed from our lexicon but the word want your printer does accurately describe many people in the tech industry I'll be at in a condescending and discouraging manner often times this type of person known as the watch her partner wants to know what to do if they cannot find a technical co-founder someone to build an iterate on a product with
 contemporary product development literature mostly advises against Contracting but Contracting can be a good strategy if you have a product idea that you really want to get out the door and into the hands of users there are at least for conventional reasons why hiring a contractor is a bad idea and I would like to take each of those reasons and provide counter Arguments for why I believe contractors are a great alternative to building the app yourself or finding a quote technical co-founder reason number one a contractor has no vested interest and might do sloppy work this is a compelling reason but the vested interest is the rating system which allows you to vet a worker based on their previous work on upwork there's a bunch of contractors who have a hundred or more hours of work prior to when you're going to be hiring them and if they have five stars it's probably
 pretty safe bet reason number 2 if you decide to iterate on your product and have a v to the contractor can raise the price for subsequent iterations the recent this is not totally important is because a Contractor on a reputation platform that has developed a really good reputation is unlikely to do this because if they did do it it would hurt their reputation and if they did to it you can also just find somebody else because the switching cost is often not that high reason number 3 if the contractor does sloppy work you won't know if it's sloppy because you are not technical the reason this isn't necessarily reason not to go with contractors is because you can always ask a friend who is a developer to look over the finished codebase if your friend says it's sloppy then you can find a new contractor for future iterations reason number for even if your minimum viable product works it's going to fall over if you hit it
 come out of scale it's obviously going to have some breakage in it and the reason that this is not really correct is because if you just a ploy to her Roku or Amazon web services you're going to be ready for scale and also like if you build something that does hit any amount of scale I mean that's a great problem to have I want to reiterate again in today's texting there are tons of people without the ability to code who none-the-less have excellent product design abilities and great ideas I know this because I talk to people all the time and they tell me hey here's my idea for an app what do you think and often times it took great idea and then they go and don't do anything with it whether you are in sales or marketing or customer service if you want to build the product someday or even if you just want to move from your current role to a role in product management or design you should consider designing and prototyping an app and pay
 contractor to build it is such a useful experience if you have specific ideas for what you want to build and you have some extra cash lying around you can contract an experimental app and eventually I'm not talking this episode about my process of of Designing and experimenting with this Contracting process and that's ultimately going to be the climax of the story because I had such a good experience with it but before we get there let's talk about why Engineers should do this there are plenty of programmers whose job roles do not require them to think about product design there plenty of Engineers who are just spending their days writing code delegated to some back in system I spent three years engineering back into Java systems and there was a rarely an interesting decision to be made about the end users experience with the product itself it was all about implementation
 rotation is very interesting I mean people spend their entire careers like this never grappling with problems higher up the stack like product design or product user interactions and if you don't want to deal with those things then that's totally fine you will make a lot of money as a back-end developer but even if you are making a bunch of money as a back-end developer why not spend 3K 5K on delegating an app to a contractor if you have an app idea and you're just a back-end engineer who doesn't really understand friend stuff just you know spend some money on building a nap you might find that you love product design and development even more than back-end engineering this is certainly something that I discovered in this processes you know I really enjoyed the process of product design
 I have been thinking about Contracting an app ever since I heard the story of Uber's prototype the fact that it was two Engineers that started Uber but neither of them were the ones who wrote the app another example of this type of situation is Seth Godin came on my podcast and he talked about the engineering challenges of building squidoo which is the second company that he sold and Seth is a computer scientist but as it turns out the first version of Scooby-Doo was also written completely by a contractor in this was back in like 1999 I think or 1998 like in the nineties and that's you know there's a much different world and my biggest takeaways from that brief discussion with Seth where that if you have your deliverables defined up front early on you won't have to iterate much to get the product out the door you just write down those ideas that you have in your head
 and you'll get the V1 and the V1 will be what you asked for the Uber and squidoo examples are interested because both Travis kalanick who is one of the co-founders of Uber app as well as Garrett Camp who is the other founder of uber those guys are Engineers Seth Godin was an engineer they all study computer science as far as I know but they still opted not to write their apps they decided that the work will be done faster and more effectively if they just delegated as an engineer I have been building these janky minimum viable product prototypes for the last 5 years because I assumed that was the way that it had to be done each time I built one of these prototypes I designed and built an app in the end result was unimpressive because I wasn't focused entirely on the product design or the engineering and because of that I did a poor job on
 I did a poor job on practicing to poor job in engineering this is one of the most common fallacies that keeps programmers in a position where they have to take orders and work on back and systems that they don't really have a passion for the programmer is conditioned to believe that delegating something means admitting that you are incapable of doing it programmers are taught that it is more Valiant to spend hours reading documentation and doing something on your own then delegating the work to someone who won't have to read documentation and who will do it more fast and more cleanly after hearing about the stories of contracted products that turned into successful companies I decided to experiment with his Contracting process myself I decided that I would focus on the product design and hire a contractor to write the software and this is all while I was working full-time on software engineering daily anybody who listen to the show knows that that is
 at work I spend a lot of time on that but I wasn't in the last of be able to set aside time to design and then work with a contractor to create the Prototype of this app and I had a lot of fun doing it
 ideation and prototyping
 when we think of product designers we often think of a bolt of inspiration coming to an inscrutable genius like Jack Dorsey or Steve Jobs or Elon Musk the reality is the defective product design can be learned by anyone who is willing to put in the hours study the craft and iterate from Airbnb to Facebook to the wide range of products on Indie hackers.com successful products come from people who are constantly experimenting and toying around with new ideas a product designer lives and breathes research and development the effective product designers constantly studying the world and running experiments in her own life she crashed her environment to be conducive to new ideas she keeps her calendar shepherd with blank space or she can reflect and let new ideas come to the surface of your Consciousness I keep white boards around my apartment to write down product ideas and other fleeting moment of inspiration
 back in college I was on a diet of homemade Soylent and I was having awful fever dreams due to the related indigestion I had misread the recipe for Soylent that I found online and I'd accidentally put in three times the amount of fiber in my mixture as the recipe had called for I woke up at 2 a.m. from these Soylent induced fever dreams and I've heard that people often think up their best ideas when they wake up at 2 a.m. because the boundary between your Consciousness and your unconsciousness has retreated a little bit because you might have been in a dream state
 weather in opposites true I was struck by an idea for a user-generated advertising platform where companies would offer contests where people could compete to make the best ads it would make sense from everybody's point of view the company would offer a gift certificate the user would be incentivised to make advertising to win those gift certificates and it would be a perfect Marketplace I sketch the idea on one of my white boards and then went back to sleep for a few fitful dehydrated hours when I woke up I copied the idea for my whiteboard to a spiral notebook and then I forgot about it
 years later I was working at an advertising technology company and I started to see some of the in efficiencies in the advertising industry you don't have to look much further than the episodes about add fraud that I've done on software engineering daily to understand my opinion of the advertising industry I realized at that company that my idea from back in college might actually have some Merit I started building a prototype called Banner Warhol and I completed it in a few weeks along the way I see it it with some fake ads that I had made and I had a lot of fun making these fake ads I found that making ads is just enjoyable I mean it advertising is this weird medium that people don't apply
 people describe creativity to it but the most effective advertising does have a great element of creativity now you can see pictures of banner Warhol in the blog post version of this podcast and there's some absurd banner ads that I made so this is basically a a version of this idea that I had thought of in college that was a manifestation of that idea you know I knew in college that I want to build this advertising platform and I turned it into an advertising platform for banner ads so this was a decent idea but it was fraught with all this mistaken execution
 one there was no concrete hypothesis I built this rails app that was a Marketplace for banner ads but there was no way to define success or failure I built I threw it up on the website and then I didn't know what to do next problem number to there was no target user base there was no obvious way to get distribution so you know how would this ever gain traction you know every two sided Marketplace has this chicken-and-egg problem and you need some way to crack that with an early Target user base and number three who cares about banner ads the price of banner advertising is going down and down and down and down whole landscape is front fraud why would you want to go in the banner at industry so the lesson here is that I made a bunch of mistakes with this platform it's no surprise this project went absolutely nowhere
 I didn't know what I was building or why I had a vague sense that user-generated advertising would be cool and I started hacking on the idea without thinking further now part of the problem here is that I have almost no experience building front end apps and it showed with this project which is called Banner Warhol by the way if I didn't mention that already and choked because I have no experience writing front end code the code base quickly became a complete disaster and I got sick of the project and I quit it was the classic abandoned side project if you're listening to the show I'm sure you have abandoned a side project before it is not our proudest moment in the life of a developer when you cast aside that project that you've been working on for days weeks or months
 and as I said above when I was talking more generally about this idea of Contracting in this case the engineering was a distraction from thinking about the product I was afraid to think too deeply about the product that I really wanted to build because I was afraid that I wouldn't be able to engineer it if you are trying to play both product designer and engineer there is inherent cognitive dissonance because
 you probably don't have the skills to engineer your grandest idea as a product designer so this cognitive dissonance can prevent you from really thinking about the best ideas and thinking from a design point of view
 I abandoned this idea I abandoned Banner Warhol for a year-and-a-half I went to go work at Amazon and there was focused on building this podcast and that kind of brings us to today you know the podcast has become a successful lifestyle business for me it's not shooting my grandest ambitions but it's it's something that's sustainable and as I have built sustainable habits out of that I have no kind of figured out that there is some free time in my schedule and with that free time I have reconsidered this idea of user-generated advertising that has stuck with me since I woke up on that fateful night in college with Soylent indigestion and more recently I read this book by Kevin Kelly who was talking about user-generated advertising Kevin Kelly is this futurist and he wrote this book called The Inevitable and when he wrote The Following quote I knew that there was something that
 and not explored yet with my user-generated advertising ideas quite yet so this is a quote from the inevitable which is a book I really liked I really recommend
 with a peer-to-peer system these advertisements would be created by passionate and greedy users and Unleashed virally into the blog wild where the best add would evolve by testing and redesign until they were effective and quote
 if you replace the word blog with social networking the idea for peer-to-peer advertising becomes quite compelling social networks are where advertising is most effective today so the question becomes how can you build a user-generated advertising platform into the social network ecosystem
 Snapchat has tried this in certain ways Snapchat has added features around user-generated advertising and there's also Instagram models I do follow some Instagram models not going to lie and these Instagram models often make deals with advertisers where they take a picture of them self with some shoes or a purse and you know this is user-generated advertising they get paid like $5,000 for posting a picture on Instagram and these ideas scratch the surface of user-generated advertising a Snapchat you can make a picture of yourself and you can make your face superimposed on a Taco Bell taco and that's user-generated advertising but these are these are features and the things that user-generated advertising is not just a feature is not just an idea that you patent like so many people have tried to patent
 user-generated advertising is an entire medium of expression and I wanted to build platform for making advertisement I want to build a platform where people could creatively Express themselves through these advertisements and the advertising networks will function as a distribution agent for these people who are making ads like people should be able to make advertisements for products and ideas and movements they should be able to see each other's advertisements they should be able to like and comment on their advertisements and they should be able to connect with the Brand's who want to use those advertisements this would lower the cost to the branch Who currently work with overpriced ad agencies to make their ad campaigns so this was my hypothesis my apologies supposed to build this peer-to-peer advertising system and with this hypothesis I wanted to figure out what was the minimal way to run
 experiment to figure out if people actually wanted to use this thing do people actually want to make ads
 I was thinking about this question when I was scrolling through Instagram and I saw a cash a of people who are already making their own ads Instagram Fitness instructors and models yes I follow Instagram Fitness instructors and fitness bottles many of these people are trying to build a personal brand of some kind and in doing so they advertise for products like protein shakes meal plans and fitness programs at these people may have like 2000 or 5000 followers which is respectable but it's not highly monetizable it's not like a Taylor Swift level following so most Big Brand will not do business with this type of person none-the-less these people are classified as influencer marketers this mid-level amount of influence is going largely uncaptured it's like blogging before Google AdSense the way the you advertise is just not as good as it could be if there were a turnkey sis
 from Instagram to vine to YouTube to Facebook there exists the challenge of connecting influencers to brands that they should be representing but I Instagram this problem seemed the most cute because Instagram is so big and so pervasive it's so fast growing so my idea for a workflow was somewhat similar to Instagram the user would take a picture or a video to use the word attach a brand to the media turning it into an advertisement and then the user would post that advertisement to Instagram or to vine or SnapChat or whatever other medium they wanted to but firstly I was thinking about Instagram I was thinking about solving the problem of The Advertiser who would love to get a message out to a bunch of people who are using Instagram and who could potentially use influencers on Instagram as a medium to broadcasting that message so
 it would have some familiar mechanics of a photo sharing apps that people would feel like they were using some of that used before and I knew that I wanted to have this work for that was somewhat similar to Instagram so I took out a notebook and I started drawing some diagrammatic ideas I had the idea flushed out on paper and then I moved to sketch which is a Mac Tool for doing things that are kind of like Photoshop and what I end up doing with stitching together all these pictures from Google Images to make a design that looked kind of like app design it was just a bunch of pictures of stills from a nap and I think people call this wireframing in the design industry and if you go and look at the blog post that accompanies this audio podcast then you can look at the wireframes and I made for this is why our phones were not that hard to make I don't have any
 asportation design I was just literally taking pictures off of Google Images and frankensteining them together but I made wireframes that described my idea and I think I really think anybody can do this so after I created the screenshots for the workflows that I wanted these wireframes I put together an Envision to further describe the functionality of the app to whoever I wanted to show it to and talk to you about it in vision is this fantastic product for communicating you access in design it's like a tool for connecting wire frames to each other you can basically take one wire frame and they can draw a little area around certain part of that wire for a man to hit his area to find the button when you click here you basically hyperlink to some other wire frame and you can use this to connect wire frames different wire frames together to make something that operates
 like an app so this is a really good tool for somebody who is not a programmer to convey the ideas of the workflow that they like that they would like in their app implemented so against Envision I recommend checking it out I like it because it's easy to share your prototype I have heard that at Apple product designers use something called keynote to create prototypes that feel like app so that's a viable traces well I've use keynote a number of times it's great for making PowerPoint like presentations and if you think about a wireframe prototype thing then it's kinda like PowerPoint you've got little areas that you click you go from one static image to the next static image kind of like a PowerPoint
 so when I finished this prototype I wanted to get it implemented I wanted to get into the hands of users cuz after I was when I was looking at this prototype I was like this is a great model for connecting Brands and connecting influencers but the thing is I was working on software engineering daily full-time I already had a lot on my plate so it was important that I use my spare time efficiently there were a few weeks it went by where I tried to learn modern iPhone programming I did a little bit of iPhone Contracting like 5 years ago and my pace of learning today was so slow and I was not motivated by learning the syntax and the design patterns that you have to learn in Mobile development so thinking back to how Uber and Scooby-Doo were made I decided to contract my advertising platform and at that point I was calling it adds to gram which
 sounds like Instagram I later on changed the app to be called ad for prize because I think it's a little less of a copycat typing a week's game even though Instagram I certainly borrowed it's Sheriff features from other platforms who showing it not be named I didn't want to copy the name
 Contracting
 I logged on to up work and I searched for iOS developers with experience on photo sharing apps I quickly found somebody who was top rated and worked for $66 an hour I asked him for a demonstration of his work and he showed me a photo sharing app that he had built in the past which he was able to reuse some of his code from I sent him the prototype for my app ad for prize and I asked him for a quote as well as a description for how he would build the app his price was very reasonable and the architecture that he proposed was totally simple made sense to me so we got started with a first simple set of Milestones to hit as a software engineer it was easier for me to evaluate that this contractors estimations of time and cost were reasonable and if you aren't an engineer you might not have this ability to evaluate the estimations that the contractor gives you but you can always check with an engineer friend
 see if what a contractor is offering you is fair upwork creates an escrow transaction for each set of Milestones that you define Ida find milestones in terms of high-level functionality and capabilities that were a sub component of that functionality for example the following list of user story functionality requirements could make up a single Milestone so the high level requirements are the following taking an editing a picture or video or uploading it from the photo library and then I had these sub-points that were essentially defying the finer grain functionality of this requirement such as I can take a photo or select one for my photo library I can shoot a video from different segments like Vine or Instagram I can use a brand search feature with an auto-complete or I can select a brand for my picture or video and I will add as a logo
 I can move the logo two different locations in the picture in order to make an advertisement so this is me defining a milestone a milestone and a set of sub components that make up that Milestone and I think when you break down the functionality into a line of its describing the high-level functionality suggest taking an editing a picture or video and then you define that in more granular terms that are defined as user stories such as I can take a photo or select one for my library I can use brand search then you start to put yourself in the shoes of the user and you start to think am I covering all the use cases that the user would want with this app and you can just do that for every feature of the app that you want and it can be really useful for really breaking down what is the nitty-gritty user cases that you
 are going to have to have your contractor Implement and if the contractor says something is taking a long period of time you can very much delve into what is the specific aspect of this app it's taking you a lot of time we broke it down into these milestones we broke it down to the sub components of a milestone you should be able to tell me which one is is taking a long time and they will be able to so I recommend getting around ambiguity by being really specific about your Milestone each Milestone was a small amount of money we broke up the amount of money that I was to be paying him in terms of these Milestones so that gave me a feel for the pace at which the contractor worked help you predict what the final budget might be even earlier because I was able to extrapolate from the early Milestones okay how much is it going to do this going to cost with every
 future Milestone how is it cost going to grow over time and after each Milestone the contractor sent me a working version of the app thus far so I wouldn't got a feel for how the apples performing it wasn't like we're going to do everything and then he's going to throw it over the wall and I'm just get tested bunch I was it was a very much a cycle of him building small components of the app handing it off to me and then I would essentially do user-testing and then we would agree on the next streak of milestones and this was a somewhat slow process but not because of either of us were working so just because of the back and forth but it was it was a very enjoyable process I was testing the app after each Milestone this put me in the shoes of the user and during testing I identify issues so one time there was a complex issue that I identified that had to do with the search feature on the app and I made a flowchart to describe how I thought it would work in this flowchart
 somewhat technical in nature was another thing that was an advantage of being an engineer because I was able to describe things in a higher degree of technicality I had to do with databases and stuff like that but it wasn't that complicated the main you know this was a great point of communication between me and the contractor because showing him that I was willing to draw a detailed technical flowchart show that I wasn't just expecting him to do all of the technical work I was willing to help him out and I think Contracting really is it can be a partnership I mean you don't just throw something over the wall to contract inspect expected to get the job done well it can be a very enjoyable Partnership if you work closely with the contractor so for months after initially contract in the app the functionality is complete the price tag is under budget it took about $3,100 to build and I gave the contractor $400 bonus for
 a great job and being really responsive and now it's on the App Store you can download add for prize in the IOS app store I use the app on a regular basis not just for making a ad that use it for all kinds of interesting photo creation and I'm really looking forward to seeing how other people respond to it and use it especially if you're a listener of software engineering daily and you know I've been very focused on everything related to software engineering for the last year-and-a-half this product is really one output function of that Focus I mean I haven't just been focusing in terms of doing this podcast have been focusing in terms of how can I learn as a software engineer as somebody who likes to see things built ad for price is really the product of that so again if you're a fan of the show I would love it if you checked it out and gave me your feedback on ad for prize and also if you like it of course
 the app on the App Store I have not asked for ratings on the iTunes Store very often for this podcast mostly because I am not convinced that ratings matter that much for podcast but they definitely matter for apps in the App Store so I would love it if you check out ad for prize
 epilogue
 for many people the most coveted job in Tech right now is quote product whatever that means product design product engineering or some combination of them
 we dream about drawing something on a whiteboard in a conference room during a meeting and then seeing the finished product come across our desk a week later so we can evaluate it we can critique it we could send it back for another iteration this gets us closer to that dream of being something like a Steve Jobs figure how do those whiteboarding product Phenom get such an awesome job it's because they practiced and they got good why else would anybody talented follow their lead one way or another these quote product people have accrued experience and they are rewarded with responsibilities
 ad for price has gone from being a Soylent induced nightmare idea to a reality that you can download from the App Store now Begins the long cyclical slog of getting people to try it out and realizing that they numerous ux issues make it confusing and terrible I'll probably have to pay a contractor for continued alterations and that's all okay my hope is that the app get some traction and enough traction that it will make sense to hire somebody full time to work on it on that note if you're an iOS Developer and you're interested in working with me on a surprise please send me an email Jeff at software engineering daily.com and if ad for prize Falls completely flat nobody cares about it that's okay too I have had a ton of fun building it in the education was worth twice the price I'm happy to pay the cost of intuition and I really hope that you listeners have enjoyed this episode and they've gone something
 love it and hopefully you've gotten some ideas for how you might build your next project and see your independent software developer dreams come closer to fruition thank you for listening
